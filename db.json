{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/网络.lnk","path":"images/网络.lnk","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/cat.ico","path":"uploads/cat.ico","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/dot.gif","path":"uploads/dot.gif","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/grid.png","path":"uploads/grid.png","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/normal.cur","path":"uploads/normal.cur","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"a1c8fc4022d4da0a516de844124acf96de564b2b","modified":1557907383609},{"_id":"source/.DS_Store","hash":"8e65ee7b53b250ed7b214b4c716b0e7456c9f723","modified":1557907383608},{"_id":"source/CNAME","hash":"4824c6665150ad70a70790aa5b34b5a07c1fb066","modified":1557907383609},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1557907383620},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1557907383620},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1557907383620},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1557907383622},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1557907383623},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1557907383623},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1557907383623},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1557907383623},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1557907383624},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1557907383624},{"_id":"themes/next/README.cn.md","hash":"87950c415dd162ff78e98b41f1148b85462103e2","modified":1557907383624},{"_id":"themes/next/README.md","hash":"927f82cfeb5969a89b815b5ec3a3f2881e3b1bb4","modified":1557907383625},{"_id":"themes/next/_config.yml","hash":"f872af928b434e15b82be0c89f38c0b21575e131","modified":1557908473735},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1557907383625},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1557907383626},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1557907383649},{"_id":"source/_posts/30-seconds-of-js.md","hash":"810acba8fbf0f0e11620bff6e5d53cdfc76c3855","modified":1557907383609},{"_id":"source/_posts/React-js-book.md","hash":"8faac0d5b0d837ac0c54321e3ec30e4d62bcda18","modified":1557907383610},{"_id":"source/_posts/VuePress.md","hash":"2317111239183a927dfc20443d098a6a1a145336","modified":1557907383610},{"_id":"source/_posts/daily.md","hash":"52b4b267c4abae00522dc19c03dd286f6d4519ba","modified":1557907383610},{"_id":"source/_posts/git-command.md","hash":"e2d9abc3b6296738d1b1adce3b5e0be1ba5098a7","modified":1557907383611},{"_id":"source/_posts/graduate.md","hash":"1458f2f42d8b98451f97851b79071403ede52a78","modified":1557907383611},{"_id":"source/_posts/hello-world.md","hash":"e63aae9a71f83f88efe0757bb69e949501ab745a","modified":1557907383611},{"_id":"source/_posts/hexo-git.md","hash":"a5eba36b8ce2dd75237a16e05462ef8f41e5b610","modified":1557907383611},{"_id":"source/_posts/hexo-top.md","hash":"6f6f235ffb2acb40095ef6eb5c30116efcf48c89","modified":1557907383612},{"_id":"source/_posts/lufuy.md","hash":"d4491e7999d7c050d995812a5bfd2ce8d7cf264d","modified":1557907383612},{"_id":"source/_posts/prototype.md","hash":"86a7efac78d9ed7cd89bdf1df861b293fcdbe604","modified":1557907383612},{"_id":"source/_posts/summary-of-2018.md","hash":"b56abbc402db3502b2ca1d96afc616f4e741a343","modified":1557907383613},{"_id":"source/archives/index.md","hash":"4a2bcfb4d9d9ba136284379406c2e04368c81393","modified":1557907383614},{"_id":"source/about/.DS_Store","hash":"02ac821b1031e449d9bf7d7a0cbfb3eb484484c7","modified":1557907383613},{"_id":"source/about/index.html","hash":"62f6286d3ec2a27b283aa41daa8184aa00300d5a","modified":1557907383613},{"_id":"source/about/index.md","hash":"d444ed37d2556983a8871afcefda38a0a57a939b","modified":1557907383613},{"_id":"source/booklist/index.html","hash":"99acbeea560d6fd4e527da9f92fb23ebeaa94242","modified":1557907383615},{"_id":"source/booklist/index.md","hash":"3b6d2473c8d12e81192a8c1baf376f0f8f6379e1","modified":1557907383615},{"_id":"source/categories/index.md","hash":"b2cec2051d2be19d8add25f71db07a74b1468387","modified":1557907383615},{"_id":"source/friends/index.html","hash":"0d46c2d33948c329363278b3c0d6fd3e9aeb2f90","modified":1557907383616},{"_id":"source/friends/index.md","hash":"08526a2df8a89498d765103caa8240e7b7c5b744","modified":1557907383616},{"_id":"source/home/index.md","hash":"3d28ce25a5162427dc7d91da086f9be702ffe623","modified":1557907383616},{"_id":"source/lab/index.html","hash":"c6095aff88f96ac8fde32e456c12e38298e8c4a0","modified":1557907383617},{"_id":"source/lab/index.md","hash":"bf97dda3d0c31dd2dd373ca1fe3db1aaf2d70b3f","modified":1557907383617},{"_id":"source/message/index.html","hash":"1b4914f6b4f84522f90a72da6e349d0e32cc5827","modified":1557907383618},{"_id":"source/message/index.md","hash":"d89075ec0f22875ce0de9eaa143648fe8edd9963","modified":1557907383618},{"_id":"source/search/index.md","hash":"04b681937d7fb7cee55487577003d1bdc8789719","modified":1557907383618},{"_id":"source/tags/index.md","hash":"7cc25f8ca7056772b6bb5a713add6ad615529d9f","modified":1557907383619},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1557907383621},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b1ec000babd42bb7ffd26f5ad8aac9b5bec79ae5","modified":1557907383621},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1557907383622},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1557907383622},{"_id":"themes/next/languages/zh-Hans.yml","hash":"269ab6c67004e2854fa2509f994340e301b57fe5","modified":1557907383626},{"_id":"themes/next/layout/_layout.swig","hash":"9f533a0779f26564de9b46f88c7dcf2c4cb4f45a","modified":1557907383627},{"_id":"themes/next/layout/archive.swig","hash":"6222938874962051560c2dcf5fdb7befb9308084","modified":1557907383648},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1557907383648},{"_id":"themes/next/layout/index.swig","hash":"66471a29b01f9a86e045e6946a2a79b5551d29da","modified":1557907383648},{"_id":"themes/next/layout/page.swig","hash":"eda3416fd507229e186e6d507ed5bdfb22243721","modified":1557907383648},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1557907383649},{"_id":"themes/next/layout/post.swig","hash":"ca55a955e3a6a37a7d7043ed02f042cc5b2651cc","modified":1557907383649},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1557907383649},{"_id":"themes/next/scripts/codeblock.js","hash":"e0595f2e4c7a5f10762628d5bdb847437903257f","modified":1557907383650},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1557907383650},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1557907383650},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1557907383732},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1557907383732},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1557907383733},{"_id":"themes/next/layout/_custom/canvas.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557907383627},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557907383687},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1557907383627},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1557907383627},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"965a61b5d4fbce52aa61378b1f4702eb83fcbc4d","modified":1557907383628},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1557907383628},{"_id":"themes/next/layout/_macro/post.swig","hash":"ff74d1718fee0484fd95c3df766349ee03ce2354","modified":1557907383628},{"_id":"themes/next/layout/_macro/reward.swig","hash":"7128e76efb86f9d61e8dda39f6a871af1c1d1621","modified":1557907383629},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1557907383629},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"d6ad9c9f5b597780481d6b5ef905fe2e05a4a745","modified":1557908347527},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1557907383630},{"_id":"themes/next/layout/_partials/footer.swig","hash":"9f05d1af66eb6e167800c657eef60e2cfe3bc114","modified":1557907383630},{"_id":"themes/next/layout/_partials/head.swig","hash":"bd1aa9e1a990ad3280dfdbb7575d070d12d44f38","modified":1557907383630},{"_id":"themes/next/layout/_partials/header.swig","hash":"8ebf5cdb6b769ebb2ff3e9a51fe18553f4765e55","modified":1557907383632},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"dbf5b7a18f6203273105179ca4186868092d1289","modified":1557907383632},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1557907383632},{"_id":"themes/next/layout/_scripts/activate-power-mode.swig","hash":"ce84096a15028c1a6f4104a65b7a99787a3b210b","modified":1557907383635},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1557907383635},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1557907383635},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1557907383637},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1557907383644},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1557907383644},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1557907383644},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1557907383644},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1557907383645},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1557907383645},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1557907383645},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1557907383651},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1557907383651},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1557907383652},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1557907383651},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1557907383652},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1557907383652},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1557907383653},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1557907383652},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1557907383653},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1557907383686},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1557907383687},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1557907383687},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1557907383688},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1557907383688},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1557907383688},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1557907383688},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1557907383689},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1557907383689},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1557907383689},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1557907383690},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1557907383690},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1557907383690},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1557907383690},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1557907383690},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1557907383691},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1557907383691},{"_id":"themes/next/source/images/网络.lnk","hash":"92074c6bd251eb4d8f22fc7fa839af7ac3420cc9","modified":1557907383691},{"_id":"themes/next/source/uploads/cat.ico","hash":"d743173f426997bd5362dfc93ff81a4f2f4be65d","modified":1557907383731},{"_id":"themes/next/source/uploads/dot.gif","hash":"0a1bc9b70ab142d7b85727dcd1d96f0c4a72391c","modified":1557907383731},{"_id":"themes/next/source/uploads/grid.png","hash":"c2ef59db0838c5a17f74c0d25f9c508a6ab2a803","modified":1557907383731},{"_id":"themes/next/source/uploads/normal.cur","hash":"4e784fa1e9630f782a379667423c4886b02c5545","modified":1557907383732},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557907383636},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557907383636},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557907383675},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557907383675},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557907383676},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557907383685},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557907383686},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1557907383631},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"d8d021fb96fd195824758666aa535dc90fa08b67","modified":1557907383631},{"_id":"themes/next/layout/_partials/head/meting.swig","hash":"09109c346652e52af9a2944e26e85b1beb1a463d","modified":1557907383631},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1557907383633},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1557907383633},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1557907383633},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1557907383633},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"e3dad3704cf5b1954890beeb5a66f412aff2961a","modified":1557907383634},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1557907383634},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1557907383634},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1557907383636},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1557907383637},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1557907383638},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1557907383636},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1557907383637},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1557907383638},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1557907383638},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1557907383638},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1557907383639},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1557907383639},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1557907383639},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"331d91c1ba890c05385f7629e1ade3dac61765ca","modified":1557907383639},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e095257999ade515fe216d833da7596432262311","modified":1557907383640},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1557907383640},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1557907383640},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1557907383640},{"_id":"themes/next/layout/_third-party/comments/animatedText.swig","hash":"b0d70e4e5bf82d971d3923754debbff92b6ce066","modified":1557907383641},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1557907383641},{"_id":"themes/next/layout/_third-party/comments/cursor.swig","hash":"dc7f9550b8836b8ef3ed81d1ef1d38a63a845984","modified":1557907894288},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1557907383641},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1557907383642},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1557907383642},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1557907383642},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"330400cd8ae6b7cc2c7ec4e320004c99f2da63ac","modified":1557907643600},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1557907383643},{"_id":"themes/next/layout/_third-party/comments/vedio.swig","hash":"bb72a748fdfc4961e023a444b10c8656d50baea7","modified":1557907599360},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1557907383643},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1557907383643},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1557907383646},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1557907383647},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1557907383647},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1557907383647},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1557907383675},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"aec4d8b9dd1c4e7ea3769c61edfba1b2b3136fc1","modified":1557909103429},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1557907383676},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1557907383676},{"_id":"themes/next/source/css/_partial/copyright.styl","hash":"125b9c7cf69cb0cc1dbb426c3eca1ce881a6cd5d","modified":1557907383676},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1557907383685},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1557907383685},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1557907383685},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1557907383686},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1557907383692},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1557907383692},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"fe051296a4c2e5ad198bfd77cc17619b69219916","modified":1557907383692},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1557907383692},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1557907383693},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1557907383693},{"_id":"themes/next/source/js/src/motion.js","hash":"7fefb7eeaaed9808860b2b6436b25f2d9a600259","modified":1557907383693},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1557907383694},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1557907383694},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1557907383695},{"_id":"themes/next/source/js/src/utils.js","hash":"0ecd15dbb2109c6a802f0f80761108230f068433","modified":1557907383695},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1557907383699},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1557907383700},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1557907383701},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1557907383707},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1557907383707},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1557907383707},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1557907383707},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1557907383709},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1557907383709},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1557907383709},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1557907383709},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1557907383710},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1557907383718},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1557907383719},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1557907383719},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1557907383719},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1557907383719},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1557907383720},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1557907383720},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1557907383720},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1557907383721},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1557907383721},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1557907383721},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1557907383722},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1557907383722},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1557907383722},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1557907383723},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1557907383723},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1557907383723},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1557907383723},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1557907383724},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1557907383724},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1557907383724},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1557907383724},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1557907383725},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1557907383725},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1557907383725},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1557907383726},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1557907383726},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1557907383729},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1557907383729},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1557907383730},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1557907383730},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1557907383730},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1557907383718},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1557907383646},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1557907383646},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"64340a73a8a73a1189aff234d347f48ea66c333d","modified":1557907383654},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"69ba6b0dfc4b6474c3f3dd00fe6975fa7db80c24","modified":1557907383654},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"6ce6f7fa2fb1a6519d41974afe02dc1d989baffa","modified":1557907383654},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1557907383654},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1557907383655},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"a774ac514533ec7057104279223268e9d2a016a8","modified":1557907383659},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1557907383667},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"824aa80483f1290bef194a9f23573031fc82bc21","modified":1557907383672},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"94b4fefff23ce1e4878847debafb41a9ed8dd996","modified":1557907383673},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1f0fabb4938190fae27c65897a4b927458e2f689","modified":1557907383673},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1557907383673},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"a60c51f01f2a8756ffe2fbe9a36f371b4cf711da","modified":1557907383674},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1557907383674},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1557907383674},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"61c90600eda9ac9317f573b4b5a3e019b2325b1f","modified":1557907383677},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1557907383678},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"ddd63bab90c96897bde24d26ddde6845724637a6","modified":1557907383678},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1557907383678},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1557907383679},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1557907383679},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1557907383679},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1557907383680},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1557907383682},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"6ea4f808dceb9505e27f90e145f6bb1877929b47","modified":1557907383683},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0358a96fb22184057b9fc65f303365f392aee39a","modified":1557907383683},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1557907383683},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"3d43858e51e7b9b2d090092f48d67a68c066fa14","modified":1557907383683},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1557907383684},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"f6ecb0d322a711cf610c13405e731468eedc967b","modified":1557907383681},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"38d5a7666e748b6a81d70af83e1a64bbe0125083","modified":1557907383681},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1557907383682},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"0be097ec56c236d9cbe7f91ab02629dd052dc9d4","modified":1557907383681},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1557907383681},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1557907383694},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1557907383698},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1557907383698},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1557907383701},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1557907383702},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1557907383702},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1557907383703},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1557907383703},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1557907383703},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"efd65dbeb6f8c3787f08b9c0ff92fd952507bc40","modified":1557907383706},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1557907383706},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1557907383706},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1557907383708},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1557907383708},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1557907383710},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1557907383711},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1557907383711},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1557907383728},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1557907383728},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1557907383697},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1557907383717},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1557907383717},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1557907383730},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"e0064ef9f2632d0359130f5355b9c8ce3ba90401","modified":1557909474492},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1557907383657},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e3afae9ccbf7202e181730227d44adaaf51e200a","modified":1557907383657},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1557907383657},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"04097c8e2fa1ddc1724bc18d19a3b16a822e8f93","modified":1557907383658},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1557907383658},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"378effe01928ddebaf372809d5863b795f3ac619","modified":1557907383658},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1557907383659},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1557907383659},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"714decf4c4b56b3081af399907524b30a9d36ff6","modified":1557907383660},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"e6ca076bc5a1bc37e3fdd34aca3d13060580bbd3","modified":1557907383660},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"ce1fb7351044d81b5b45b29cd49fcb221b43f4c2","modified":1557907383660},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"eb5ccdfda8a6fef6e6fafc7814a0a594640f5942","modified":1557907383661},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1557907383661},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"3a8d293781bd7e1e498be8c13e3f4f8a01aad28c","modified":1557907383661},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"ba5ad5d47cc847466e3753fd6bdf6f4fb57ad261","modified":1557907383662},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"92c042810eca149f5f39ebb1127a301b62eca384","modified":1557907383662},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1557907383662},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"3311ec93221a7575ae277af9f721df26436da555","modified":1557907383663},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1557907383663},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1557907383663},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"cd2a9be0d8042721da7fbfa9a269f8c09e339593","modified":1557907383663},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1557907383664},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"e2a25085b277074e520c2faef68a20dae28d51ad","modified":1557907383664},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"6d0b61477cf96d96a6ecfc2ce7d3a0ab61c9175f","modified":1557907383664},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1557907383664},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1557907383665},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1557907383665},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"63d0ba74e661d51dbe3df029bcfac21113d7715b","modified":1557907383665},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"d082b8d09a6037886a1e3c4a16db13ec34b59fd5","modified":1557907383666},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"11d56b78f5e0c968b1655d3d1bae7d9805981d06","modified":1557907383666},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"ace08b48001863e5f09000d4aeebb644663f667d","modified":1557907383666},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"c48f4131eb372f1b5ec3594647e4bb84dc0fad60","modified":1557907383666},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"c50abf63285ffecc73dd9540aa4461e2122427fe","modified":1557907383656},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"47ef9442d6ff918c7b10bfd5c1836145e25eca63","modified":1557907383656},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c794591c9caa50755ac2a20ab0d286b2b2e3b73d","modified":1557907383656},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"67c943254fc6cbc945b19ff0eb2e06d2c6e70c1c","modified":1557907383656},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1557907383670},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"e881690a2a38b048efd3937624bb3b309ff59450","modified":1557907383657},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1557907383659},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1557907383670},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1557907383670},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1557907383670},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1557907383671},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1557907383671},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"3bcf839adf7619b22dc8615c372580760ee6678e","modified":1557907383671},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"a4dcd52708262657fc354e2e02e8d1429e6d92a0","modified":1557907383671},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1557907383672},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1557907383672},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1557907383667},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1557907383667},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1557907383667},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1557907383668},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1557907383668},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1557907383668},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1557907383669},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1557907383669},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1557907383669},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1557907383680},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1557907383680},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1557907383682},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1557907383696},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1557907383697},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1557907383696},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1557907383696},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1557907383697},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1557907383698},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1557907383704},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1557907383704},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1557907383704},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1557907383705},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1557907383705},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1557907383705},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1557907383712},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1557907383716},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1557907383714},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1557907383700},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1557907383715},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1557907383727},{"_id":"public/atom.xml","hash":"b0aa974ab68c298e987dfa50c6fe15b49780a61e","modified":1557909966894},{"_id":"public/about/index.html","hash":"fd4f522697383b85654bfe7910c6d3d9e873d604","modified":1557909966920},{"_id":"public/friends/index.html","hash":"6bfa47ed75204ac0262f66f726c051ae4be187ae","modified":1557909966920},{"_id":"public/booklist/index.html","hash":"bf559c95d586401d8867018869c4876177802224","modified":1557909966920},{"_id":"public/404.html","hash":"38aebde14407c702b2ae028216fbbd3635f2654e","modified":1557909966920},{"_id":"public/message/index.html","hash":"07b84fec28b61243939af4400dc26e88da8920aa","modified":1557909966920},{"_id":"public/archives/index.html","hash":"f0a206665a3532c9589bd765df3dfd4e1be0febd","modified":1557909966921},{"_id":"public/categories/index.html","hash":"ffe7b5a64150d6b2859db6c68e09c78317de49c0","modified":1557909966921},{"_id":"public/home/index.html","hash":"c939eb5b3cbbb0acd3fd0aec5111088a8d3aa31f","modified":1557909966921},{"_id":"public/lab/index.html","hash":"fd100035a7ac7af5b89cbf46d6e0cc9996fda539","modified":1557909966921},{"_id":"public/search/index.html","hash":"2acdd21a80f17f508a4d4bb0175f8cd255b58b1a","modified":1557909966921},{"_id":"public/tags/index.html","hash":"6e15dda97cb2d12a4b2e310f61428b1a52bb8866","modified":1557909966922},{"_id":"public/30-seconds-of-js/index.html","hash":"2c4a796ece3cc80516d98d50b872b0d6cc795377","modified":1557909966922},{"_id":"public/React-js-book/index.html","hash":"bf56d9136919345c819e79f65d17bc1d520236ba","modified":1557909966922},{"_id":"public/summary-of-2018/index.html","hash":"fb6f3d4fd6474f8707394b07c18fb44150a6460f","modified":1557909966922},{"_id":"public/prototype/index.html","hash":"0900278f025c21bc19d8df5130da4a2373748ccc","modified":1557909966922},{"_id":"public/graduate/index.html","hash":"40e006b8646c088198a730d5f9d6dea3ab915ab1","modified":1557909966923},{"_id":"public/git-command/index.html","hash":"2c1f06573a044d93ed2ea9f235b26d85d1e6a231","modified":1557909966923},{"_id":"public/hexo-top/index.html","hash":"b7d5e4104157208a9faed41c32ca17e31bdda889","modified":1557909966923},{"_id":"public/VuePress/index.html","hash":"c490e26c517ef9b7edae7e84cfbe5e2e84809227","modified":1557909966923},{"_id":"public/daily/index.html","hash":"63794219943d53997712c1b6f38f83defdfa8132","modified":1557909966924},{"_id":"public/hexo-git/index.html","hash":"bc03926e6053cb413d5b888bd55014e0fae2d215","modified":1557909966924},{"_id":"public/lufuy/index.html","hash":"c92a6541ea16ddc005f4e1b4bf5211ccd3127916","modified":1557909966924},{"_id":"public/hello-world/index.html","hash":"3d514360a22122e5ffc0c1476f65644da4af3557","modified":1557909966924},{"_id":"public/archives/page/2/index.html","hash":"f63a14ec6b95d7ce4ce49fb9641b53dd5947490b","modified":1557909966924},{"_id":"public/archives/2018/index.html","hash":"3945e821c204eb3fb6ba9e4308e54e5513ed75af","modified":1557909966924},{"_id":"public/archives/2018/page/2/index.html","hash":"0370ecc65ab11983c5be0282f1c552c43950119d","modified":1557909966925},{"_id":"public/archives/2018/03/index.html","hash":"b1eef89429b7bd865c1f82ec2e3dca34e9c1fb03","modified":1557909966925},{"_id":"public/archives/2018/04/index.html","hash":"9ff18cdaff451a2d8ad6078d6acc323dde5fe41b","modified":1557909966925},{"_id":"public/archives/2018/05/index.html","hash":"6123cba12eec99d18b5f6b5b3fb232ef193ee9a4","modified":1557909966925},{"_id":"public/archives/2018/06/index.html","hash":"462f00e57596da44d46006a3fda1c7adee7b4128","modified":1557909966925},{"_id":"public/archives/2018/07/index.html","hash":"9c3bfebab29656e895cd7288ddfde973eb29a1bc","modified":1557909966925},{"_id":"public/archives/2018/12/index.html","hash":"c14fa62891d345e6747421a3a37a1bc855cef0f7","modified":1557909966925},{"_id":"public/categories/技能薄/index.html","hash":"f50ab446008ce18602433120fe0520c46052e5ac","modified":1557909966925},{"_id":"public/categories/技能簿/index.html","hash":"6925d7c23990a0c962b01909325a961cf4840eac","modified":1557909966925},{"_id":"public/categories/日常簿/index.html","hash":"81fc2eecd311fb0b56a60863fa6181f8560a156c","modified":1557909966925},{"_id":"public/categories/事件簿/index.html","hash":"839453734f2ce2f5d585fc400c45fe74b29fa5fe","modified":1557909966925},{"_id":"public/categories/动漫簿/index.html","hash":"50e4cc953b34e1fc0c31ae256d22fbb71ffb86b8","modified":1557909966925},{"_id":"public/tags/git/index.html","hash":"abfadf8abf85dee20fd827458168441d4f047712","modified":1557909966925},{"_id":"public/tags/React/index.html","hash":"409b08b4200d364b927cf4ca2749e94812fcb128","modified":1557909966925},{"_id":"public/tags/VuePress/index.html","hash":"6eb5948f7d12131a16a14ae9cf499cc31e05d880","modified":1557909966926},{"_id":"public/tags/日常/index.html","hash":"b9ac245d42f86b2b0091ad7fb232f988ec306f59","modified":1557909966926},{"_id":"public/tags/毕业/index.html","hash":"98c9e339c527c69eb471897881dfbf99bd17ecf4","modified":1557909966926},{"_id":"public/tags/前端/index.html","hash":"bec8af00f302251ac39e5ad24b9981c4ec9c751a","modified":1557909966926},{"_id":"public/tags/hexo/index.html","hash":"094abe3f6a5f1d7a2356081e02bb5eac446a1ffa","modified":1557909966926},{"_id":"public/tags/路飞/index.html","hash":"c7f5fc82efbe3cb43727ad0da6d9adf02a2e935c","modified":1557909966926},{"_id":"public/tags/原型链/index.html","hash":"b3c551af5e1d0261db2ba1acdfbf21154e79e652","modified":1557909966926},{"_id":"public/tags/2018/index.html","hash":"8c69acf831c520f768af369c486d0e8798ccaff0","modified":1557909966926},{"_id":"public/tags/js/index.html","hash":"6ab27940b1fc59bd08a7f91bbcaf5d1edadc540c","modified":1557909966926},{"_id":"public/tags/30secondsofcode/index.html","hash":"0a32fb07252f008431816ecce810020a7072b058","modified":1557909966926},{"_id":"public/index.html","hash":"d0c907c7f3d2d99357ddc08a96dc27840e1696c3","modified":1557909966926},{"_id":"public/page/2/index.html","hash":"99e9ffe6590cc80aa59654e207544ab8a2fbead4","modified":1557909966926},{"_id":"public/CNAME","hash":"4824c6665150ad70a70790aa5b34b5a07c1fb066","modified":1557909966940},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1557909966940},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1557909966940},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1557909966940},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1557909966940},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1557909966940},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1557909966940},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1557909966940},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1557909966940},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1557909966940},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1557909966940},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1557909966940},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1557909966940},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1557909966940},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1557909966940},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1557909966940},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1557909966940},{"_id":"public/images/网络.lnk","hash":"92074c6bd251eb4d8f22fc7fa839af7ac3420cc9","modified":1557909966940},{"_id":"public/uploads/cat.ico","hash":"d743173f426997bd5362dfc93ff81a4f2f4be65d","modified":1557909966940},{"_id":"public/uploads/dot.gif","hash":"0a1bc9b70ab142d7b85727dcd1d96f0c4a72391c","modified":1557909966940},{"_id":"public/uploads/grid.png","hash":"c2ef59db0838c5a17f74c0d25f9c508a6ab2a803","modified":1557909966941},{"_id":"public/uploads/normal.cur","hash":"4e784fa1e9630f782a379667423c4886b02c5545","modified":1557909966941},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1557909966941},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1557909966941},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1557909966941},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1557909966941},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1557909966941},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1557909966941},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1557909966941},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1557909966941},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1557909966942},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1557909966942},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1557909966942},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1557909966942},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1557909966942},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1557909966942},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1557909966942},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1557909967481},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1557909967488},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1557909967493},{"_id":"public/js/src/bootstrap.js","hash":"f68e89151bc11620592629908365d41b17d6912b","modified":1557909967493},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1557909967494},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1557909967494},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1557909967494},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1557909967494},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1557909967494},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1557909967494},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1557909967494},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1557909967494},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1557909967494},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1557909967494},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1557909967494},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1557909967494},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1557909967494},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1557909967494},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1557909967494},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1557909967494},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1557909967494},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1557909967494},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"79df8b1839cbcb82a0fd9738289eb43c1bc77026","modified":1557909967495},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1557909967495},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1557909967495},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1557909967495},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1557909967495},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1557909967495},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1557909967495},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1557909967495},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1557909967495},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1557909967495},{"_id":"public/css/main.css","hash":"d72f3c888add0ccb996a0ff243a6a38b4ca31635","modified":1557909967495},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1557909967495},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1557909967495},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1557909967495},{"_id":"public/js/src/motion.js","hash":"3e6c157250e4f40fb68a6e69c560b36828771b78","modified":1557909967496},{"_id":"public/js/src/utils.js","hash":"7a4c6e9bace59e486438af27b9a0dc3c8d9070fa","modified":1557909967496},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1557909967496},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1557909967496},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1557909967496},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1557909967497},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1557909967497},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1557909967497},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1557909967498},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1557909967498},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1557909967499},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1557909967499},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1557909967505},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1557909967505},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1557909967505},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1557909967505},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1557909967505},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1557909967506},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1557909967511},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1557909967513},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1557909967513},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1557909967514},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1557909967514},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1557909967518},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1557909967518},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1557909967518},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1557909967520},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1557909967525},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1557909967527}],"Category":[{"name":"技能薄","_id":"cjvozd9y10005kcvc5o1uwpf3"},{"name":"技能簿","_id":"cjvozd9yb000ckcvcecg2rvhp"},{"name":"日常簿","_id":"cjvozd9ym000skcvcphbxu7u1"},{"name":"事件簿","_id":"cjvozd9yt0016kcvcwk7hw56v"},{"name":"动漫簿","_id":"cjvozd9yu001bkcvcr9jch6bz"}],"Data":[],"Page":[{"title":"","date":"2018-04-25T09:21:54.000Z","type":"404","layout":"page","comments":0,"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <style media=\"screen\">\n  .post-header {\n    margin-bottom: 30px;\n  }\n  p {\n    margin: 0 0 20px 0;\n  }\n  a {\n    border-bottom: 0;\n    color: #795548;\n  }\n  .error-panel {\n    overflow: hidden;\n    margin-top: -30px;\n  }\n  .img-error-404 {\n    border: 0 !important;\n    vertical-align: middle;\n   }\n  </style>\n</head>\n<body>\n  <div class=\"post posts-expand\">\n    <div class=\"error-panel server-error error-404\">\n        <img src=\"https://moetu.fastmirror.org/images/2018/12/20/very_sorry6a1a35a4108cce65.png\" class=\"nofancybox img-error-404\"/>\n    </div>\n    <header class=\"post-header\"><h1 class=\"post-title\" itemprop=\"name headline\">404 — 你似乎来到了没有知识存在的荒原...</h1></header>\n    <div class=\"post-body\">\n      <p>你可能需要：</p>\n      <ul>\n        <li><p><a href=\"https://blog.shamopoo.top/\">返回首页</a></p></li>\n        <li><p><a href=\"https://blog.shamopoo.top/archives/\">所有文章</a></p></li>\n        <li><p><a href=\"https://blog.shamopoo.top/message/\">给我留言</a></p></li>\n      </ul>\n    </div>\n  </div>\n</body>\n</html>\n","source":"404.html","raw":"---\ntitle:\ndate: 2018-04-25 17:21:54\ntype: '404'\nlayout: page\ncomments: false\n---\n<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <style media=\"screen\">\n  .post-header {\n    margin-bottom: 30px;\n  }\n  p {\n    margin: 0 0 20px 0;\n  }\n  a {\n    border-bottom: 0;\n    color: #795548;\n  }\n  .error-panel {\n    overflow: hidden;\n    margin-top: -30px;\n  }\n  .img-error-404 {\n    border: 0 !important;\n    vertical-align: middle;\n   }\n  </style>\n</head>\n<body>\n  <div class=\"post posts-expand\">\n    <div class=\"error-panel server-error error-404\">\n        <img src=\"https://moetu.fastmirror.org/images/2018/12/20/very_sorry6a1a35a4108cce65.png\" class=\"nofancybox img-error-404\"/>\n    </div>\n    <header class=\"post-header\"><h1 class=\"post-title\" itemprop=\"name headline\">404 — 你似乎来到了没有知识存在的荒原...</h1></header>\n    <div class=\"post-body\">\n      <p>你可能需要：</p>\n      <ul>\n        <li><p><a href=\"https://blog.shamopoo.top/\">返回首页</a></p></li>\n        <li><p><a href=\"https://blog.shamopoo.top/archives/\">所有文章</a></p></li>\n        <li><p><a href=\"https://blog.shamopoo.top/message/\">给我留言</a></p></li>\n      </ul>\n    </div>\n  </div>\n</body>\n</html>\n","updated":"2019-05-15T08:03:03.609Z","path":"404.html","_id":"cjvozd9wr0000kcvc5gnvuv85","content":"<!DOCTYPE HTML>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <style media=\"screen\">\n  .post-header {\n    margin-bottom: 30px;\n  }\n  p {\n    margin: 0 0 20px 0;\n  }\n  a {\n    border-bottom: 0;\n    color: #795548;\n  }\n  .error-panel {\n    overflow: hidden;\n    margin-top: -30px;\n  }\n  .img-error-404 {\n    border: 0 !important;\n    vertical-align: middle;\n   }\n  </style>\n</head>\n<body>\n  <div class=\"post posts-expand\">\n    <div class=\"error-panel server-error error-404\">\n        <img src=\"https://moetu.fastmirror.org/images/2018/12/20/very_sorry6a1a35a4108cce65.png\" class=\"nofancybox img-error-404\">\n    </div>\n    <header class=\"post-header\"><h1 class=\"post-title\" itemprop=\"name headline\">404 — 你似乎来到了没有知识存在的荒原...</h1></header>\n    <div class=\"post-body\">\n      <p>你可能需要：</p>\n      <ul>\n        <li><p><a href=\"https://blog.shamopoo.top/\" target=\"_blank\" rel=\"noopener\">返回首页</a></p></li>\n        <li><p><a href=\"https://blog.shamopoo.top/archives/\" target=\"_blank\" rel=\"noopener\">所有文章</a></p></li>\n        <li><p><a href=\"https://blog.shamopoo.top/message/\" target=\"_blank\" rel=\"noopener\">给我留言</a></p></li>\n      </ul>\n    </div>\n  </div>\n</body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <style media=\"screen\">\n  .post-header {\n    margin-bottom: 30px;\n  }\n  p {\n    margin: 0 0 20px 0;\n  }\n  a {\n    border-bottom: 0;\n    color: #795548;\n  }\n  .error-panel {\n    overflow: hidden;\n    margin-top: -30px;\n  }\n  .img-error-404 {\n    border: 0 !important;\n    vertical-align: middle;\n   }\n  </style>\n</head>\n<body>\n  <div class=\"post posts-expand\">\n    <div class=\"error-panel server-error error-404\">\n        <img src=\"https://moetu.fastmirror.org/images/2018/12/20/very_sorry6a1a35a4108cce65.png\" class=\"nofancybox img-error-404\">\n    </div>\n    <header class=\"post-header\"><h1 class=\"post-title\" itemprop=\"name headline\">404 — 你似乎来到了没有知识存在的荒原...</h1></header>\n    <div class=\"post-body\">\n      <p>你可能需要：</p>\n      <ul>\n        <li><p><a href=\"https://blog.shamopoo.top/\" target=\"_blank\" rel=\"noopener\">返回首页</a></p></li>\n        <li><p><a href=\"https://blog.shamopoo.top/archives/\" target=\"_blank\" rel=\"noopener\">所有文章</a></p></li>\n        <li><p><a href=\"https://blog.shamopoo.top/message/\" target=\"_blank\" rel=\"noopener\">给我留言</a></p></li>\n      </ul>\n    </div>\n  </div>\n</body>\n</html>\n"},{"title":"archives","date":"2018-03-09T14:15:54.000Z","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2018-03-09 22:15:54\n---\n","updated":"2019-05-15T08:03:03.614Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cjvozd9xy0002kcvc7v1aun1b","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于","date":"2018-03-09T14:15:43.000Z","type":"about","layout":"page","comments":0,"_content":"<style media=\"screen\">\n  .post-title{display: none;}\n</style>\n<div class=\"about-box\">\n    <div class=\"aplayer\" data-id=\"1293886117\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"></div>\n    <div class=\"title title1\">About</div>\n    <ul>\n      <li>名片页：<a  href=\"http://shamopoo.top\" target=\"blank\">http://shamopoo.top</a></li>\n      <li>网名: 九十、shamopoo</li>\n      <li>标签: ☑96后 ☑小透明 ☑二次元 ☑前端小萌新</li>\n      <li>家乡: 江西上饶</li>\n      <li>所在地: 重庆</li>\n      <li>爱好: 猫、二次元、喜欢的... </li>\n      <li>个性签名: <del>努力有用的话还要天才干什么。</del> 念念不忘，必有回响。</li>\n      <li>游戏: 剑三、王者、指尖江湖....</li>\n    </ul>\n\n    <div class=\"title title2\">Contact</div>\n    <ul>\n      <li>QQ: <a  href=\"http://wpa.qq.com/msgrd?v=3&uin=2570119235&site=qq&menu=yes\" target=\"blank\">2570119235</a></li>\n      <li>Telegram: <a href=\"https://t.me/shamopoo\" target=\"blank\">🍭 shamopoo</a></li>\n      <li>Twitter: <a href=\"https://twitter.com/shamopooo\">🐱 shamopooo</a></li>\n      <li>Github: <a  href=\"https://github.com/shamopoo\" target=\"blank\">shamopoo</a></li>\n      <li> Weibo: <a  href=\"https://weibo.com/5454964451/profile?rightmod=1&wvr=6&mod=personinfo&is_all=1\" target=\"blank\">这个江湖不如一个你</a></li>\n      <li> 网易云音乐: <a  href=\"https://music.163.com/#/user/home?id=91712390\" target=\"blank\">咚咚锵i</a></li>\n    </ul>\n    <div class=\"title title3\">Theme</div>\n    <ul>\n        <li>建于2018年3月5日...</li>\n    </ul>\n    <div class=\"title title4\">Todo</div>\n    <ul>\n        <li>博客top 域名以及二级域名 用me域名替换</li>\n        <li>学习react并完成自己的项目</li>\n        <li>学习python并掌握到入门以上</li>\n        <li>阅读kindle书单所有的书籍</li>\n        <li>有个自己的服务器并完成域名备案</li>\n        <li>换一个新手机</li>\n        <li>有个台式组装电脑</li>\n        <li>有一台自己的mbp</li>\n        <li>待续....</li>\n  </ul>\n  </div>\n  ","source":"about/index.html","raw":"---\ntitle: 关于\ndate: 2018-03-09 22:15:43\ntype: \"about\"\nlayout: page\ncomments: false\n---\n<style media=\"screen\">\n  .post-title{display: none;}\n</style>\n<div class=\"about-box\">\n    <div class=\"aplayer\" data-id=\"1293886117\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"></div>\n    <div class=\"title title1\">About</div>\n    <ul>\n      <li>名片页：<a  href=\"http://shamopoo.top\" target=\"blank\">http://shamopoo.top</a></li>\n      <li>网名: 九十、shamopoo</li>\n      <li>标签: ☑96后 ☑小透明 ☑二次元 ☑前端小萌新</li>\n      <li>家乡: 江西上饶</li>\n      <li>所在地: 重庆</li>\n      <li>爱好: 猫、二次元、喜欢的... </li>\n      <li>个性签名: <del>努力有用的话还要天才干什么。</del> 念念不忘，必有回响。</li>\n      <li>游戏: 剑三、王者、指尖江湖....</li>\n    </ul>\n\n    <div class=\"title title2\">Contact</div>\n    <ul>\n      <li>QQ: <a  href=\"http://wpa.qq.com/msgrd?v=3&uin=2570119235&site=qq&menu=yes\" target=\"blank\">2570119235</a></li>\n      <li>Telegram: <a href=\"https://t.me/shamopoo\" target=\"blank\">🍭 shamopoo</a></li>\n      <li>Twitter: <a href=\"https://twitter.com/shamopooo\">🐱 shamopooo</a></li>\n      <li>Github: <a  href=\"https://github.com/shamopoo\" target=\"blank\">shamopoo</a></li>\n      <li> Weibo: <a  href=\"https://weibo.com/5454964451/profile?rightmod=1&wvr=6&mod=personinfo&is_all=1\" target=\"blank\">这个江湖不如一个你</a></li>\n      <li> 网易云音乐: <a  href=\"https://music.163.com/#/user/home?id=91712390\" target=\"blank\">咚咚锵i</a></li>\n    </ul>\n    <div class=\"title title3\">Theme</div>\n    <ul>\n        <li>建于2018年3月5日...</li>\n    </ul>\n    <div class=\"title title4\">Todo</div>\n    <ul>\n        <li>博客top 域名以及二级域名 用me域名替换</li>\n        <li>学习react并完成自己的项目</li>\n        <li>学习python并掌握到入门以上</li>\n        <li>阅读kindle书单所有的书籍</li>\n        <li>有个自己的服务器并完成域名备案</li>\n        <li>换一个新手机</li>\n        <li>有个台式组装电脑</li>\n        <li>有一台自己的mbp</li>\n        <li>待续....</li>\n  </ul>\n  </div>\n  ","updated":"2019-05-15T08:03:03.613Z","path":"about/index.html","_id":"cjvozd9y00004kcvcrjkp80no","content":"<style media=\"screen\">\n  .post-title{display: none;}\n</style>\n<div class=\"about-box\">\n    <div class=\"aplayer\" data-id=\"1293886117\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"></div>\n    <div class=\"title title1\">About</div>\n    <ul>\n      <li>名片页：<a href=\"http://shamopoo.top\" target=\"blank\">http://shamopoo.top</a></li>\n      <li>网名: 九十、shamopoo</li>\n      <li>标签: ☑96后 ☑小透明 ☑二次元 ☑前端小萌新</li>\n      <li>家乡: 江西上饶</li>\n      <li>所在地: 重庆</li>\n      <li>爱好: 猫、二次元、喜欢的... </li>\n      <li>个性签名: <del>努力有用的话还要天才干什么。</del> 念念不忘，必有回响。</li>\n      <li>游戏: 剑三、王者、指尖江湖....</li>\n    </ul>\n\n    <div class=\"title title2\">Contact</div>\n    <ul>\n      <li>QQ: <a href=\"http://wpa.qq.com/msgrd?v=3&uin=2570119235&site=qq&menu=yes\" target=\"blank\">2570119235</a></li>\n      <li>Telegram: <a href=\"https://t.me/shamopoo\" target=\"blank\">🍭 shamopoo</a></li>\n      <li>Twitter: <a href=\"https://twitter.com/shamopooo\" target=\"_blank\" rel=\"noopener\">🐱 shamopooo</a></li>\n      <li>Github: <a href=\"https://github.com/shamopoo\" target=\"blank\">shamopoo</a></li>\n      <li> Weibo: <a href=\"https://weibo.com/5454964451/profile?rightmod=1&wvr=6&mod=personinfo&is_all=1\" target=\"blank\">这个江湖不如一个你</a></li>\n      <li> 网易云音乐: <a href=\"https://music.163.com/#/user/home?id=91712390\" target=\"blank\">咚咚锵i</a></li>\n    </ul>\n    <div class=\"title title3\">Theme</div>\n    <ul>\n        <li>建于2018年3月5日...</li>\n    </ul>\n    <div class=\"title title4\">Todo</div>\n    <ul>\n        <li>博客top 域名以及二级域名 用me域名替换</li>\n        <li>学习react并完成自己的项目</li>\n        <li>学习python并掌握到入门以上</li>\n        <li>阅读kindle书单所有的书籍</li>\n        <li>有个自己的服务器并完成域名备案</li>\n        <li>换一个新手机</li>\n        <li>有个台式组装电脑</li>\n        <li>有一台自己的mbp</li>\n        <li>待续....</li>\n  </ul>\n  </div>\n  ","site":{"data":{}},"excerpt":"","more":"<style media=\"screen\">\n  .post-title{display: none;}\n</style>\n<div class=\"about-box\">\n    <div class=\"aplayer\" data-id=\"1293886117\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"></div>\n    <div class=\"title title1\">About</div>\n    <ul>\n      <li>名片页：<a href=\"http://shamopoo.top\" target=\"blank\">http://shamopoo.top</a></li>\n      <li>网名: 九十、shamopoo</li>\n      <li>标签: ☑96后 ☑小透明 ☑二次元 ☑前端小萌新</li>\n      <li>家乡: 江西上饶</li>\n      <li>所在地: 重庆</li>\n      <li>爱好: 猫、二次元、喜欢的... </li>\n      <li>个性签名: <del>努力有用的话还要天才干什么。</del> 念念不忘，必有回响。</li>\n      <li>游戏: 剑三、王者、指尖江湖....</li>\n    </ul>\n\n    <div class=\"title title2\">Contact</div>\n    <ul>\n      <li>QQ: <a href=\"http://wpa.qq.com/msgrd?v=3&uin=2570119235&site=qq&menu=yes\" target=\"blank\">2570119235</a></li>\n      <li>Telegram: <a href=\"https://t.me/shamopoo\" target=\"blank\">🍭 shamopoo</a></li>\n      <li>Twitter: <a href=\"https://twitter.com/shamopooo\" target=\"_blank\" rel=\"noopener\">🐱 shamopooo</a></li>\n      <li>Github: <a href=\"https://github.com/shamopoo\" target=\"blank\">shamopoo</a></li>\n      <li> Weibo: <a href=\"https://weibo.com/5454964451/profile?rightmod=1&wvr=6&mod=personinfo&is_all=1\" target=\"blank\">这个江湖不如一个你</a></li>\n      <li> 网易云音乐: <a href=\"https://music.163.com/#/user/home?id=91712390\" target=\"blank\">咚咚锵i</a></li>\n    </ul>\n    <div class=\"title title3\">Theme</div>\n    <ul>\n        <li>建于2018年3月5日...</li>\n    </ul>\n    <div class=\"title title4\">Todo</div>\n    <ul>\n        <li>博客top 域名以及二级域名 用me域名替换</li>\n        <li>学习react并完成自己的项目</li>\n        <li>学习python并掌握到入门以上</li>\n        <li>阅读kindle书单所有的书籍</li>\n        <li>有个自己的服务器并完成域名备案</li>\n        <li>换一个新手机</li>\n        <li>有个台式组装电脑</li>\n        <li>有一台自己的mbp</li>\n        <li>待续....</li>\n  </ul>\n  </div>\n  "},{"title":"about","date":"2018-03-09T14:15:43.000Z","layout":"false","comments":0,"_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-03-09 22:15:43\nlayout: false\ncomments: false\n---\n","updated":"2019-05-15T08:03:03.613Z","path":"about/index.html","_id":"cjvozd9y40008kcvcafdvhsmz","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"书单","date":"2018-12-04T03:37:43.000Z","type":"booklist","layout":"page","comments":0,"_content":"\n<style media=\"screen\">\n  .post-title{display: none;}\n</style>\n<div class=\"booklist-box\">\n    <div class=\"title title1\">思维书单</div >\n    <ul>\n        <li>\n            <p class=\"name\">第五项修炼</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">你的灯亮了吗?</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">高效能人士的七个习惯</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">如何阅读一本书</p>\n        </li>\n        <li>\n          <p class=\"name\">给你一个团队,你能怎么管?</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">如何高效学习</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">习惯的力量</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">未来简史</p>\n        </li>\n        <li>\n          <p class=\"name\">人类简史</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">软技能：代码之外的生存指南</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">怪诞心理学</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">自卑与超越</p>\n        </li>\n        <li>\n          <p class=\"name\">程序员的呐喊</p>\n        </li>\n        <li>\n          <p class=\"name\">人月神话</p>\n        </li>\n        <li>\n          <p class=\"name\">人月神话</p>\n        </li>\n        <li>\n          <p class=\"name\">果壳中的宇宙</p>\n        </li>\n        <li>\n          <p class=\"name\">黑客与画家</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">三体</p>\n        </li>\n        <li>\n          <p class=\"name\">人性的弱点</p>\n        </li>\n        <li>\n          <p class=\"name\">思考致富</p>\n        </li>\n        <li>\n          <p class=\"name\">心理控制方法</p>\n        </li>\n        <li>\n          <p class=\"name\">积极思考就是力量</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">小王子</p>\n        </li>\n        <li>\n          <p class=\"name\">程序员的英语</p>\n        </li>\n        <li>\n          <p class=\"name\">虚拟货币革命</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">程序员的自我修养</p>\n        </li>\n        <li>\n            <p class=\"name\">程序员修炼之道：从小工到专家</p>\n        </li>\n    </ul>\n    <div class=\"title title2\">技术书单</div >\n    <ul>\n      <li>\n        <p class=\"name\">深入理解现代计算机操作系统(第三版)</p>\n      </li>\n      <li>\n        <p class=\"name\">Git版本控制管理</p>\n      </li>\n      <li>\n        <p class=\"name\">设计模式：可复用面向对象软件的基础</p>\n      </li>\n      <li>\n        <p class=\"name\">七周七web开发框架</p>\n      </li>\n      <li>\n        <p class=\"name\">图解HTTP</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">深入理解es6</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">JavaScript高级程序设计(三)</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript权威指南</p>\n      </li>\n      <li>\n        <p class=\"name\">你不知道的JavaScript</p>\n      </li>\n      <li>\n        <p class=\"name\">HTML5 Canvas</p>\n      </li>\n      <li>\n        <p class=\"name\">深入浅出React和Redux</p>\n      </li>\n      <li>\n        <p class=\"name\">深入React技术栈</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript忍者秘籍</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript模式</p>\n      </li>\n      <li>\n        <p class=\"name\">SVG精髓（第2版）</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript DOM编程艺术</p>\n      </li>\n      <li>\n        <p class=\"name\">精通CSS（第2版）</p>\n      </li>\n      <li>\n        <p class=\"name\">代码大全</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">代码整洁之道</p>\n      </li>\n      <li>\n        <p class=\"name\">Head First 设计模式</p>\n      </li>\n      <li>\n        <p class=\"name\">The Nature Of Code</p>\n      </li>\n    </ul>\n    <div class=\"title title3\">投资书单</div >\n    <ul>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">富爸爸，穷爸爸</p>\n      </li>\n    </ul>\n    <div class=\"title title4\">Python书单</div >\n    <ul>\n      <li>\n        <p class=\"name\">Python编程从入门到实践</p>\n      </li>\n      <li>\n        <p class=\"name\">流畅的Python</p>\n      </li>\n      <li>\n        <p class=\"name\">Python 核心编程</p>\n      </li>\n    </ul>\n    <div class=\"title title5\">区块链书单</div >\n    <ul>\n      <li>\n        <p class=\"name\">区链革命: 比特币底层技术如何改变货币、商业和世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链 重塑经济与世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链世界</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">图说区块链</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链将如何重新定义世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链2.0</p>\n      </li>\n      <li>\n        <p class=\"name\">商业区块链：开启加密经济新时代</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：重塑新金融</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链解密：构建基于信用的下一代互联网</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：从数字货币到信用社会</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链社会：解码区块链全球应用与投资案例</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：技术驱动金融</p>\n      </li>\n      <li>\n            <p class=\"name\">\n              <a href=\"https://github.com/shamopoo/BookList\" class=\"book-link\">more..</a>\n            </p> \n      </li>\n    </ul>\n</div>","source":"booklist/index.html","raw":"---\ntitle: 书单\ndate: 2018-12-04 11:37:43\ntype: \"booklist\"\nlayout: page\ncomments: false\n---\n\n<style media=\"screen\">\n  .post-title{display: none;}\n</style>\n<div class=\"booklist-box\">\n    <div class=\"title title1\">思维书单</div >\n    <ul>\n        <li>\n            <p class=\"name\">第五项修炼</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">你的灯亮了吗?</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">高效能人士的七个习惯</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">如何阅读一本书</p>\n        </li>\n        <li>\n          <p class=\"name\">给你一个团队,你能怎么管?</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">如何高效学习</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">习惯的力量</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">未来简史</p>\n        </li>\n        <li>\n          <p class=\"name\">人类简史</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">软技能：代码之外的生存指南</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">怪诞心理学</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">自卑与超越</p>\n        </li>\n        <li>\n          <p class=\"name\">程序员的呐喊</p>\n        </li>\n        <li>\n          <p class=\"name\">人月神话</p>\n        </li>\n        <li>\n          <p class=\"name\">人月神话</p>\n        </li>\n        <li>\n          <p class=\"name\">果壳中的宇宙</p>\n        </li>\n        <li>\n          <p class=\"name\">黑客与画家</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">三体</p>\n        </li>\n        <li>\n          <p class=\"name\">人性的弱点</p>\n        </li>\n        <li>\n          <p class=\"name\">思考致富</p>\n        </li>\n        <li>\n          <p class=\"name\">心理控制方法</p>\n        </li>\n        <li>\n          <p class=\"name\">积极思考就是力量</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">小王子</p>\n        </li>\n        <li>\n          <p class=\"name\">程序员的英语</p>\n        </li>\n        <li>\n          <p class=\"name\">虚拟货币革命</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">程序员的自我修养</p>\n        </li>\n        <li>\n            <p class=\"name\">程序员修炼之道：从小工到专家</p>\n        </li>\n    </ul>\n    <div class=\"title title2\">技术书单</div >\n    <ul>\n      <li>\n        <p class=\"name\">深入理解现代计算机操作系统(第三版)</p>\n      </li>\n      <li>\n        <p class=\"name\">Git版本控制管理</p>\n      </li>\n      <li>\n        <p class=\"name\">设计模式：可复用面向对象软件的基础</p>\n      </li>\n      <li>\n        <p class=\"name\">七周七web开发框架</p>\n      </li>\n      <li>\n        <p class=\"name\">图解HTTP</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">深入理解es6</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">JavaScript高级程序设计(三)</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript权威指南</p>\n      </li>\n      <li>\n        <p class=\"name\">你不知道的JavaScript</p>\n      </li>\n      <li>\n        <p class=\"name\">HTML5 Canvas</p>\n      </li>\n      <li>\n        <p class=\"name\">深入浅出React和Redux</p>\n      </li>\n      <li>\n        <p class=\"name\">深入React技术栈</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript忍者秘籍</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript模式</p>\n      </li>\n      <li>\n        <p class=\"name\">SVG精髓（第2版）</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript DOM编程艺术</p>\n      </li>\n      <li>\n        <p class=\"name\">精通CSS（第2版）</p>\n      </li>\n      <li>\n        <p class=\"name\">代码大全</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">代码整洁之道</p>\n      </li>\n      <li>\n        <p class=\"name\">Head First 设计模式</p>\n      </li>\n      <li>\n        <p class=\"name\">The Nature Of Code</p>\n      </li>\n    </ul>\n    <div class=\"title title3\">投资书单</div >\n    <ul>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">富爸爸，穷爸爸</p>\n      </li>\n    </ul>\n    <div class=\"title title4\">Python书单</div >\n    <ul>\n      <li>\n        <p class=\"name\">Python编程从入门到实践</p>\n      </li>\n      <li>\n        <p class=\"name\">流畅的Python</p>\n      </li>\n      <li>\n        <p class=\"name\">Python 核心编程</p>\n      </li>\n    </ul>\n    <div class=\"title title5\">区块链书单</div >\n    <ul>\n      <li>\n        <p class=\"name\">区链革命: 比特币底层技术如何改变货币、商业和世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链 重塑经济与世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链世界</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">图说区块链</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链将如何重新定义世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链2.0</p>\n      </li>\n      <li>\n        <p class=\"name\">商业区块链：开启加密经济新时代</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：重塑新金融</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链解密：构建基于信用的下一代互联网</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：从数字货币到信用社会</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链社会：解码区块链全球应用与投资案例</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：技术驱动金融</p>\n      </li>\n      <li>\n            <p class=\"name\">\n              <a href=\"https://github.com/shamopoo/BookList\" class=\"book-link\">more..</a>\n            </p> \n      </li>\n    </ul>\n</div>","updated":"2019-05-15T08:03:03.615Z","path":"booklist/index.html","_id":"cjvozd9y7000akcvc6nnhcfhb","content":"\n<style media=\"screen\">\n  .post-title{display: none;}\n</style>\n<div class=\"booklist-box\">\n    <div class=\"title title1\">思维书单</div>\n    <ul>\n        <li>\n            <p class=\"name\">第五项修炼</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">你的灯亮了吗?</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">高效能人士的七个习惯</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">如何阅读一本书</p>\n        </li>\n        <li>\n          <p class=\"name\">给你一个团队,你能怎么管?</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">如何高效学习</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">习惯的力量</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">未来简史</p>\n        </li>\n        <li>\n          <p class=\"name\">人类简史</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">软技能：代码之外的生存指南</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">怪诞心理学</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">自卑与超越</p>\n        </li>\n        <li>\n          <p class=\"name\">程序员的呐喊</p>\n        </li>\n        <li>\n          <p class=\"name\">人月神话</p>\n        </li>\n        <li>\n          <p class=\"name\">人月神话</p>\n        </li>\n        <li>\n          <p class=\"name\">果壳中的宇宙</p>\n        </li>\n        <li>\n          <p class=\"name\">黑客与画家</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">三体</p>\n        </li>\n        <li>\n          <p class=\"name\">人性的弱点</p>\n        </li>\n        <li>\n          <p class=\"name\">思考致富</p>\n        </li>\n        <li>\n          <p class=\"name\">心理控制方法</p>\n        </li>\n        <li>\n          <p class=\"name\">积极思考就是力量</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">小王子</p>\n        </li>\n        <li>\n          <p class=\"name\">程序员的英语</p>\n        </li>\n        <li>\n          <p class=\"name\">虚拟货币革命</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">程序员的自我修养</p>\n        </li>\n        <li>\n            <p class=\"name\">程序员修炼之道：从小工到专家</p>\n        </li>\n    </ul>\n    <div class=\"title title2\">技术书单</div>\n    <ul>\n      <li>\n        <p class=\"name\">深入理解现代计算机操作系统(第三版)</p>\n      </li>\n      <li>\n        <p class=\"name\">Git版本控制管理</p>\n      </li>\n      <li>\n        <p class=\"name\">设计模式：可复用面向对象软件的基础</p>\n      </li>\n      <li>\n        <p class=\"name\">七周七web开发框架</p>\n      </li>\n      <li>\n        <p class=\"name\">图解HTTP</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">深入理解es6</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">JavaScript高级程序设计(三)</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript权威指南</p>\n      </li>\n      <li>\n        <p class=\"name\">你不知道的JavaScript</p>\n      </li>\n      <li>\n        <p class=\"name\">HTML5 Canvas</p>\n      </li>\n      <li>\n        <p class=\"name\">深入浅出React和Redux</p>\n      </li>\n      <li>\n        <p class=\"name\">深入React技术栈</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript忍者秘籍</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript模式</p>\n      </li>\n      <li>\n        <p class=\"name\">SVG精髓（第2版）</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript DOM编程艺术</p>\n      </li>\n      <li>\n        <p class=\"name\">精通CSS（第2版）</p>\n      </li>\n      <li>\n        <p class=\"name\">代码大全</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">代码整洁之道</p>\n      </li>\n      <li>\n        <p class=\"name\">Head First 设计模式</p>\n      </li>\n      <li>\n        <p class=\"name\">The Nature Of Code</p>\n      </li>\n    </ul>\n    <div class=\"title title3\">投资书单</div>\n    <ul>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">富爸爸，穷爸爸</p>\n      </li>\n    </ul>\n    <div class=\"title title4\">Python书单</div>\n    <ul>\n      <li>\n        <p class=\"name\">Python编程从入门到实践</p>\n      </li>\n      <li>\n        <p class=\"name\">流畅的Python</p>\n      </li>\n      <li>\n        <p class=\"name\">Python 核心编程</p>\n      </li>\n    </ul>\n    <div class=\"title title5\">区块链书单</div>\n    <ul>\n      <li>\n        <p class=\"name\">区链革命: 比特币底层技术如何改变货币、商业和世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链 重塑经济与世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链世界</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">图说区块链</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链将如何重新定义世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链2.0</p>\n      </li>\n      <li>\n        <p class=\"name\">商业区块链：开启加密经济新时代</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：重塑新金融</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链解密：构建基于信用的下一代互联网</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：从数字货币到信用社会</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链社会：解码区块链全球应用与投资案例</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：技术驱动金融</p>\n      </li>\n      <li>\n            <p class=\"name\">\n              <a href=\"https://github.com/shamopoo/BookList\" class=\"book-link\" target=\"_blank\" rel=\"noopener\">more..</a>\n            </p> \n      </li>\n    </ul>\n</div>","site":{"data":{}},"excerpt":"","more":"\n<style media=\"screen\">\n  .post-title{display: none;}\n</style>\n<div class=\"booklist-box\">\n    <div class=\"title title1\">思维书单</div>\n    <ul>\n        <li>\n            <p class=\"name\">第五项修炼</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">你的灯亮了吗?</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">高效能人士的七个习惯</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">如何阅读一本书</p>\n        </li>\n        <li>\n          <p class=\"name\">给你一个团队,你能怎么管?</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">如何高效学习</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">习惯的力量</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">未来简史</p>\n        </li>\n        <li>\n          <p class=\"name\">人类简史</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">软技能：代码之外的生存指南</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">怪诞心理学</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">自卑与超越</p>\n        </li>\n        <li>\n          <p class=\"name\">程序员的呐喊</p>\n        </li>\n        <li>\n          <p class=\"name\">人月神话</p>\n        </li>\n        <li>\n          <p class=\"name\">人月神话</p>\n        </li>\n        <li>\n          <p class=\"name\">果壳中的宇宙</p>\n        </li>\n        <li>\n          <p class=\"name\">黑客与画家</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">三体</p>\n        </li>\n        <li>\n          <p class=\"name\">人性的弱点</p>\n        </li>\n        <li>\n          <p class=\"name\">思考致富</p>\n        </li>\n        <li>\n          <p class=\"name\">心理控制方法</p>\n        </li>\n        <li>\n          <p class=\"name\">积极思考就是力量</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">小王子</p>\n        </li>\n        <li>\n          <p class=\"name\">程序员的英语</p>\n        </li>\n        <li>\n          <p class=\"name\">虚拟货币革命</p>\n        </li>\n        <li>\n          <span class=\"is-read\">已读</span>\n          <p class=\"name\">程序员的自我修养</p>\n        </li>\n        <li>\n            <p class=\"name\">程序员修炼之道：从小工到专家</p>\n        </li>\n    </ul>\n    <div class=\"title title2\">技术书单</div>\n    <ul>\n      <li>\n        <p class=\"name\">深入理解现代计算机操作系统(第三版)</p>\n      </li>\n      <li>\n        <p class=\"name\">Git版本控制管理</p>\n      </li>\n      <li>\n        <p class=\"name\">设计模式：可复用面向对象软件的基础</p>\n      </li>\n      <li>\n        <p class=\"name\">七周七web开发框架</p>\n      </li>\n      <li>\n        <p class=\"name\">图解HTTP</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">深入理解es6</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">JavaScript高级程序设计(三)</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript权威指南</p>\n      </li>\n      <li>\n        <p class=\"name\">你不知道的JavaScript</p>\n      </li>\n      <li>\n        <p class=\"name\">HTML5 Canvas</p>\n      </li>\n      <li>\n        <p class=\"name\">深入浅出React和Redux</p>\n      </li>\n      <li>\n        <p class=\"name\">深入React技术栈</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript忍者秘籍</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript模式</p>\n      </li>\n      <li>\n        <p class=\"name\">SVG精髓（第2版）</p>\n      </li>\n      <li>\n        <p class=\"name\">JavaScript DOM编程艺术</p>\n      </li>\n      <li>\n        <p class=\"name\">精通CSS（第2版）</p>\n      </li>\n      <li>\n        <p class=\"name\">代码大全</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">代码整洁之道</p>\n      </li>\n      <li>\n        <p class=\"name\">Head First 设计模式</p>\n      </li>\n      <li>\n        <p class=\"name\">The Nature Of Code</p>\n      </li>\n    </ul>\n    <div class=\"title title3\">投资书单</div>\n    <ul>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">富爸爸，穷爸爸</p>\n      </li>\n    </ul>\n    <div class=\"title title4\">Python书单</div>\n    <ul>\n      <li>\n        <p class=\"name\">Python编程从入门到实践</p>\n      </li>\n      <li>\n        <p class=\"name\">流畅的Python</p>\n      </li>\n      <li>\n        <p class=\"name\">Python 核心编程</p>\n      </li>\n    </ul>\n    <div class=\"title title5\">区块链书单</div>\n    <ul>\n      <li>\n        <p class=\"name\">区链革命: 比特币底层技术如何改变货币、商业和世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链 重塑经济与世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链世界</p>\n      </li>\n      <li>\n        <span class=\"is-read\">已读</span>\n        <p class=\"name\">图说区块链</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链将如何重新定义世界</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链2.0</p>\n      </li>\n      <li>\n        <p class=\"name\">商业区块链：开启加密经济新时代</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：重塑新金融</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链解密：构建基于信用的下一代互联网</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：从数字货币到信用社会</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链社会：解码区块链全球应用与投资案例</p>\n      </li>\n      <li>\n        <p class=\"name\">区块链：技术驱动金融</p>\n      </li>\n      <li>\n            <p class=\"name\">\n              <a href=\"https://github.com/shamopoo/BookList\" class=\"book-link\" target=\"_blank\" rel=\"noopener\">more..</a>\n            </p> \n      </li>\n    </ul>\n</div>"},{"title":"booklist","date":"2018-12-04T03:37:43.000Z","layout":"false","comments":0,"_content":"","source":"booklist/index.md","raw":"---\ntitle: booklist\ndate: 2018-12-04 11:37:43\nlayout: false\ncomments: false\n---\n","updated":"2019-05-15T08:03:03.615Z","path":"booklist/index.html","_id":"cjvozd9yc000ekcvckhp9nwqt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2018-04-26T12:26:13.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-04-26 20:26:13\ntype: 'categories'\ncomments: false\n---\n","updated":"2019-05-15T08:03:03.615Z","path":"categories/index.html","layout":"page","_id":"cjvozd9ye000hkcvcqrggo91r","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"友人帐","date":"2018-04-27T04:03:47.000Z","type":"friends","layout":"page","comments":0,"_content":"<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div class=\"ss-side site-side-info flip-container\">\n    <div class=\"flipper\">\n        <div class=\"front\">\n          <div class=\"front-title\">欢迎交换友链</div>\n          <p>Name:<i></i>shamopoo</p>\n          <p>Url:<i></i>https://shamopoo.top/</p>\n          <p>Avatar:<i></i>https://o7y8mvdbc.qnssl.com/tc/uploads/1804/271225465324.gif</p>\n          <p>Signature:<i></i>「念念不忘 必有回响」</p>\n          <div class=\"ss-info-next front-btn\">\n            <i class=\"fa  fa-arrow-right\" title=\"more\"></i>\n          </div>\n        </div>\n        <div class=\"back\">\n          <div class=\"auther\">\n            <a href=\"https://blog.shamopoo.top/\">\n              <img src=\"https://moetu.fastmirror.org/images/2018/05/15/avatar9242bfd5068334c1.gif\"   alt=\"shamopoo\" class=\"nofancybox\">\n            </a>\n          </div>\n          <div class=\"name\">\n             <a href=\"https://blog.shamopoo.top/\">shamopoo</a>\n          </div>\n          <p class=\"back-sig\">\n            「念念不忘 必有回响」\n          </p>\n          <div class=\"ss-info-prev back-btn\">\n            <i class=\"fa  fa-reply\" alt=\"back\"></i>\n          </div>\n        </div>\n  </div>\n</div>\n<div class=\"post post-type-normal\">\n  <div class=\"post-block page\" style=\"opacity: 1; display: block;\">\n    <header class=\"post-header\" style=\"text-align:center;\">\n      <a class=\"post-title post-title-a\" itemprop=\"name headline\">友人帐</a>\n    </header>\n    <div class=\"post-body\" style=\"opacity: 1; display: block; transform: translateY(0px);\">\n      <div class=\"links\">\n        <ul>\n          <li>\n            <a href=\"https://mxshine.top/\" target=\"_blank\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af660f060a06.png\">\n                <div class=\"blur-bg\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\"></div>\n                <div class=\"content\">    \n                    <span>沐夏</span>\n                </div>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://laji.blog/\" target=\"_blank\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\">\n                <div class=\"blur-bg\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\"></div>\n                <div class=\"content\">     \n                    <span>Marvin</span>\n                </div>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","source":"friends/index.html","raw":"---\ntitle: 友人帐\ndate: 2018-04-27 12:03:47\ntype: \"friends\"\nlayout: page\ncomments: false\n---\n<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div class=\"ss-side site-side-info flip-container\">\n    <div class=\"flipper\">\n        <div class=\"front\">\n          <div class=\"front-title\">欢迎交换友链</div>\n          <p>Name:<i></i>shamopoo</p>\n          <p>Url:<i></i>https://shamopoo.top/</p>\n          <p>Avatar:<i></i>https://o7y8mvdbc.qnssl.com/tc/uploads/1804/271225465324.gif</p>\n          <p>Signature:<i></i>「念念不忘 必有回响」</p>\n          <div class=\"ss-info-next front-btn\">\n            <i class=\"fa  fa-arrow-right\" title=\"more\"></i>\n          </div>\n        </div>\n        <div class=\"back\">\n          <div class=\"auther\">\n            <a href=\"https://blog.shamopoo.top/\">\n              <img src=\"https://moetu.fastmirror.org/images/2018/05/15/avatar9242bfd5068334c1.gif\"   alt=\"shamopoo\" class=\"nofancybox\">\n            </a>\n          </div>\n          <div class=\"name\">\n             <a href=\"https://blog.shamopoo.top/\">shamopoo</a>\n          </div>\n          <p class=\"back-sig\">\n            「念念不忘 必有回响」\n          </p>\n          <div class=\"ss-info-prev back-btn\">\n            <i class=\"fa  fa-reply\" alt=\"back\"></i>\n          </div>\n        </div>\n  </div>\n</div>\n<div class=\"post post-type-normal\">\n  <div class=\"post-block page\" style=\"opacity: 1; display: block;\">\n    <header class=\"post-header\" style=\"text-align:center;\">\n      <a class=\"post-title post-title-a\" itemprop=\"name headline\">友人帐</a>\n    </header>\n    <div class=\"post-body\" style=\"opacity: 1; display: block; transform: translateY(0px);\">\n      <div class=\"links\">\n        <ul>\n          <li>\n            <a href=\"https://mxshine.top/\" target=\"_blank\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af660f060a06.png\">\n                <div class=\"blur-bg\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\"></div>\n                <div class=\"content\">    \n                    <span>沐夏</span>\n                </div>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://laji.blog/\" target=\"_blank\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\">\n                <div class=\"blur-bg\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\"></div>\n                <div class=\"content\">     \n                    <span>Marvin</span>\n                </div>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","updated":"2019-05-15T08:03:03.616Z","path":"friends/index.html","_id":"cjvozd9yg000kkcvc495vs11v","content":"<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div class=\"ss-side site-side-info flip-container\">\n    <div class=\"flipper\">\n        <div class=\"front\">\n          <div class=\"front-title\">欢迎交换友链</div>\n          <p>Name:<i></i>shamopoo</p>\n          <p>Url:<i></i>https://shamopoo.top/</p>\n          <p>Avatar:<i></i>https://o7y8mvdbc.qnssl.com/tc/uploads/1804/271225465324.gif</p>\n          <p>Signature:<i></i>「念念不忘 必有回响」</p>\n          <div class=\"ss-info-next front-btn\">\n            <i class=\"fa  fa-arrow-right\" title=\"more\"></i>\n          </div>\n        </div>\n        <div class=\"back\">\n          <div class=\"auther\">\n            <a href=\"https://blog.shamopoo.top/\" target=\"_blank\" rel=\"noopener\">\n              <img src=\"https://moetu.fastmirror.org/images/2018/05/15/avatar9242bfd5068334c1.gif\" alt=\"shamopoo\" class=\"nofancybox\">\n            </a>\n          </div>\n          <div class=\"name\">\n             <a href=\"https://blog.shamopoo.top/\" target=\"_blank\" rel=\"noopener\">shamopoo</a>\n          </div>\n          <p class=\"back-sig\">\n            「念念不忘 必有回响」\n          </p>\n          <div class=\"ss-info-prev back-btn\">\n            <i class=\"fa  fa-reply\" alt=\"back\"></i>\n          </div>\n        </div>\n  </div>\n</div>\n<div class=\"post post-type-normal\">\n  <div class=\"post-block page\" style=\"opacity: 1; display: block;\">\n    <header class=\"post-header\" style=\"text-align:center;\">\n      <a class=\"post-title post-title-a\" itemprop=\"name headline\">友人帐</a>\n    </header>\n    <div class=\"post-body\" style=\"opacity: 1; display: block; transform: translateY(0px);\">\n      <div class=\"links\">\n        <ul>\n          <li>\n            <a href=\"https://mxshine.top/\" target=\"_blank\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af660f060a06.png\">\n                <div class=\"blur-bg\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\"></div>\n                <div class=\"content\">    \n                    <span>沐夏</span>\n                </div>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://laji.blog/\" target=\"_blank\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\">\n                <div class=\"blur-bg\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\"></div>\n                <div class=\"content\">     \n                    <span>Marvin</span>\n                </div>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","site":{"data":{}},"excerpt":"","more":"<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div class=\"ss-side site-side-info flip-container\">\n    <div class=\"flipper\">\n        <div class=\"front\">\n          <div class=\"front-title\">欢迎交换友链</div>\n          <p>Name:<i></i>shamopoo</p>\n          <p>Url:<i></i>https://shamopoo.top/</p>\n          <p>Avatar:<i></i>https://o7y8mvdbc.qnssl.com/tc/uploads/1804/271225465324.gif</p>\n          <p>Signature:<i></i>「念念不忘 必有回响」</p>\n          <div class=\"ss-info-next front-btn\">\n            <i class=\"fa  fa-arrow-right\" title=\"more\"></i>\n          </div>\n        </div>\n        <div class=\"back\">\n          <div class=\"auther\">\n            <a href=\"https://blog.shamopoo.top/\" target=\"_blank\" rel=\"noopener\">\n              <img src=\"https://moetu.fastmirror.org/images/2018/05/15/avatar9242bfd5068334c1.gif\" alt=\"shamopoo\" class=\"nofancybox\">\n            </a>\n          </div>\n          <div class=\"name\">\n             <a href=\"https://blog.shamopoo.top/\" target=\"_blank\" rel=\"noopener\">shamopoo</a>\n          </div>\n          <p class=\"back-sig\">\n            「念念不忘 必有回响」\n          </p>\n          <div class=\"ss-info-prev back-btn\">\n            <i class=\"fa  fa-reply\" alt=\"back\"></i>\n          </div>\n        </div>\n  </div>\n</div>\n<div class=\"post post-type-normal\">\n  <div class=\"post-block page\" style=\"opacity: 1; display: block;\">\n    <header class=\"post-header\" style=\"text-align:center;\">\n      <a class=\"post-title post-title-a\" itemprop=\"name headline\">友人帐</a>\n    </header>\n    <div class=\"post-body\" style=\"opacity: 1; display: block; transform: translateY(0px);\">\n      <div class=\"links\">\n        <ul>\n          <li>\n            <a href=\"https://mxshine.top/\" target=\"_blank\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af660f060a06.png\">\n                <div class=\"blur-bg\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\"></div>\n                <div class=\"content\">    \n                    <span>沐夏</span>\n                </div>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://laji.blog/\" target=\"_blank\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\">\n                <div class=\"blur-bg\" style=\"background-image: url(https://i.loli.net/2018/05/12/5af6551e2701c.png\"></div>\n                <div class=\"content\">     \n                    <span>Marvin</span>\n                </div>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n"},{"title":"friends","date":"2018-04-27T04:03:47.000Z","type":"friends","layout":"false","comments":0,"_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2018-04-27 12:03:47\ntype: \"friends\"\nlayout: false\ncomments: false\n---\n","updated":"2019-05-15T08:03:03.616Z","path":"friends/index.html","_id":"cjvozd9yk000pkcvc89fn4l7u","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"home","date":"2018-03-09T14:15:25.000Z","_content":"","source":"home/index.md","raw":"---\ntitle: home\ndate: 2018-03-09 22:15:25\n---\n","updated":"2019-05-15T08:03:03.616Z","path":"home/index.html","comments":1,"layout":"page","_id":"cjvozd9ym000rkcvcdkxb0rir","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"lab","date":"2018-04-26T08:42:42.000Z","type":"about","comments":0,"_content":"","source":"lab/index.md","raw":"---\ntitle: lab\ndate: 2018-04-26 16:42:42\ntype: 'about'\ncomments: false\n---\n","updated":"2019-05-15T08:03:03.617Z","path":"lab/index.html","layout":"page","_id":"cjvozd9yo000wkcvch197uhb8","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"留言板","date":"2018-04-27T04:03:47.000Z","type":"friends","layout":"page","_content":"<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div class=\"entry-content\"><p style=\"text-align: center;\">\n&nbsp;🌸<br><br>僕　花<br> 知　達　の　の<br> ら　は　名　日<br> な　ま　前　見<br> ぃ　だ　を　た<br><br>🌸\n</p></div>\n","source":"message/index.html","raw":"---\ntitle: 留言板\ndate: 2018-04-27 12:03:47\ntype: \"friends\"\nlayout: page\n---\n<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div class=\"entry-content\"><p style=\"text-align: center;\">\n&nbsp;🌸<br><br>僕　花<br> 知　達　の　の<br> ら　は　名　日<br> な　ま　前　見<br> ぃ　だ　を　た<br><br>🌸\n</p></div>\n","updated":"2019-05-15T08:03:03.618Z","path":"message/index.html","comments":1,"_id":"cjvozda2a001ukcvcmje9j6sn","content":"<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div class=\"entry-content\"><p style=\"text-align: center;\">\n&nbsp;🌸<br><br>僕　花<br> 知　達　の　の<br> ら　は　名　日<br> な　ま　前　見<br> ぃ　だ　を　た<br><br>🌸\n</p></div>\n","site":{"data":{}},"excerpt":"","more":"<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div class=\"entry-content\"><p style=\"text-align: center;\">\n&nbsp;🌸<br><br>僕　花<br> 知　達　の　の<br> ら　は　名　日<br> な　ま　前　見<br> ぃ　だ　を　た<br><br>🌸\n</p></div>\n"},{"title":"","date":"2018-04-25T09:21:54.000Z","type":"messsage","layout":"false","_content":"","source":"message/index.md","raw":"---\ntitle:\ndate: 2018-04-25 17:21:54\ntype: 'messsage'\nlayout: false\n---\n","updated":"2019-05-15T08:03:03.618Z","path":"message/index.html","comments":1,"_id":"cjvozda2b001vkcvc8al7kwdj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"search","date":"2018-03-09T14:16:05.000Z","_content":"","source":"search/index.md","raw":"---\ntitle: search\ndate: 2018-03-09 22:16:05\n---\n","updated":"2019-05-15T08:03:03.618Z","path":"search/index.html","comments":1,"layout":"page","_id":"cjvozda2c001wkcvc8ibnvmyp","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-04-27T03:30:04.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-04-27 11:30:04\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-05-15T08:03:03.619Z","path":"tags/index.html","layout":"page","_id":"cjvozda2d001xkcvcw6zgtt4l","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"实验室","date":"2018-04-27T04:03:47.000Z","type":"lab","layout":"page","comments":0,"_content":"\n<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div id=\"posts\" class=\"post posts-expand\">\n  <ul>\n    <li><p><a href=\"http://p7s7f5gdd.bkt.clouddn.com/%E5%BA%94%E8%81%98Web%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88_%E5%BE%90%E6%9D%A8%E6%B3%A2_%E4%B8%9C%E5%8D%8E%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6.pdf\" target=\"_blank\">Resume</a></p></li>\n  </ul>\n  <div class=\"lab-box\">\n    <span class=\"lab-text\">施工中...</span>\n    <div class=\"lab-logo\">\n      <svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\" xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" width=\"566.33929\" height=\"566.33929\" id=\"svg21252\" version=\"1.1\">\n          <g inkscape:label=\"Layer 1\" inkscape:groupmode=\"layer\" id=\"layer1\">\n              <path id=\"path21770\" d=\"m 725.71429,326.64789 c 0,156.21769 -126.63945,282.85715 -282.85714,282.85715 C 286.63946,609.50504 160,482.86558 160,326.64789 160,170.4302 286.63946,43.790741 442.85715,43.790741 c 156.21769,0 282.85714,126.639459 282.85714,282.857149 z\" transform=\"translate(-159.6875,-43.478241)\" stroke=\"rgba(80,92,114,0.4170006863839937)\" stroke-dasharray=\"41.700068638399365,58.299931361600635\" stroke-dashoffset=\"83.40013727679873\"></path>\n              <path d=\"M 52.282135,150.29338 C 75.653767,109.77004 109.3872,75.976033 149.8628,52.531006\" id=\"path21846\" stroke=\"rgba(106,110,126,0.7753611724860062)\" stroke-dasharray=\"77.53611724860062,22.46388275139938\" stroke-dashoffset=\"155.07223449720124\"></path>\n              <path d=\"M 149.8628,52.531006 C 189.06906,29.82123 234.60123,16.821508 283.16965,16.821508\" id=\"path21844\" stroke=\"rgba(121,121,133,0.985956723272116)\" stroke-dasharray=\"98.5956723272116,1.4043276727883978\" stroke-dashoffset=\"197.1913446544232\"></path>\n              <path d=\"m 283.16965,16.821508 c 48.24731,0 93.49839,12.828397 132.52839,35.26034\" id=\"path21842\" stroke=\"rgba(117,119,131,0.9357770778591998)\" stroke-dasharray=\"93.57770778591998,6.4222922140800165\" stroke-dashoffset=\"187.15541557183997\"></path>\n              <path d=\"m 415.69804,52.081848 c 40.83448,23.469047 74.85935,57.450172 98.38145,98.250252\" id=\"path21840\" stroke=\"rgba(97,104,122,0.6517497510877578)\" stroke-dasharray=\"65.17497510877578,34.82502489122422\" stroke-dashoffset=\"130.34995021755157\"></path>\n              <path d=\"m 514.07949,150.3321 c 22.54204,39.10012 35.4383,84.46279 35.4383,132.83755\" id=\"path21838\" stroke=\"rgba(71,85,109,0.28629012959137096)\" stroke-dasharray=\"28.629012959137096,71.3709870408629\" stroke-dashoffset=\"57.25802591827419\"></path>\n              <path d=\"m 549.51779,283.16965 c 0,48.56842 -12.99972,94.10059 -35.70949,133.30685\" id=\"path21836\" stroke=\"rgba(53,72,101,0.03551198221932084)\" stroke-dasharray=\"3.5511982219320837,96.44880177806792\" stroke-dashoffset=\"7.102396443864167\"></path>\n              <path d=\"m 513.8083,416.4765 c -23.34154,40.29693 -56.94088,73.91109 -97.22612,97.27056\" id=\"path21834\" stroke=\"rgba(52,72,101,0.03398844573785237)\" stroke-dasharray=\"3.3988445737852366,96.60115542621476\" stroke-dashoffset=\"6.797689147570473\"></path>\n              <path d=\"M 416.58218,513.74706 C 377.35207,536.4947 331.78171,549.5178 283.16965,549.5178\" id=\"path21832\" stroke=\"rgba(70,85,109,0.2825370837402752)\" stroke-dasharray=\"28.253708374027518,71.74629162597248\" stroke-dashoffset=\"56.507416748055036\"></path>\n              <path d=\"m 283.16965,549.5178 c -48.4566,0 -93.89092,-12.93993 -133.03596,-35.5528\" id=\"path21830\" stroke=\"rgba(97,104,121,0.6477811638219866)\" stroke-dasharray=\"64.77811638219866,35.22188361780134\" stroke-dashoffset=\"129.55623276439732\"></path>\n              <path d=\"M 150.13369,513.965 C 109.69419,490.60436 75.966798,456.92047 52.55346,416.51527\" id=\"path21828\" stroke=\"rgba(117,119,131,0.9337225814552572)\" stroke-dasharray=\"93.37225814552572,6.62774185447428\" stroke-dashoffset=\"186.74451629105144\"></path>\n              <path d=\"M 52.55346,416.51527 C 29.829795,377.30026 16.821502,331.75408 16.821502,283.16965\" id=\"path21826\" stroke=\"rgba(121,121,133,0.986918806238075)\" stroke-dasharray=\"98.6918806238075,1.3081193761924936\" stroke-dashoffset=\"197.383761247615\"></path>\n              <path d=\"m 16.821502,283.16965 c 0,-48.39073 12.904775,-93.76738 35.460633,-132.87627\" id=\"path21772\" stroke=\"rgba(106,110,126,0.7788235596841993)\" stroke-dasharray=\"77.88235596841993,22.11764403158007\" stroke-dashoffset=\"155.76471193683986\"></path>\n              <path id=\"path21774\" d=\"m 600.58815,320.93359 c 0,132.87317 -107.71498,240.58815 -240.58815,240.58815 -132.87317,0 -240.58815,-107.71498 -240.58815,-240.58815 0,-132.87316 107.71498,-240.588146 240.58815,-240.588146 132.87317,0 240.58815,107.714986 240.58815,240.588146 z\" transform=\"translate(-76.830353,-37.763941)\" stroke=\"rgba(80,92,114,0.4211053837633331)\" stroke-dasharray=\"42.11053837633331,57.88946162366669\" stroke-dashoffset=\"84.22107675266662\"></path>\n              <path id=\"path21776\" d=\"m 557.6301,320.93359 c 0,109.14809 -88.48201,197.6301 -197.6301,197.6301 -109.14809,0 -197.6301,-88.48201 -197.6301,-197.6301 0,-109.14808 88.48201,-197.63009 197.6301,-197.63009 109.14809,0 197.6301,88.48201 197.6301,197.63009 z\" transform=\"translate(-76.830353,-37.763941)\" stroke=\"rgba(58,75,103,0.10572381528691877)\" stroke-dasharray=\"10.572381528691876,89.42761847130812\" stroke-dashoffset=\"21.144763057383752\"></path>\n              <path d=\"m -16.83035,203.16965 0,-203.16965003320314\" id=\"path21778\" inkscape:path-effect=\"#path-effect21780\" inkscape:original-d=\"m -16.83035,203.16965 0,-203.16965003320314\" inkscape:connector-curvature=\"0\" inkscape:transform-center-y=\"-141.57143\" inkscape:tile-cx=\"283.16965\" inkscape:tile-cy=\"283.15625\" inkscape:tile-w=\"0\" inkscape:tile-h=\"283.16965\" inkscape:tile-x0=\"283.16965\" inkscape:tile-y0=\"0\" stroke=\"rgba(50,70,100,0.0019196250034667073)\" stroke-dasharray=\"0.19196250034667073,99.80803749965332\" stroke-dashoffset=\"0.38392500069334146\"></path>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" id=\"use21782\" inkscape:transform-center-y=\"-141.57143\" width=\"566.33929\" height=\"566.33929\" transform=\"translate(300,3.320315e-8)\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.8660254,0.5,-0.5,0.8660254,439.32332,46.35092)\" id=\"use21784\" inkscape:transform-center-x=\"-70.785717\" inkscape:transform-center-y=\"-122.60446\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.5,0.8660254,-0.8660254,0.5,536.80534,156.15365)\" id=\"use21786\" inkscape:transform-center-x=\"-122.60446\" inkscape:transform-center-y=\"-70.785713\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0,1,-1,0,566.3259,299.9866)\" id=\"use21788\" inkscape:transform-center-x=\"-141.57143\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.5,0.8660254,-0.8660254,-0.5,519.97499,439.30992)\" id=\"use21790\" inkscape:transform-center-x=\"-122.60446\" inkscape:transform-center-y=\"70.785712\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.8660254,0.5,-0.5,-0.8660254,410.17224,536.79194)\" id=\"use21792\" inkscape:transform-center-x=\"-70.785718\" inkscape:transform-center-y=\"122.60446\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-1,0,0,-1,266.3393,566.31251)\" id=\"use21794\" inkscape:transform-center-y=\"141.57143\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.8660254,-0.5,0.5,-0.8660254,127.01598,519.96159)\" id=\"use21796\" inkscape:transform-center-x=\"70.785717\" inkscape:transform-center-y=\"122.60446\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.5,-0.8660254,0.8660254,-0.5,29.53396,410.15884)\" id=\"use21798\" inkscape:transform-center-x=\"122.60446\" inkscape:transform-center-y=\"70.785713\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0,-1,1,0,0.01339503,266.32591)\" id=\"use21800\" inkscape:transform-center-x=\"141.57143\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.5,-0.8660254,0.8660254,0.5,46.36431,127.00259)\" id=\"use21802\" inkscape:transform-center-x=\"122.60446\" inkscape:transform-center-y=\"-70.785712\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.8660254,-0.5,0.5,0.8660254,156.16704,29.52057)\" id=\"use21804\" inkscape:transform-center-x=\"70.785718\" inkscape:transform-center-y=\"-122.60446\" width=\"566.33929\" height=\"566.33929\"></use>\n              <path id=\"path21806\" d=\"m 363.14984,283.16965 a 79.980194,79.980194 0 1 1 -159.96039,0 79.980194,79.980194 0 1 1 159.96039,0 z\" stroke=\"rgba(62,79,105,0.16539645233415728)\" stroke-dasharray=\"16.53964523341573,83.46035476658427\" stroke-dashoffset=\"33.07929046683146\"></path>\n              <path id=\"path21808\" d=\"m 368.72494,283.16965 a 85.55529,85.55529 0 1 1 -171.11058,0 85.55529,85.55529 0 1 1 171.11058,0 z\" stroke=\"rgba(87,96,117,0.5084289923709572)\" stroke-dasharray=\"50.842899237095715,49.157100762904285\" stroke-dashoffset=\"101.68579847419143\"></path>\n              <path id=\"path21810\" d=\"m 475.8651,283.16965 a 192.69545,192.69545 0 1 1 -385.390903,0 192.69545,192.69545 0 1 1 385.390903,0 z\" stroke=\"rgba(111,114,128,0.8469383474531462)\" stroke-dasharray=\"84.69383474531462,15.306165254685382\" stroke-dashoffset=\"169.38766949062924\"></path>\n              <text xml:space=\"preserve\" id=\"text21848\" stroke=\"rgba(255,255,255,0.9992728616629332)\" stroke-dasharray=\"99.92728616629331,0.07271383370668616\" stroke-dashoffset=\"199.85457233258663\">\n                              <textPath xlink:href=\"#path21842\" startOffset=\"50%\" id=\"textPath21875\">\n                                  <tspan id=\"tspan21850\">Enero</tspan>\n                              </textPath>\n                          </text>\n                          <text id=\"text21855\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.8836864433659483)\" stroke-dasharray=\"88.36864433659483,11.631355663405174\" stroke-dashoffset=\"176.73728867318965\">\n                              <textPath xlink:href=\"#path21840\" startOffset=\"50%\" id=\"textPath21878\">\n                                  <tspan id=\"tspan21857\">Febrero</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21859\" stroke=\"rgba(255,255,255,0.5622053378343669)\" stroke-dasharray=\"56.220533783436686,43.779466216563314\" stroke-dashoffset=\"112.44106756687337\">\n                              <textPath xlink:href=\"#path21838\" startOffset=\"50%\" id=\"textPath21881\">\n                                  <tspan id=\"tspan21861\">Marzo</tspan>\n                              </textPath>\n                          </text>\n                          <text id=\"text21863\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.20734346318993535)\" stroke-dasharray=\"20.734346318993534,79.26565368100647\" stroke-dashoffset=\"41.46869263798707\">\n                              <textPath xlink:href=\"#path21836\" startOffset=\"50%\" id=\"textPath21884\">\n                                  <tspan id=\"tspan21865\">Abril</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21867\" stroke=\"rgba(255,255,255,0.009527601391461249)\" stroke-dasharray=\"0.9527601391461249,99.04723986085388\" stroke-dashoffset=\"1.9055202782922498\">\n                              <textPath xlink:href=\"#path21834\" startOffset=\"50%\" id=\"textPath21887\">\n                                  <tspan id=\"tspan21869\">Mayo</tspan>\n                              </textPath>\n                          </text>\n                          <text id=\"text21871\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.07491014770664162)\" stroke-dasharray=\"7.491014770664162,92.50898522933583\" stroke-dashoffset=\"14.982029541328323\">\n                              <textPath xlink:href=\"#path21832\" startOffset=\"50%\" id=\"textPath21890\">\n                                  <tspan id=\"tspan21873\">Junio</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21893\" stroke=\"rgba(255,255,255,0.3684053722200048)\" stroke-dasharray=\"36.84053722200048,63.15946277799952\" stroke-dashoffset=\"73.68107444400096\">\n                              <textPath xlink:href=\"#path21830\" startOffset=\"50%\" id=\"textPath21946\">\n                                  <tspan id=\"tspan21895\">Julio</tspan>\n                              </textPath>\n                          </text>\n                          <text id=\"text21897\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.7325172035929259)\" stroke-dasharray=\"73.25172035929259,26.74827964070741\" stroke-dashoffset=\"146.50344071858518\">\n                              <textPath xlink:href=\"#path21828\" startOffset=\"50%\" id=\"textPath21949\">\n                                  <tspan id=\"tspan21899\">Agosto</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21901\" stroke=\"rgba(255,255,255,0.971855127161219)\" stroke-dasharray=\"97.1855127161219,2.814487283878094\" stroke-dashoffset=\"194.3710254322438\">\n                              <textPath xlink:href=\"#path21826\" startOffset=\"50%\" id=\"textPath21952\">\n                                  <tspan id=\"tspan21903\">Septiembre</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21901-8\" stroke=\"rgba(255,255,255,0.9579850849368847)\" stroke-dasharray=\"95.79850849368847,4.201491506311527\" stroke-dashoffset=\"191.59701698737695\">\n                              <textPath xlink:href=\"#path21772\" startOffset=\"50%\" id=\"textPath21955\">\n                                  <tspan id=\"tspan21903-8\">Octubre</tspan>\n                              </textPath>\n                          </text>\n                          <text id=\"text21938\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.6983500503558808)\" stroke-dasharray=\"69.83500503558808,30.164994964411918\" stroke-dashoffset=\"139.67001007117616\">\n                              <textPath xlink:href=\"#path21846\" startOffset=\"50%\" id=\"textPath21958\">\n                                  <tspan id=\"tspan21940\">Noviembre</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21942\" stroke=\"rgba(255,255,255,0.33227596303503487)\" stroke-dasharray=\"33.22759630350349,66.77240369649651\" stroke-dashoffset=\"66.45519260700698\">\n                              <textPath xlink:href=\"#path21844\" startOffset=\"50%\" id=\"textPath21961\">\n                                  <tspan id=\"tspan21944\">Diciembre</tspan>\n                              </textPath>\n                          </text>\n              <path id=\"path21968\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 283.16965,522.76807 75.671333,402.96886 75.671326,163.37044 283.16964,43.571228 490.66796,163.37043 l 1e-5,239.59842 z\" stroke=\"rgba(54,73,102,0.056206327864426864)\" stroke-dasharray=\"5.620632786442687,94.37936721355732\" stroke-dashoffset=\"11.241265572885373\"></path>\n              <path id=\"path21970\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 523.57774,283.16965 -120.20404,208.19952 -240.4081,0 L 42.761551,283.16965 162.9656,74.970129 l 240.4081,0 z\" stroke=\"rgba(51,71,101,0.018286257008491347)\" stroke-dasharray=\"1.8286257008491347,98.17137429915087\" stroke-dashoffset=\"3.6572514016982693\"></path>\n              <path id=\"path21972\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 283.16965,464.72768 -157.23387,-90.77901 0,-181.55803 157.23386,-90.77902 157.23387,90.77901 1e-5,181.55803 z\" stroke=\"rgba(67,82,108,0.23886450467471032)\" stroke-dasharray=\"23.886450467471033,76.11354953252896\" stroke-dashoffset=\"47.772900934942065\"></path>\n              <path id=\"path21974\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 373.94955,440.40506 -181.55982,-10e-6 -90.7799,-157.23541 90.77992,-157.23541 181.55981,1e-5 90.7799,157.23542 z\" stroke=\"rgba(93,101,120,0.5995738725967763)\" stroke-dasharray=\"59.95738725967763,40.04261274032237\" stroke-dashoffset=\"119.91477451935526\"></path>\n              <path id=\"path22324\" d=\"m 333.2827,101.58482 a 50.113056,50.113056 0 1 1 -100.22611,0 50.113056,50.113056 0 1 1 100.22611,0 z\" inkscape:transform-center-y=\"-181.58482\" inkscape:tile-cx=\"283.16965\" inkscape:tile-cy=\"283.16964\" inkscape:tile-w=\"100.22611\" inkscape:tile-h=\"100.22611\" inkscape:tile-x0=\"233.05659\" inkscape:tile-y0=\"51.471767\" stroke=\"rgba(115,117,130,0.9068496837447322)\" stroke-dasharray=\"90.68496837447321,9.315031625526785\" stroke-dashoffset=\"181.36993674894643\"></path>\n              <use x=\"0\" y=\"0\" xlink:href=\"#path22324\" inkscape:transform-center-y=\"-157.18378\" id=\"use22566\" transform=\"matrix(0.8656218,0.50069841,-0.50069841,0.8656218,179.83442,-103.73077)\" width=\"566.33929\" height=\"566.33929\" inkscape:transform-center-x=\"-90.919233\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22566\" inkscape:transform-center-x=\"-157.25313\" inkscape:transform-center-y=\"-90.799232\" id=\"use22568\" transform=\"matrix(0.8664501,0.49926367,-0.49926367,0.8664501,179.19359,-103.55904)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22568\" inkscape:transform-center-x=\"-181.58442\" inkscape:transform-center-y=\"-0.38236251\" id=\"use22570\" transform=\"matrix(0.86705474,0.49821289,-0.49821289,0.86705474,178.72483,-103.4327)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22570\" inkscape:transform-center-x=\"-157.3472\" inkscape:transform-center-y=\"90.636109\" id=\"use22572\" transform=\"matrix(0.86546883,0.50096277,-0.50096277,0.86546883,179.95259,-103.76231)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22572\" inkscape:transform-center-x=\"-90.676807\" inkscape:transform-center-y=\"157.32375\" id=\"use22574\" transform=\"matrix(0.86515982,0.50149625,-0.50149625,0.86515982,180.19116,-103.82587)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22574\" inkscape:transform-center-x=\"-0.60734728\" inkscape:transform-center-y=\"181.5838\" id=\"use22576\" transform=\"matrix(0.86805803,0.49646275,-0.49646275,0.86805803,177.94514,-103.22122)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22576\" inkscape:transform-center-x=\"90.833529\" inkscape:transform-center-y=\"157.23331\" id=\"use22578\" transform=\"matrix(0.86421665,0.50311985,-0.50311985,0.86421665,180.918,-104.01855)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22578\" inkscape:transform-center-x=\"157.46492\" inkscape:transform-center-y=\"90.431432\" id=\"use22580\" transform=\"matrix(0.86500742,0.50175907,-0.50175907,0.86500742,180.30874,-103.85714)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22580\" inkscape:transform-center-x=\"181.58478\" inkscape:transform-center-y=\"-0.11340949\" id=\"use22582\" transform=\"matrix(0.86685888,0.49855358,-0.49855358,0.86685888,178.87677,-103.47372)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22582\" inkscape:transform-center-x=\"157.72273\" inkscape:transform-center-y=\"-89.98104\" id=\"use22584\" transform=\"matrix(0.86889915,0.49498916,-0.49498916,0.86889915,177.28969,-103.04213)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22584\" inkscape:transform-center-x=\"90.899088\" inkscape:transform-center-y=\"-157.19543\" id=\"use22586\" transform=\"matrix(0.86378007,0.50386902,-0.50386902,0.86378007,181.25377,-104.10707)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <path id=\"path22588\" inkscape:flatsided=\"false\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 283.16965,203.44434 19.93132,45.20323 49.11282,-5.34058 -29.18149,39.86266 29.18149,39.86265 -49.11281,-5.34058 -19.93133,45.20324 -19.93133,-45.20324 -49.11282,5.34058 29.18149,-39.86265 -29.18149,-39.86266 49.11282,5.34059 z\" stroke=\"rgba(122,122,133,0.9958008972049331)\" stroke-dasharray=\"99.58008972049332,0.4199102795066807\" stroke-dashoffset=\"199.16017944098664\"></path>\n              <path id=\"path22590\" inkscape:flatsided=\"false\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 323.09864,352.3287 -39.92899,-29.23006 -39.929,29.23006 5.34947,-49.19455 -45.27847,-19.96451 45.27847,-19.96449 -5.34947,-49.19456 39.929,29.23006 39.929,-29.23005 -5.34948,49.19455 45.27847,19.9645 -45.27847,19.96449 z\" stroke=\"rgba(109,113,127,0.8186943115802743)\" stroke-dasharray=\"81.86943115802742,18.130568841972575\" stroke-dashoffset=\"163.73886231605485\"></path>\n              <path id=\"path22592\" d=\"m 322.10973,283.16965 a 38.940086,38.940086 0 1 1 -77.88017,0 38.940086,38.940086 0 1 1 77.88017,0 z\" stroke=\"rgba(84,94,116,0.4705692635084505)\" stroke-dasharray=\"47.05692635084505,52.94307364915495\" stroke-dashoffset=\"94.1138527016901\"></path>\n          </g>\n          s\n      </svg>\n    </div>\n  </div>\n</div>\n","source":"lab/index.html","raw":"---\ntitle: 实验室\ndate: 2018-04-27 12:03:47\ntype: \"lab\"\nlayout: page\ncomments: false\n---\n\n<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div id=\"posts\" class=\"post posts-expand\">\n  <ul>\n    <li><p><a href=\"http://p7s7f5gdd.bkt.clouddn.com/%E5%BA%94%E8%81%98Web%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88_%E5%BE%90%E6%9D%A8%E6%B3%A2_%E4%B8%9C%E5%8D%8E%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6.pdf\" target=\"_blank\">Resume</a></p></li>\n  </ul>\n  <div class=\"lab-box\">\n    <span class=\"lab-text\">施工中...</span>\n    <div class=\"lab-logo\">\n      <svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\" xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" width=\"566.33929\" height=\"566.33929\" id=\"svg21252\" version=\"1.1\">\n          <g inkscape:label=\"Layer 1\" inkscape:groupmode=\"layer\" id=\"layer1\">\n              <path id=\"path21770\" d=\"m 725.71429,326.64789 c 0,156.21769 -126.63945,282.85715 -282.85714,282.85715 C 286.63946,609.50504 160,482.86558 160,326.64789 160,170.4302 286.63946,43.790741 442.85715,43.790741 c 156.21769,0 282.85714,126.639459 282.85714,282.857149 z\" transform=\"translate(-159.6875,-43.478241)\" stroke=\"rgba(80,92,114,0.4170006863839937)\" stroke-dasharray=\"41.700068638399365,58.299931361600635\" stroke-dashoffset=\"83.40013727679873\"></path>\n              <path d=\"M 52.282135,150.29338 C 75.653767,109.77004 109.3872,75.976033 149.8628,52.531006\" id=\"path21846\" stroke=\"rgba(106,110,126,0.7753611724860062)\" stroke-dasharray=\"77.53611724860062,22.46388275139938\" stroke-dashoffset=\"155.07223449720124\"></path>\n              <path d=\"M 149.8628,52.531006 C 189.06906,29.82123 234.60123,16.821508 283.16965,16.821508\" id=\"path21844\" stroke=\"rgba(121,121,133,0.985956723272116)\" stroke-dasharray=\"98.5956723272116,1.4043276727883978\" stroke-dashoffset=\"197.1913446544232\"></path>\n              <path d=\"m 283.16965,16.821508 c 48.24731,0 93.49839,12.828397 132.52839,35.26034\" id=\"path21842\" stroke=\"rgba(117,119,131,0.9357770778591998)\" stroke-dasharray=\"93.57770778591998,6.4222922140800165\" stroke-dashoffset=\"187.15541557183997\"></path>\n              <path d=\"m 415.69804,52.081848 c 40.83448,23.469047 74.85935,57.450172 98.38145,98.250252\" id=\"path21840\" stroke=\"rgba(97,104,122,0.6517497510877578)\" stroke-dasharray=\"65.17497510877578,34.82502489122422\" stroke-dashoffset=\"130.34995021755157\"></path>\n              <path d=\"m 514.07949,150.3321 c 22.54204,39.10012 35.4383,84.46279 35.4383,132.83755\" id=\"path21838\" stroke=\"rgba(71,85,109,0.28629012959137096)\" stroke-dasharray=\"28.629012959137096,71.3709870408629\" stroke-dashoffset=\"57.25802591827419\"></path>\n              <path d=\"m 549.51779,283.16965 c 0,48.56842 -12.99972,94.10059 -35.70949,133.30685\" id=\"path21836\" stroke=\"rgba(53,72,101,0.03551198221932084)\" stroke-dasharray=\"3.5511982219320837,96.44880177806792\" stroke-dashoffset=\"7.102396443864167\"></path>\n              <path d=\"m 513.8083,416.4765 c -23.34154,40.29693 -56.94088,73.91109 -97.22612,97.27056\" id=\"path21834\" stroke=\"rgba(52,72,101,0.03398844573785237)\" stroke-dasharray=\"3.3988445737852366,96.60115542621476\" stroke-dashoffset=\"6.797689147570473\"></path>\n              <path d=\"M 416.58218,513.74706 C 377.35207,536.4947 331.78171,549.5178 283.16965,549.5178\" id=\"path21832\" stroke=\"rgba(70,85,109,0.2825370837402752)\" stroke-dasharray=\"28.253708374027518,71.74629162597248\" stroke-dashoffset=\"56.507416748055036\"></path>\n              <path d=\"m 283.16965,549.5178 c -48.4566,0 -93.89092,-12.93993 -133.03596,-35.5528\" id=\"path21830\" stroke=\"rgba(97,104,121,0.6477811638219866)\" stroke-dasharray=\"64.77811638219866,35.22188361780134\" stroke-dashoffset=\"129.55623276439732\"></path>\n              <path d=\"M 150.13369,513.965 C 109.69419,490.60436 75.966798,456.92047 52.55346,416.51527\" id=\"path21828\" stroke=\"rgba(117,119,131,0.9337225814552572)\" stroke-dasharray=\"93.37225814552572,6.62774185447428\" stroke-dashoffset=\"186.74451629105144\"></path>\n              <path d=\"M 52.55346,416.51527 C 29.829795,377.30026 16.821502,331.75408 16.821502,283.16965\" id=\"path21826\" stroke=\"rgba(121,121,133,0.986918806238075)\" stroke-dasharray=\"98.6918806238075,1.3081193761924936\" stroke-dashoffset=\"197.383761247615\"></path>\n              <path d=\"m 16.821502,283.16965 c 0,-48.39073 12.904775,-93.76738 35.460633,-132.87627\" id=\"path21772\" stroke=\"rgba(106,110,126,0.7788235596841993)\" stroke-dasharray=\"77.88235596841993,22.11764403158007\" stroke-dashoffset=\"155.76471193683986\"></path>\n              <path id=\"path21774\" d=\"m 600.58815,320.93359 c 0,132.87317 -107.71498,240.58815 -240.58815,240.58815 -132.87317,0 -240.58815,-107.71498 -240.58815,-240.58815 0,-132.87316 107.71498,-240.588146 240.58815,-240.588146 132.87317,0 240.58815,107.714986 240.58815,240.588146 z\" transform=\"translate(-76.830353,-37.763941)\" stroke=\"rgba(80,92,114,0.4211053837633331)\" stroke-dasharray=\"42.11053837633331,57.88946162366669\" stroke-dashoffset=\"84.22107675266662\"></path>\n              <path id=\"path21776\" d=\"m 557.6301,320.93359 c 0,109.14809 -88.48201,197.6301 -197.6301,197.6301 -109.14809,0 -197.6301,-88.48201 -197.6301,-197.6301 0,-109.14808 88.48201,-197.63009 197.6301,-197.63009 109.14809,0 197.6301,88.48201 197.6301,197.63009 z\" transform=\"translate(-76.830353,-37.763941)\" stroke=\"rgba(58,75,103,0.10572381528691877)\" stroke-dasharray=\"10.572381528691876,89.42761847130812\" stroke-dashoffset=\"21.144763057383752\"></path>\n              <path d=\"m -16.83035,203.16965 0,-203.16965003320314\" id=\"path21778\" inkscape:path-effect=\"#path-effect21780\" inkscape:original-d=\"m -16.83035,203.16965 0,-203.16965003320314\" inkscape:connector-curvature=\"0\" inkscape:transform-center-y=\"-141.57143\" inkscape:tile-cx=\"283.16965\" inkscape:tile-cy=\"283.15625\" inkscape:tile-w=\"0\" inkscape:tile-h=\"283.16965\" inkscape:tile-x0=\"283.16965\" inkscape:tile-y0=\"0\" stroke=\"rgba(50,70,100,0.0019196250034667073)\" stroke-dasharray=\"0.19196250034667073,99.80803749965332\" stroke-dashoffset=\"0.38392500069334146\"></path>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" id=\"use21782\" inkscape:transform-center-y=\"-141.57143\" width=\"566.33929\" height=\"566.33929\" transform=\"translate(300,3.320315e-8)\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.8660254,0.5,-0.5,0.8660254,439.32332,46.35092)\" id=\"use21784\" inkscape:transform-center-x=\"-70.785717\" inkscape:transform-center-y=\"-122.60446\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.5,0.8660254,-0.8660254,0.5,536.80534,156.15365)\" id=\"use21786\" inkscape:transform-center-x=\"-122.60446\" inkscape:transform-center-y=\"-70.785713\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0,1,-1,0,566.3259,299.9866)\" id=\"use21788\" inkscape:transform-center-x=\"-141.57143\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.5,0.8660254,-0.8660254,-0.5,519.97499,439.30992)\" id=\"use21790\" inkscape:transform-center-x=\"-122.60446\" inkscape:transform-center-y=\"70.785712\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.8660254,0.5,-0.5,-0.8660254,410.17224,536.79194)\" id=\"use21792\" inkscape:transform-center-x=\"-70.785718\" inkscape:transform-center-y=\"122.60446\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-1,0,0,-1,266.3393,566.31251)\" id=\"use21794\" inkscape:transform-center-y=\"141.57143\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.8660254,-0.5,0.5,-0.8660254,127.01598,519.96159)\" id=\"use21796\" inkscape:transform-center-x=\"70.785717\" inkscape:transform-center-y=\"122.60446\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.5,-0.8660254,0.8660254,-0.5,29.53396,410.15884)\" id=\"use21798\" inkscape:transform-center-x=\"122.60446\" inkscape:transform-center-y=\"70.785713\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0,-1,1,0,0.01339503,266.32591)\" id=\"use21800\" inkscape:transform-center-x=\"141.57143\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.5,-0.8660254,0.8660254,0.5,46.36431,127.00259)\" id=\"use21802\" inkscape:transform-center-x=\"122.60446\" inkscape:transform-center-y=\"-70.785712\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.8660254,-0.5,0.5,0.8660254,156.16704,29.52057)\" id=\"use21804\" inkscape:transform-center-x=\"70.785718\" inkscape:transform-center-y=\"-122.60446\" width=\"566.33929\" height=\"566.33929\"></use>\n              <path id=\"path21806\" d=\"m 363.14984,283.16965 a 79.980194,79.980194 0 1 1 -159.96039,0 79.980194,79.980194 0 1 1 159.96039,0 z\" stroke=\"rgba(62,79,105,0.16539645233415728)\" stroke-dasharray=\"16.53964523341573,83.46035476658427\" stroke-dashoffset=\"33.07929046683146\"></path>\n              <path id=\"path21808\" d=\"m 368.72494,283.16965 a 85.55529,85.55529 0 1 1 -171.11058,0 85.55529,85.55529 0 1 1 171.11058,0 z\" stroke=\"rgba(87,96,117,0.5084289923709572)\" stroke-dasharray=\"50.842899237095715,49.157100762904285\" stroke-dashoffset=\"101.68579847419143\"></path>\n              <path id=\"path21810\" d=\"m 475.8651,283.16965 a 192.69545,192.69545 0 1 1 -385.390903,0 192.69545,192.69545 0 1 1 385.390903,0 z\" stroke=\"rgba(111,114,128,0.8469383474531462)\" stroke-dasharray=\"84.69383474531462,15.306165254685382\" stroke-dashoffset=\"169.38766949062924\"></path>\n              <text xml:space=\"preserve\" id=\"text21848\" stroke=\"rgba(255,255,255,0.9992728616629332)\" stroke-dasharray=\"99.92728616629331,0.07271383370668616\" stroke-dashoffset=\"199.85457233258663\">\n                              <textPath xlink:href=\"#path21842\" startOffset=\"50%\" id=\"textPath21875\">\n                                  <tspan id=\"tspan21850\">Enero</tspan>\n                              </textPath>\n                          </text>\n                          <text id=\"text21855\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.8836864433659483)\" stroke-dasharray=\"88.36864433659483,11.631355663405174\" stroke-dashoffset=\"176.73728867318965\">\n                              <textPath xlink:href=\"#path21840\" startOffset=\"50%\" id=\"textPath21878\">\n                                  <tspan id=\"tspan21857\">Febrero</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21859\" stroke=\"rgba(255,255,255,0.5622053378343669)\" stroke-dasharray=\"56.220533783436686,43.779466216563314\" stroke-dashoffset=\"112.44106756687337\">\n                              <textPath xlink:href=\"#path21838\" startOffset=\"50%\" id=\"textPath21881\">\n                                  <tspan id=\"tspan21861\">Marzo</tspan>\n                              </textPath>\n                          </text>\n                          <text id=\"text21863\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.20734346318993535)\" stroke-dasharray=\"20.734346318993534,79.26565368100647\" stroke-dashoffset=\"41.46869263798707\">\n                              <textPath xlink:href=\"#path21836\" startOffset=\"50%\" id=\"textPath21884\">\n                                  <tspan id=\"tspan21865\">Abril</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21867\" stroke=\"rgba(255,255,255,0.009527601391461249)\" stroke-dasharray=\"0.9527601391461249,99.04723986085388\" stroke-dashoffset=\"1.9055202782922498\">\n                              <textPath xlink:href=\"#path21834\" startOffset=\"50%\" id=\"textPath21887\">\n                                  <tspan id=\"tspan21869\">Mayo</tspan>\n                              </textPath>\n                          </text>\n                          <text id=\"text21871\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.07491014770664162)\" stroke-dasharray=\"7.491014770664162,92.50898522933583\" stroke-dashoffset=\"14.982029541328323\">\n                              <textPath xlink:href=\"#path21832\" startOffset=\"50%\" id=\"textPath21890\">\n                                  <tspan id=\"tspan21873\">Junio</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21893\" stroke=\"rgba(255,255,255,0.3684053722200048)\" stroke-dasharray=\"36.84053722200048,63.15946277799952\" stroke-dashoffset=\"73.68107444400096\">\n                              <textPath xlink:href=\"#path21830\" startOffset=\"50%\" id=\"textPath21946\">\n                                  <tspan id=\"tspan21895\">Julio</tspan>\n                              </textPath>\n                          </text>\n                          <text id=\"text21897\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.7325172035929259)\" stroke-dasharray=\"73.25172035929259,26.74827964070741\" stroke-dashoffset=\"146.50344071858518\">\n                              <textPath xlink:href=\"#path21828\" startOffset=\"50%\" id=\"textPath21949\">\n                                  <tspan id=\"tspan21899\">Agosto</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21901\" stroke=\"rgba(255,255,255,0.971855127161219)\" stroke-dasharray=\"97.1855127161219,2.814487283878094\" stroke-dashoffset=\"194.3710254322438\">\n                              <textPath xlink:href=\"#path21826\" startOffset=\"50%\" id=\"textPath21952\">\n                                  <tspan id=\"tspan21903\">Septiembre</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21901-8\" stroke=\"rgba(255,255,255,0.9579850849368847)\" stroke-dasharray=\"95.79850849368847,4.201491506311527\" stroke-dashoffset=\"191.59701698737695\">\n                              <textPath xlink:href=\"#path21772\" startOffset=\"50%\" id=\"textPath21955\">\n                                  <tspan id=\"tspan21903-8\">Octubre</tspan>\n                              </textPath>\n                          </text>\n                          <text id=\"text21938\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.6983500503558808)\" stroke-dasharray=\"69.83500503558808,30.164994964411918\" stroke-dashoffset=\"139.67001007117616\">\n                              <textPath xlink:href=\"#path21846\" startOffset=\"50%\" id=\"textPath21958\">\n                                  <tspan id=\"tspan21940\">Noviembre</tspan>\n                              </textPath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21942\" stroke=\"rgba(255,255,255,0.33227596303503487)\" stroke-dasharray=\"33.22759630350349,66.77240369649651\" stroke-dashoffset=\"66.45519260700698\">\n                              <textPath xlink:href=\"#path21844\" startOffset=\"50%\" id=\"textPath21961\">\n                                  <tspan id=\"tspan21944\">Diciembre</tspan>\n                              </textPath>\n                          </text>\n              <path id=\"path21968\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 283.16965,522.76807 75.671333,402.96886 75.671326,163.37044 283.16964,43.571228 490.66796,163.37043 l 1e-5,239.59842 z\" stroke=\"rgba(54,73,102,0.056206327864426864)\" stroke-dasharray=\"5.620632786442687,94.37936721355732\" stroke-dashoffset=\"11.241265572885373\"></path>\n              <path id=\"path21970\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 523.57774,283.16965 -120.20404,208.19952 -240.4081,0 L 42.761551,283.16965 162.9656,74.970129 l 240.4081,0 z\" stroke=\"rgba(51,71,101,0.018286257008491347)\" stroke-dasharray=\"1.8286257008491347,98.17137429915087\" stroke-dashoffset=\"3.6572514016982693\"></path>\n              <path id=\"path21972\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 283.16965,464.72768 -157.23387,-90.77901 0,-181.55803 157.23386,-90.77902 157.23387,90.77901 1e-5,181.55803 z\" stroke=\"rgba(67,82,108,0.23886450467471032)\" stroke-dasharray=\"23.886450467471033,76.11354953252896\" stroke-dashoffset=\"47.772900934942065\"></path>\n              <path id=\"path21974\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 373.94955,440.40506 -181.55982,-10e-6 -90.7799,-157.23541 90.77992,-157.23541 181.55981,1e-5 90.7799,157.23542 z\" stroke=\"rgba(93,101,120,0.5995738725967763)\" stroke-dasharray=\"59.95738725967763,40.04261274032237\" stroke-dashoffset=\"119.91477451935526\"></path>\n              <path id=\"path22324\" d=\"m 333.2827,101.58482 a 50.113056,50.113056 0 1 1 -100.22611,0 50.113056,50.113056 0 1 1 100.22611,0 z\" inkscape:transform-center-y=\"-181.58482\" inkscape:tile-cx=\"283.16965\" inkscape:tile-cy=\"283.16964\" inkscape:tile-w=\"100.22611\" inkscape:tile-h=\"100.22611\" inkscape:tile-x0=\"233.05659\" inkscape:tile-y0=\"51.471767\" stroke=\"rgba(115,117,130,0.9068496837447322)\" stroke-dasharray=\"90.68496837447321,9.315031625526785\" stroke-dashoffset=\"181.36993674894643\"></path>\n              <use x=\"0\" y=\"0\" xlink:href=\"#path22324\" inkscape:transform-center-y=\"-157.18378\" id=\"use22566\" transform=\"matrix(0.8656218,0.50069841,-0.50069841,0.8656218,179.83442,-103.73077)\" width=\"566.33929\" height=\"566.33929\" inkscape:transform-center-x=\"-90.919233\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22566\" inkscape:transform-center-x=\"-157.25313\" inkscape:transform-center-y=\"-90.799232\" id=\"use22568\" transform=\"matrix(0.8664501,0.49926367,-0.49926367,0.8664501,179.19359,-103.55904)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22568\" inkscape:transform-center-x=\"-181.58442\" inkscape:transform-center-y=\"-0.38236251\" id=\"use22570\" transform=\"matrix(0.86705474,0.49821289,-0.49821289,0.86705474,178.72483,-103.4327)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22570\" inkscape:transform-center-x=\"-157.3472\" inkscape:transform-center-y=\"90.636109\" id=\"use22572\" transform=\"matrix(0.86546883,0.50096277,-0.50096277,0.86546883,179.95259,-103.76231)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22572\" inkscape:transform-center-x=\"-90.676807\" inkscape:transform-center-y=\"157.32375\" id=\"use22574\" transform=\"matrix(0.86515982,0.50149625,-0.50149625,0.86515982,180.19116,-103.82587)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22574\" inkscape:transform-center-x=\"-0.60734728\" inkscape:transform-center-y=\"181.5838\" id=\"use22576\" transform=\"matrix(0.86805803,0.49646275,-0.49646275,0.86805803,177.94514,-103.22122)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22576\" inkscape:transform-center-x=\"90.833529\" inkscape:transform-center-y=\"157.23331\" id=\"use22578\" transform=\"matrix(0.86421665,0.50311985,-0.50311985,0.86421665,180.918,-104.01855)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22578\" inkscape:transform-center-x=\"157.46492\" inkscape:transform-center-y=\"90.431432\" id=\"use22580\" transform=\"matrix(0.86500742,0.50175907,-0.50175907,0.86500742,180.30874,-103.85714)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22580\" inkscape:transform-center-x=\"181.58478\" inkscape:transform-center-y=\"-0.11340949\" id=\"use22582\" transform=\"matrix(0.86685888,0.49855358,-0.49855358,0.86685888,178.87677,-103.47372)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22582\" inkscape:transform-center-x=\"157.72273\" inkscape:transform-center-y=\"-89.98104\" id=\"use22584\" transform=\"matrix(0.86889915,0.49498916,-0.49498916,0.86889915,177.28969,-103.04213)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22584\" inkscape:transform-center-x=\"90.899088\" inkscape:transform-center-y=\"-157.19543\" id=\"use22586\" transform=\"matrix(0.86378007,0.50386902,-0.50386902,0.86378007,181.25377,-104.10707)\" width=\"566.33929\" height=\"566.33929\"></use>\n              <path id=\"path22588\" inkscape:flatsided=\"false\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 283.16965,203.44434 19.93132,45.20323 49.11282,-5.34058 -29.18149,39.86266 29.18149,39.86265 -49.11281,-5.34058 -19.93133,45.20324 -19.93133,-45.20324 -49.11282,5.34058 29.18149,-39.86265 -29.18149,-39.86266 49.11282,5.34059 z\" stroke=\"rgba(122,122,133,0.9958008972049331)\" stroke-dasharray=\"99.58008972049332,0.4199102795066807\" stroke-dashoffset=\"199.16017944098664\"></path>\n              <path id=\"path22590\" inkscape:flatsided=\"false\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 323.09864,352.3287 -39.92899,-29.23006 -39.929,29.23006 5.34947,-49.19455 -45.27847,-19.96451 45.27847,-19.96449 -5.34947,-49.19456 39.929,29.23006 39.929,-29.23005 -5.34948,49.19455 45.27847,19.9645 -45.27847,19.96449 z\" stroke=\"rgba(109,113,127,0.8186943115802743)\" stroke-dasharray=\"81.86943115802742,18.130568841972575\" stroke-dashoffset=\"163.73886231605485\"></path>\n              <path id=\"path22592\" d=\"m 322.10973,283.16965 a 38.940086,38.940086 0 1 1 -77.88017,0 38.940086,38.940086 0 1 1 77.88017,0 z\" stroke=\"rgba(84,94,116,0.4705692635084505)\" stroke-dasharray=\"47.05692635084505,52.94307364915495\" stroke-dashoffset=\"94.1138527016901\"></path>\n          </g>\n          s\n      </svg>\n    </div>\n  </div>\n</div>\n","updated":"2019-05-15T08:03:03.617Z","path":"lab/index.html","_id":"cjvozda39001ykcvc0tldz5ie","content":"\n<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div id=\"posts\" class=\"post posts-expand\">\n  <ul>\n    <li><p><a href=\"http://p7s7f5gdd.bkt.clouddn.com/%E5%BA%94%E8%81%98Web%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88_%E5%BE%90%E6%9D%A8%E6%B3%A2_%E4%B8%9C%E5%8D%8E%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6.pdf\" target=\"_blank\">Resume</a></p></li>\n  </ul>\n  <div class=\"lab-box\">\n    <span class=\"lab-text\">施工中...</span>\n    <div class=\"lab-logo\">\n      <svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\" xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" width=\"566.33929\" height=\"566.33929\" id=\"svg21252\" version=\"1.1\">\n          <g inkscape:label=\"Layer 1\" inkscape:groupmode=\"layer\" id=\"layer1\">\n              <path id=\"path21770\" d=\"m 725.71429,326.64789 c 0,156.21769 -126.63945,282.85715 -282.85714,282.85715 C 286.63946,609.50504 160,482.86558 160,326.64789 160,170.4302 286.63946,43.790741 442.85715,43.790741 c 156.21769,0 282.85714,126.639459 282.85714,282.857149 z\" transform=\"translate(-159.6875,-43.478241)\" stroke=\"rgba(80,92,114,0.4170006863839937)\" stroke-dasharray=\"41.700068638399365,58.299931361600635\" stroke-dashoffset=\"83.40013727679873\"/>\n              <path d=\"M 52.282135,150.29338 C 75.653767,109.77004 109.3872,75.976033 149.8628,52.531006\" id=\"path21846\" stroke=\"rgba(106,110,126,0.7753611724860062)\" stroke-dasharray=\"77.53611724860062,22.46388275139938\" stroke-dashoffset=\"155.07223449720124\"/>\n              <path d=\"M 149.8628,52.531006 C 189.06906,29.82123 234.60123,16.821508 283.16965,16.821508\" id=\"path21844\" stroke=\"rgba(121,121,133,0.985956723272116)\" stroke-dasharray=\"98.5956723272116,1.4043276727883978\" stroke-dashoffset=\"197.1913446544232\"/>\n              <path d=\"m 283.16965,16.821508 c 48.24731,0 93.49839,12.828397 132.52839,35.26034\" id=\"path21842\" stroke=\"rgba(117,119,131,0.9357770778591998)\" stroke-dasharray=\"93.57770778591998,6.4222922140800165\" stroke-dashoffset=\"187.15541557183997\"/>\n              <path d=\"m 415.69804,52.081848 c 40.83448,23.469047 74.85935,57.450172 98.38145,98.250252\" id=\"path21840\" stroke=\"rgba(97,104,122,0.6517497510877578)\" stroke-dasharray=\"65.17497510877578,34.82502489122422\" stroke-dashoffset=\"130.34995021755157\"/>\n              <path d=\"m 514.07949,150.3321 c 22.54204,39.10012 35.4383,84.46279 35.4383,132.83755\" id=\"path21838\" stroke=\"rgba(71,85,109,0.28629012959137096)\" stroke-dasharray=\"28.629012959137096,71.3709870408629\" stroke-dashoffset=\"57.25802591827419\"/>\n              <path d=\"m 549.51779,283.16965 c 0,48.56842 -12.99972,94.10059 -35.70949,133.30685\" id=\"path21836\" stroke=\"rgba(53,72,101,0.03551198221932084)\" stroke-dasharray=\"3.5511982219320837,96.44880177806792\" stroke-dashoffset=\"7.102396443864167\"/>\n              <path d=\"m 513.8083,416.4765 c -23.34154,40.29693 -56.94088,73.91109 -97.22612,97.27056\" id=\"path21834\" stroke=\"rgba(52,72,101,0.03398844573785237)\" stroke-dasharray=\"3.3988445737852366,96.60115542621476\" stroke-dashoffset=\"6.797689147570473\"/>\n              <path d=\"M 416.58218,513.74706 C 377.35207,536.4947 331.78171,549.5178 283.16965,549.5178\" id=\"path21832\" stroke=\"rgba(70,85,109,0.2825370837402752)\" stroke-dasharray=\"28.253708374027518,71.74629162597248\" stroke-dashoffset=\"56.507416748055036\"/>\n              <path d=\"m 283.16965,549.5178 c -48.4566,0 -93.89092,-12.93993 -133.03596,-35.5528\" id=\"path21830\" stroke=\"rgba(97,104,121,0.6477811638219866)\" stroke-dasharray=\"64.77811638219866,35.22188361780134\" stroke-dashoffset=\"129.55623276439732\"/>\n              <path d=\"M 150.13369,513.965 C 109.69419,490.60436 75.966798,456.92047 52.55346,416.51527\" id=\"path21828\" stroke=\"rgba(117,119,131,0.9337225814552572)\" stroke-dasharray=\"93.37225814552572,6.62774185447428\" stroke-dashoffset=\"186.74451629105144\"/>\n              <path d=\"M 52.55346,416.51527 C 29.829795,377.30026 16.821502,331.75408 16.821502,283.16965\" id=\"path21826\" stroke=\"rgba(121,121,133,0.986918806238075)\" stroke-dasharray=\"98.6918806238075,1.3081193761924936\" stroke-dashoffset=\"197.383761247615\"/>\n              <path d=\"m 16.821502,283.16965 c 0,-48.39073 12.904775,-93.76738 35.460633,-132.87627\" id=\"path21772\" stroke=\"rgba(106,110,126,0.7788235596841993)\" stroke-dasharray=\"77.88235596841993,22.11764403158007\" stroke-dashoffset=\"155.76471193683986\"/>\n              <path id=\"path21774\" d=\"m 600.58815,320.93359 c 0,132.87317 -107.71498,240.58815 -240.58815,240.58815 -132.87317,0 -240.58815,-107.71498 -240.58815,-240.58815 0,-132.87316 107.71498,-240.588146 240.58815,-240.588146 132.87317,0 240.58815,107.714986 240.58815,240.588146 z\" transform=\"translate(-76.830353,-37.763941)\" stroke=\"rgba(80,92,114,0.4211053837633331)\" stroke-dasharray=\"42.11053837633331,57.88946162366669\" stroke-dashoffset=\"84.22107675266662\"/>\n              <path id=\"path21776\" d=\"m 557.6301,320.93359 c 0,109.14809 -88.48201,197.6301 -197.6301,197.6301 -109.14809,0 -197.6301,-88.48201 -197.6301,-197.6301 0,-109.14808 88.48201,-197.63009 197.6301,-197.63009 109.14809,0 197.6301,88.48201 197.6301,197.63009 z\" transform=\"translate(-76.830353,-37.763941)\" stroke=\"rgba(58,75,103,0.10572381528691877)\" stroke-dasharray=\"10.572381528691876,89.42761847130812\" stroke-dashoffset=\"21.144763057383752\"/>\n              <path d=\"m -16.83035,203.16965 0,-203.16965003320314\" id=\"path21778\" inkscape:path-effect=\"#path-effect21780\" inkscape:original-d=\"m -16.83035,203.16965 0,-203.16965003320314\" inkscape:connector-curvature=\"0\" inkscape:transform-center-y=\"-141.57143\" inkscape:tile-cx=\"283.16965\" inkscape:tile-cy=\"283.15625\" inkscape:tile-w=\"0\" inkscape:tile-h=\"283.16965\" inkscape:tile-x0=\"283.16965\" inkscape:tile-y0=\"0\" stroke=\"rgba(50,70,100,0.0019196250034667073)\" stroke-dasharray=\"0.19196250034667073,99.80803749965332\" stroke-dashoffset=\"0.38392500069334146\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" id=\"use21782\" inkscape:transform-center-y=\"-141.57143\" width=\"566.33929\" height=\"566.33929\" transform=\"translate(300,3.320315e-8)\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.8660254,0.5,-0.5,0.8660254,439.32332,46.35092)\" id=\"use21784\" inkscape:transform-center-x=\"-70.785717\" inkscape:transform-center-y=\"-122.60446\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.5,0.8660254,-0.8660254,0.5,536.80534,156.15365)\" id=\"use21786\" inkscape:transform-center-x=\"-122.60446\" inkscape:transform-center-y=\"-70.785713\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0,1,-1,0,566.3259,299.9866)\" id=\"use21788\" inkscape:transform-center-x=\"-141.57143\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.5,0.8660254,-0.8660254,-0.5,519.97499,439.30992)\" id=\"use21790\" inkscape:transform-center-x=\"-122.60446\" inkscape:transform-center-y=\"70.785712\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.8660254,0.5,-0.5,-0.8660254,410.17224,536.79194)\" id=\"use21792\" inkscape:transform-center-x=\"-70.785718\" inkscape:transform-center-y=\"122.60446\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-1,0,0,-1,266.3393,566.31251)\" id=\"use21794\" inkscape:transform-center-y=\"141.57143\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.8660254,-0.5,0.5,-0.8660254,127.01598,519.96159)\" id=\"use21796\" inkscape:transform-center-x=\"70.785717\" inkscape:transform-center-y=\"122.60446\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.5,-0.8660254,0.8660254,-0.5,29.53396,410.15884)\" id=\"use21798\" inkscape:transform-center-x=\"122.60446\" inkscape:transform-center-y=\"70.785713\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0,-1,1,0,0.01339503,266.32591)\" id=\"use21800\" inkscape:transform-center-x=\"141.57143\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.5,-0.8660254,0.8660254,0.5,46.36431,127.00259)\" id=\"use21802\" inkscape:transform-center-x=\"122.60446\" inkscape:transform-center-y=\"-70.785712\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.8660254,-0.5,0.5,0.8660254,156.16704,29.52057)\" id=\"use21804\" inkscape:transform-center-x=\"70.785718\" inkscape:transform-center-y=\"-122.60446\" width=\"566.33929\" height=\"566.33929\"/>\n              <path id=\"path21806\" d=\"m 363.14984,283.16965 a 79.980194,79.980194 0 1 1 -159.96039,0 79.980194,79.980194 0 1 1 159.96039,0 z\" stroke=\"rgba(62,79,105,0.16539645233415728)\" stroke-dasharray=\"16.53964523341573,83.46035476658427\" stroke-dashoffset=\"33.07929046683146\"/>\n              <path id=\"path21808\" d=\"m 368.72494,283.16965 a 85.55529,85.55529 0 1 1 -171.11058,0 85.55529,85.55529 0 1 1 171.11058,0 z\" stroke=\"rgba(87,96,117,0.5084289923709572)\" stroke-dasharray=\"50.842899237095715,49.157100762904285\" stroke-dashoffset=\"101.68579847419143\"/>\n              <path id=\"path21810\" d=\"m 475.8651,283.16965 a 192.69545,192.69545 0 1 1 -385.390903,0 192.69545,192.69545 0 1 1 385.390903,0 z\" stroke=\"rgba(111,114,128,0.8469383474531462)\" stroke-dasharray=\"84.69383474531462,15.306165254685382\" stroke-dashoffset=\"169.38766949062924\"/>\n              <text xml:space=\"preserve\" id=\"text21848\" stroke=\"rgba(255,255,255,0.9992728616629332)\" stroke-dasharray=\"99.92728616629331,0.07271383370668616\" stroke-dashoffset=\"199.85457233258663\">\n                              <textpath xlink:href=\"#path21842\" startoffset=\"50%\" id=\"textPath21875\">\n                                  <tspan id=\"tspan21850\">Enero</tspan>\n                              </textpath>\n                          </text>\n                          <text id=\"text21855\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.8836864433659483)\" stroke-dasharray=\"88.36864433659483,11.631355663405174\" stroke-dashoffset=\"176.73728867318965\">\n                              <textpath xlink:href=\"#path21840\" startoffset=\"50%\" id=\"textPath21878\">\n                                  <tspan id=\"tspan21857\">Febrero</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21859\" stroke=\"rgba(255,255,255,0.5622053378343669)\" stroke-dasharray=\"56.220533783436686,43.779466216563314\" stroke-dashoffset=\"112.44106756687337\">\n                              <textpath xlink:href=\"#path21838\" startoffset=\"50%\" id=\"textPath21881\">\n                                  <tspan id=\"tspan21861\">Marzo</tspan>\n                              </textpath>\n                          </text>\n                          <text id=\"text21863\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.20734346318993535)\" stroke-dasharray=\"20.734346318993534,79.26565368100647\" stroke-dashoffset=\"41.46869263798707\">\n                              <textpath xlink:href=\"#path21836\" startoffset=\"50%\" id=\"textPath21884\">\n                                  <tspan id=\"tspan21865\">Abril</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21867\" stroke=\"rgba(255,255,255,0.009527601391461249)\" stroke-dasharray=\"0.9527601391461249,99.04723986085388\" stroke-dashoffset=\"1.9055202782922498\">\n                              <textpath xlink:href=\"#path21834\" startoffset=\"50%\" id=\"textPath21887\">\n                                  <tspan id=\"tspan21869\">Mayo</tspan>\n                              </textpath>\n                          </text>\n                          <text id=\"text21871\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.07491014770664162)\" stroke-dasharray=\"7.491014770664162,92.50898522933583\" stroke-dashoffset=\"14.982029541328323\">\n                              <textpath xlink:href=\"#path21832\" startoffset=\"50%\" id=\"textPath21890\">\n                                  <tspan id=\"tspan21873\">Junio</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21893\" stroke=\"rgba(255,255,255,0.3684053722200048)\" stroke-dasharray=\"36.84053722200048,63.15946277799952\" stroke-dashoffset=\"73.68107444400096\">\n                              <textpath xlink:href=\"#path21830\" startoffset=\"50%\" id=\"textPath21946\">\n                                  <tspan id=\"tspan21895\">Julio</tspan>\n                              </textpath>\n                          </text>\n                          <text id=\"text21897\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.7325172035929259)\" stroke-dasharray=\"73.25172035929259,26.74827964070741\" stroke-dashoffset=\"146.50344071858518\">\n                              <textpath xlink:href=\"#path21828\" startoffset=\"50%\" id=\"textPath21949\">\n                                  <tspan id=\"tspan21899\">Agosto</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21901\" stroke=\"rgba(255,255,255,0.971855127161219)\" stroke-dasharray=\"97.1855127161219,2.814487283878094\" stroke-dashoffset=\"194.3710254322438\">\n                              <textpath xlink:href=\"#path21826\" startoffset=\"50%\" id=\"textPath21952\">\n                                  <tspan id=\"tspan21903\">Septiembre</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21901-8\" stroke=\"rgba(255,255,255,0.9579850849368847)\" stroke-dasharray=\"95.79850849368847,4.201491506311527\" stroke-dashoffset=\"191.59701698737695\">\n                              <textpath xlink:href=\"#path21772\" startoffset=\"50%\" id=\"textPath21955\">\n                                  <tspan id=\"tspan21903-8\">Octubre</tspan>\n                              </textpath>\n                          </text>\n                          <text id=\"text21938\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.6983500503558808)\" stroke-dasharray=\"69.83500503558808,30.164994964411918\" stroke-dashoffset=\"139.67001007117616\">\n                              <textpath xlink:href=\"#path21846\" startoffset=\"50%\" id=\"textPath21958\">\n                                  <tspan id=\"tspan21940\">Noviembre</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21942\" stroke=\"rgba(255,255,255,0.33227596303503487)\" stroke-dasharray=\"33.22759630350349,66.77240369649651\" stroke-dashoffset=\"66.45519260700698\">\n                              <textpath xlink:href=\"#path21844\" startoffset=\"50%\" id=\"textPath21961\">\n                                  <tspan id=\"tspan21944\">Diciembre</tspan>\n                              </textpath>\n                          </text>\n              <path id=\"path21968\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 283.16965,522.76807 75.671333,402.96886 75.671326,163.37044 283.16964,43.571228 490.66796,163.37043 l 1e-5,239.59842 z\" stroke=\"rgba(54,73,102,0.056206327864426864)\" stroke-dasharray=\"5.620632786442687,94.37936721355732\" stroke-dashoffset=\"11.241265572885373\"/>\n              <path id=\"path21970\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 523.57774,283.16965 -120.20404,208.19952 -240.4081,0 L 42.761551,283.16965 162.9656,74.970129 l 240.4081,0 z\" stroke=\"rgba(51,71,101,0.018286257008491347)\" stroke-dasharray=\"1.8286257008491347,98.17137429915087\" stroke-dashoffset=\"3.6572514016982693\"/>\n              <path id=\"path21972\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 283.16965,464.72768 -157.23387,-90.77901 0,-181.55803 157.23386,-90.77902 157.23387,90.77901 1e-5,181.55803 z\" stroke=\"rgba(67,82,108,0.23886450467471032)\" stroke-dasharray=\"23.886450467471033,76.11354953252896\" stroke-dashoffset=\"47.772900934942065\"/>\n              <path id=\"path21974\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 373.94955,440.40506 -181.55982,-10e-6 -90.7799,-157.23541 90.77992,-157.23541 181.55981,1e-5 90.7799,157.23542 z\" stroke=\"rgba(93,101,120,0.5995738725967763)\" stroke-dasharray=\"59.95738725967763,40.04261274032237\" stroke-dashoffset=\"119.91477451935526\"/>\n              <path id=\"path22324\" d=\"m 333.2827,101.58482 a 50.113056,50.113056 0 1 1 -100.22611,0 50.113056,50.113056 0 1 1 100.22611,0 z\" inkscape:transform-center-y=\"-181.58482\" inkscape:tile-cx=\"283.16965\" inkscape:tile-cy=\"283.16964\" inkscape:tile-w=\"100.22611\" inkscape:tile-h=\"100.22611\" inkscape:tile-x0=\"233.05659\" inkscape:tile-y0=\"51.471767\" stroke=\"rgba(115,117,130,0.9068496837447322)\" stroke-dasharray=\"90.68496837447321,9.315031625526785\" stroke-dashoffset=\"181.36993674894643\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#path22324\" inkscape:transform-center-y=\"-157.18378\" id=\"use22566\" transform=\"matrix(0.8656218,0.50069841,-0.50069841,0.8656218,179.83442,-103.73077)\" width=\"566.33929\" height=\"566.33929\" inkscape:transform-center-x=\"-90.919233\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22566\" inkscape:transform-center-x=\"-157.25313\" inkscape:transform-center-y=\"-90.799232\" id=\"use22568\" transform=\"matrix(0.8664501,0.49926367,-0.49926367,0.8664501,179.19359,-103.55904)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22568\" inkscape:transform-center-x=\"-181.58442\" inkscape:transform-center-y=\"-0.38236251\" id=\"use22570\" transform=\"matrix(0.86705474,0.49821289,-0.49821289,0.86705474,178.72483,-103.4327)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22570\" inkscape:transform-center-x=\"-157.3472\" inkscape:transform-center-y=\"90.636109\" id=\"use22572\" transform=\"matrix(0.86546883,0.50096277,-0.50096277,0.86546883,179.95259,-103.76231)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22572\" inkscape:transform-center-x=\"-90.676807\" inkscape:transform-center-y=\"157.32375\" id=\"use22574\" transform=\"matrix(0.86515982,0.50149625,-0.50149625,0.86515982,180.19116,-103.82587)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22574\" inkscape:transform-center-x=\"-0.60734728\" inkscape:transform-center-y=\"181.5838\" id=\"use22576\" transform=\"matrix(0.86805803,0.49646275,-0.49646275,0.86805803,177.94514,-103.22122)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22576\" inkscape:transform-center-x=\"90.833529\" inkscape:transform-center-y=\"157.23331\" id=\"use22578\" transform=\"matrix(0.86421665,0.50311985,-0.50311985,0.86421665,180.918,-104.01855)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22578\" inkscape:transform-center-x=\"157.46492\" inkscape:transform-center-y=\"90.431432\" id=\"use22580\" transform=\"matrix(0.86500742,0.50175907,-0.50175907,0.86500742,180.30874,-103.85714)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22580\" inkscape:transform-center-x=\"181.58478\" inkscape:transform-center-y=\"-0.11340949\" id=\"use22582\" transform=\"matrix(0.86685888,0.49855358,-0.49855358,0.86685888,178.87677,-103.47372)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22582\" inkscape:transform-center-x=\"157.72273\" inkscape:transform-center-y=\"-89.98104\" id=\"use22584\" transform=\"matrix(0.86889915,0.49498916,-0.49498916,0.86889915,177.28969,-103.04213)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22584\" inkscape:transform-center-x=\"90.899088\" inkscape:transform-center-y=\"-157.19543\" id=\"use22586\" transform=\"matrix(0.86378007,0.50386902,-0.50386902,0.86378007,181.25377,-104.10707)\" width=\"566.33929\" height=\"566.33929\"/>\n              <path id=\"path22588\" inkscape:flatsided=\"false\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 283.16965,203.44434 19.93132,45.20323 49.11282,-5.34058 -29.18149,39.86266 29.18149,39.86265 -49.11281,-5.34058 -19.93133,45.20324 -19.93133,-45.20324 -49.11282,5.34058 29.18149,-39.86265 -29.18149,-39.86266 49.11282,5.34059 z\" stroke=\"rgba(122,122,133,0.9958008972049331)\" stroke-dasharray=\"99.58008972049332,0.4199102795066807\" stroke-dashoffset=\"199.16017944098664\"/>\n              <path id=\"path22590\" inkscape:flatsided=\"false\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 323.09864,352.3287 -39.92899,-29.23006 -39.929,29.23006 5.34947,-49.19455 -45.27847,-19.96451 45.27847,-19.96449 -5.34947,-49.19456 39.929,29.23006 39.929,-29.23005 -5.34948,49.19455 45.27847,19.9645 -45.27847,19.96449 z\" stroke=\"rgba(109,113,127,0.8186943115802743)\" stroke-dasharray=\"81.86943115802742,18.130568841972575\" stroke-dashoffset=\"163.73886231605485\"/>\n              <path id=\"path22592\" d=\"m 322.10973,283.16965 a 38.940086,38.940086 0 1 1 -77.88017,0 38.940086,38.940086 0 1 1 77.88017,0 z\" stroke=\"rgba(84,94,116,0.4705692635084505)\" stroke-dasharray=\"47.05692635084505,52.94307364915495\" stroke-dashoffset=\"94.1138527016901\"/>\n          </g>\n          s\n      </svg>\n    </div>\n  </div>\n</div>\n","site":{"data":{}},"excerpt":"","more":"\n<style media=\"screen\">\n.post-title{display: none;}\n</style>\n<div id=\"posts\" class=\"post posts-expand\">\n  <ul>\n    <li><p><a href=\"http://p7s7f5gdd.bkt.clouddn.com/%E5%BA%94%E8%81%98Web%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88_%E5%BE%90%E6%9D%A8%E6%B3%A2_%E4%B8%9C%E5%8D%8E%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6.pdf\" target=\"_blank\">Resume</a></p></li>\n  </ul>\n  <div class=\"lab-box\">\n    <span class=\"lab-text\">施工中...</span>\n    <div class=\"lab-logo\">\n      <svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\" xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" width=\"566.33929\" height=\"566.33929\" id=\"svg21252\" version=\"1.1\">\n          <g inkscape:label=\"Layer 1\" inkscape:groupmode=\"layer\" id=\"layer1\">\n              <path id=\"path21770\" d=\"m 725.71429,326.64789 c 0,156.21769 -126.63945,282.85715 -282.85714,282.85715 C 286.63946,609.50504 160,482.86558 160,326.64789 160,170.4302 286.63946,43.790741 442.85715,43.790741 c 156.21769,0 282.85714,126.639459 282.85714,282.857149 z\" transform=\"translate(-159.6875,-43.478241)\" stroke=\"rgba(80,92,114,0.4170006863839937)\" stroke-dasharray=\"41.700068638399365,58.299931361600635\" stroke-dashoffset=\"83.40013727679873\"/>\n              <path d=\"M 52.282135,150.29338 C 75.653767,109.77004 109.3872,75.976033 149.8628,52.531006\" id=\"path21846\" stroke=\"rgba(106,110,126,0.7753611724860062)\" stroke-dasharray=\"77.53611724860062,22.46388275139938\" stroke-dashoffset=\"155.07223449720124\"/>\n              <path d=\"M 149.8628,52.531006 C 189.06906,29.82123 234.60123,16.821508 283.16965,16.821508\" id=\"path21844\" stroke=\"rgba(121,121,133,0.985956723272116)\" stroke-dasharray=\"98.5956723272116,1.4043276727883978\" stroke-dashoffset=\"197.1913446544232\"/>\n              <path d=\"m 283.16965,16.821508 c 48.24731,0 93.49839,12.828397 132.52839,35.26034\" id=\"path21842\" stroke=\"rgba(117,119,131,0.9357770778591998)\" stroke-dasharray=\"93.57770778591998,6.4222922140800165\" stroke-dashoffset=\"187.15541557183997\"/>\n              <path d=\"m 415.69804,52.081848 c 40.83448,23.469047 74.85935,57.450172 98.38145,98.250252\" id=\"path21840\" stroke=\"rgba(97,104,122,0.6517497510877578)\" stroke-dasharray=\"65.17497510877578,34.82502489122422\" stroke-dashoffset=\"130.34995021755157\"/>\n              <path d=\"m 514.07949,150.3321 c 22.54204,39.10012 35.4383,84.46279 35.4383,132.83755\" id=\"path21838\" stroke=\"rgba(71,85,109,0.28629012959137096)\" stroke-dasharray=\"28.629012959137096,71.3709870408629\" stroke-dashoffset=\"57.25802591827419\"/>\n              <path d=\"m 549.51779,283.16965 c 0,48.56842 -12.99972,94.10059 -35.70949,133.30685\" id=\"path21836\" stroke=\"rgba(53,72,101,0.03551198221932084)\" stroke-dasharray=\"3.5511982219320837,96.44880177806792\" stroke-dashoffset=\"7.102396443864167\"/>\n              <path d=\"m 513.8083,416.4765 c -23.34154,40.29693 -56.94088,73.91109 -97.22612,97.27056\" id=\"path21834\" stroke=\"rgba(52,72,101,0.03398844573785237)\" stroke-dasharray=\"3.3988445737852366,96.60115542621476\" stroke-dashoffset=\"6.797689147570473\"/>\n              <path d=\"M 416.58218,513.74706 C 377.35207,536.4947 331.78171,549.5178 283.16965,549.5178\" id=\"path21832\" stroke=\"rgba(70,85,109,0.2825370837402752)\" stroke-dasharray=\"28.253708374027518,71.74629162597248\" stroke-dashoffset=\"56.507416748055036\"/>\n              <path d=\"m 283.16965,549.5178 c -48.4566,0 -93.89092,-12.93993 -133.03596,-35.5528\" id=\"path21830\" stroke=\"rgba(97,104,121,0.6477811638219866)\" stroke-dasharray=\"64.77811638219866,35.22188361780134\" stroke-dashoffset=\"129.55623276439732\"/>\n              <path d=\"M 150.13369,513.965 C 109.69419,490.60436 75.966798,456.92047 52.55346,416.51527\" id=\"path21828\" stroke=\"rgba(117,119,131,0.9337225814552572)\" stroke-dasharray=\"93.37225814552572,6.62774185447428\" stroke-dashoffset=\"186.74451629105144\"/>\n              <path d=\"M 52.55346,416.51527 C 29.829795,377.30026 16.821502,331.75408 16.821502,283.16965\" id=\"path21826\" stroke=\"rgba(121,121,133,0.986918806238075)\" stroke-dasharray=\"98.6918806238075,1.3081193761924936\" stroke-dashoffset=\"197.383761247615\"/>\n              <path d=\"m 16.821502,283.16965 c 0,-48.39073 12.904775,-93.76738 35.460633,-132.87627\" id=\"path21772\" stroke=\"rgba(106,110,126,0.7788235596841993)\" stroke-dasharray=\"77.88235596841993,22.11764403158007\" stroke-dashoffset=\"155.76471193683986\"/>\n              <path id=\"path21774\" d=\"m 600.58815,320.93359 c 0,132.87317 -107.71498,240.58815 -240.58815,240.58815 -132.87317,0 -240.58815,-107.71498 -240.58815,-240.58815 0,-132.87316 107.71498,-240.588146 240.58815,-240.588146 132.87317,0 240.58815,107.714986 240.58815,240.588146 z\" transform=\"translate(-76.830353,-37.763941)\" stroke=\"rgba(80,92,114,0.4211053837633331)\" stroke-dasharray=\"42.11053837633331,57.88946162366669\" stroke-dashoffset=\"84.22107675266662\"/>\n              <path id=\"path21776\" d=\"m 557.6301,320.93359 c 0,109.14809 -88.48201,197.6301 -197.6301,197.6301 -109.14809,0 -197.6301,-88.48201 -197.6301,-197.6301 0,-109.14808 88.48201,-197.63009 197.6301,-197.63009 109.14809,0 197.6301,88.48201 197.6301,197.63009 z\" transform=\"translate(-76.830353,-37.763941)\" stroke=\"rgba(58,75,103,0.10572381528691877)\" stroke-dasharray=\"10.572381528691876,89.42761847130812\" stroke-dashoffset=\"21.144763057383752\"/>\n              <path d=\"m -16.83035,203.16965 0,-203.16965003320314\" id=\"path21778\" inkscape:path-effect=\"#path-effect21780\" inkscape:original-d=\"m -16.83035,203.16965 0,-203.16965003320314\" inkscape:connector-curvature=\"0\" inkscape:transform-center-y=\"-141.57143\" inkscape:tile-cx=\"283.16965\" inkscape:tile-cy=\"283.15625\" inkscape:tile-w=\"0\" inkscape:tile-h=\"283.16965\" inkscape:tile-x0=\"283.16965\" inkscape:tile-y0=\"0\" stroke=\"rgba(50,70,100,0.0019196250034667073)\" stroke-dasharray=\"0.19196250034667073,99.80803749965332\" stroke-dashoffset=\"0.38392500069334146\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" id=\"use21782\" inkscape:transform-center-y=\"-141.57143\" width=\"566.33929\" height=\"566.33929\" transform=\"translate(300,3.320315e-8)\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.8660254,0.5,-0.5,0.8660254,439.32332,46.35092)\" id=\"use21784\" inkscape:transform-center-x=\"-70.785717\" inkscape:transform-center-y=\"-122.60446\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.5,0.8660254,-0.8660254,0.5,536.80534,156.15365)\" id=\"use21786\" inkscape:transform-center-x=\"-122.60446\" inkscape:transform-center-y=\"-70.785713\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0,1,-1,0,566.3259,299.9866)\" id=\"use21788\" inkscape:transform-center-x=\"-141.57143\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.5,0.8660254,-0.8660254,-0.5,519.97499,439.30992)\" id=\"use21790\" inkscape:transform-center-x=\"-122.60446\" inkscape:transform-center-y=\"70.785712\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.8660254,0.5,-0.5,-0.8660254,410.17224,536.79194)\" id=\"use21792\" inkscape:transform-center-x=\"-70.785718\" inkscape:transform-center-y=\"122.60446\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-1,0,0,-1,266.3393,566.31251)\" id=\"use21794\" inkscape:transform-center-y=\"141.57143\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.8660254,-0.5,0.5,-0.8660254,127.01598,519.96159)\" id=\"use21796\" inkscape:transform-center-x=\"70.785717\" inkscape:transform-center-y=\"122.60446\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(-0.5,-0.8660254,0.8660254,-0.5,29.53396,410.15884)\" id=\"use21798\" inkscape:transform-center-x=\"122.60446\" inkscape:transform-center-y=\"70.785713\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0,-1,1,0,0.01339503,266.32591)\" id=\"use21800\" inkscape:transform-center-x=\"141.57143\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.5,-0.8660254,0.8660254,0.5,46.36431,127.00259)\" id=\"use21802\" inkscape:transform-center-x=\"122.60446\" inkscape:transform-center-y=\"-70.785712\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" inkscape:tiled-clone-of=\"#path21778\" xlink:href=\"#path21778\" transform=\"matrix(0.8660254,-0.5,0.5,0.8660254,156.16704,29.52057)\" id=\"use21804\" inkscape:transform-center-x=\"70.785718\" inkscape:transform-center-y=\"-122.60446\" width=\"566.33929\" height=\"566.33929\"/>\n              <path id=\"path21806\" d=\"m 363.14984,283.16965 a 79.980194,79.980194 0 1 1 -159.96039,0 79.980194,79.980194 0 1 1 159.96039,0 z\" stroke=\"rgba(62,79,105,0.16539645233415728)\" stroke-dasharray=\"16.53964523341573,83.46035476658427\" stroke-dashoffset=\"33.07929046683146\"/>\n              <path id=\"path21808\" d=\"m 368.72494,283.16965 a 85.55529,85.55529 0 1 1 -171.11058,0 85.55529,85.55529 0 1 1 171.11058,0 z\" stroke=\"rgba(87,96,117,0.5084289923709572)\" stroke-dasharray=\"50.842899237095715,49.157100762904285\" stroke-dashoffset=\"101.68579847419143\"/>\n              <path id=\"path21810\" d=\"m 475.8651,283.16965 a 192.69545,192.69545 0 1 1 -385.390903,0 192.69545,192.69545 0 1 1 385.390903,0 z\" stroke=\"rgba(111,114,128,0.8469383474531462)\" stroke-dasharray=\"84.69383474531462,15.306165254685382\" stroke-dashoffset=\"169.38766949062924\"/>\n              <text xml:space=\"preserve\" id=\"text21848\" stroke=\"rgba(255,255,255,0.9992728616629332)\" stroke-dasharray=\"99.92728616629331,0.07271383370668616\" stroke-dashoffset=\"199.85457233258663\">\n                              <textpath xlink:href=\"#path21842\" startoffset=\"50%\" id=\"textPath21875\">\n                                  <tspan id=\"tspan21850\">Enero</tspan>\n                              </textpath>\n                          </text>\n                          <text id=\"text21855\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.8836864433659483)\" stroke-dasharray=\"88.36864433659483,11.631355663405174\" stroke-dashoffset=\"176.73728867318965\">\n                              <textpath xlink:href=\"#path21840\" startoffset=\"50%\" id=\"textPath21878\">\n                                  <tspan id=\"tspan21857\">Febrero</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21859\" stroke=\"rgba(255,255,255,0.5622053378343669)\" stroke-dasharray=\"56.220533783436686,43.779466216563314\" stroke-dashoffset=\"112.44106756687337\">\n                              <textpath xlink:href=\"#path21838\" startoffset=\"50%\" id=\"textPath21881\">\n                                  <tspan id=\"tspan21861\">Marzo</tspan>\n                              </textpath>\n                          </text>\n                          <text id=\"text21863\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.20734346318993535)\" stroke-dasharray=\"20.734346318993534,79.26565368100647\" stroke-dashoffset=\"41.46869263798707\">\n                              <textpath xlink:href=\"#path21836\" startoffset=\"50%\" id=\"textPath21884\">\n                                  <tspan id=\"tspan21865\">Abril</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21867\" stroke=\"rgba(255,255,255,0.009527601391461249)\" stroke-dasharray=\"0.9527601391461249,99.04723986085388\" stroke-dashoffset=\"1.9055202782922498\">\n                              <textpath xlink:href=\"#path21834\" startoffset=\"50%\" id=\"textPath21887\">\n                                  <tspan id=\"tspan21869\">Mayo</tspan>\n                              </textpath>\n                          </text>\n                          <text id=\"text21871\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.07491014770664162)\" stroke-dasharray=\"7.491014770664162,92.50898522933583\" stroke-dashoffset=\"14.982029541328323\">\n                              <textpath xlink:href=\"#path21832\" startoffset=\"50%\" id=\"textPath21890\">\n                                  <tspan id=\"tspan21873\">Junio</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21893\" stroke=\"rgba(255,255,255,0.3684053722200048)\" stroke-dasharray=\"36.84053722200048,63.15946277799952\" stroke-dashoffset=\"73.68107444400096\">\n                              <textpath xlink:href=\"#path21830\" startoffset=\"50%\" id=\"textPath21946\">\n                                  <tspan id=\"tspan21895\">Julio</tspan>\n                              </textpath>\n                          </text>\n                          <text id=\"text21897\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.7325172035929259)\" stroke-dasharray=\"73.25172035929259,26.74827964070741\" stroke-dashoffset=\"146.50344071858518\">\n                              <textpath xlink:href=\"#path21828\" startoffset=\"50%\" id=\"textPath21949\">\n                                  <tspan id=\"tspan21899\">Agosto</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21901\" stroke=\"rgba(255,255,255,0.971855127161219)\" stroke-dasharray=\"97.1855127161219,2.814487283878094\" stroke-dashoffset=\"194.3710254322438\">\n                              <textpath xlink:href=\"#path21826\" startoffset=\"50%\" id=\"textPath21952\">\n                                  <tspan id=\"tspan21903\">Septiembre</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21901-8\" stroke=\"rgba(255,255,255,0.9579850849368847)\" stroke-dasharray=\"95.79850849368847,4.201491506311527\" stroke-dashoffset=\"191.59701698737695\">\n                              <textpath xlink:href=\"#path21772\" startoffset=\"50%\" id=\"textPath21955\">\n                                  <tspan id=\"tspan21903-8\">Octubre</tspan>\n                              </textpath>\n                          </text>\n                          <text id=\"text21938\" xml:space=\"preserve\" stroke=\"rgba(255,255,255,0.6983500503558808)\" stroke-dasharray=\"69.83500503558808,30.164994964411918\" stroke-dashoffset=\"139.67001007117616\">\n                              <textpath xlink:href=\"#path21846\" startoffset=\"50%\" id=\"textPath21958\">\n                                  <tspan id=\"tspan21940\">Noviembre</tspan>\n                              </textpath>\n                          </text>\n                          <text xml:space=\"preserve\" id=\"text21942\" stroke=\"rgba(255,255,255,0.33227596303503487)\" stroke-dasharray=\"33.22759630350349,66.77240369649651\" stroke-dashoffset=\"66.45519260700698\">\n                              <textpath xlink:href=\"#path21844\" startoffset=\"50%\" id=\"textPath21961\">\n                                  <tspan id=\"tspan21944\">Diciembre</tspan>\n                              </textpath>\n                          </text>\n              <path id=\"path21968\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 283.16965,522.76807 75.671333,402.96886 75.671326,163.37044 283.16964,43.571228 490.66796,163.37043 l 1e-5,239.59842 z\" stroke=\"rgba(54,73,102,0.056206327864426864)\" stroke-dasharray=\"5.620632786442687,94.37936721355732\" stroke-dashoffset=\"11.241265572885373\"/>\n              <path id=\"path21970\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 523.57774,283.16965 -120.20404,208.19952 -240.4081,0 L 42.761551,283.16965 162.9656,74.970129 l 240.4081,0 z\" stroke=\"rgba(51,71,101,0.018286257008491347)\" stroke-dasharray=\"1.8286257008491347,98.17137429915087\" stroke-dashoffset=\"3.6572514016982693\"/>\n              <path id=\"path21972\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 283.16965,464.72768 -157.23387,-90.77901 0,-181.55803 157.23386,-90.77902 157.23387,90.77901 1e-5,181.55803 z\" stroke=\"rgba(67,82,108,0.23886450467471032)\" stroke-dasharray=\"23.886450467471033,76.11354953252896\" stroke-dashoffset=\"47.772900934942065\"/>\n              <path id=\"path21974\" inkscape:flatsided=\"true\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 373.94955,440.40506 -181.55982,-10e-6 -90.7799,-157.23541 90.77992,-157.23541 181.55981,1e-5 90.7799,157.23542 z\" stroke=\"rgba(93,101,120,0.5995738725967763)\" stroke-dasharray=\"59.95738725967763,40.04261274032237\" stroke-dashoffset=\"119.91477451935526\"/>\n              <path id=\"path22324\" d=\"m 333.2827,101.58482 a 50.113056,50.113056 0 1 1 -100.22611,0 50.113056,50.113056 0 1 1 100.22611,0 z\" inkscape:transform-center-y=\"-181.58482\" inkscape:tile-cx=\"283.16965\" inkscape:tile-cy=\"283.16964\" inkscape:tile-w=\"100.22611\" inkscape:tile-h=\"100.22611\" inkscape:tile-x0=\"233.05659\" inkscape:tile-y0=\"51.471767\" stroke=\"rgba(115,117,130,0.9068496837447322)\" stroke-dasharray=\"90.68496837447321,9.315031625526785\" stroke-dashoffset=\"181.36993674894643\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#path22324\" inkscape:transform-center-y=\"-157.18378\" id=\"use22566\" transform=\"matrix(0.8656218,0.50069841,-0.50069841,0.8656218,179.83442,-103.73077)\" width=\"566.33929\" height=\"566.33929\" inkscape:transform-center-x=\"-90.919233\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22566\" inkscape:transform-center-x=\"-157.25313\" inkscape:transform-center-y=\"-90.799232\" id=\"use22568\" transform=\"matrix(0.8664501,0.49926367,-0.49926367,0.8664501,179.19359,-103.55904)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22568\" inkscape:transform-center-x=\"-181.58442\" inkscape:transform-center-y=\"-0.38236251\" id=\"use22570\" transform=\"matrix(0.86705474,0.49821289,-0.49821289,0.86705474,178.72483,-103.4327)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22570\" inkscape:transform-center-x=\"-157.3472\" inkscape:transform-center-y=\"90.636109\" id=\"use22572\" transform=\"matrix(0.86546883,0.50096277,-0.50096277,0.86546883,179.95259,-103.76231)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22572\" inkscape:transform-center-x=\"-90.676807\" inkscape:transform-center-y=\"157.32375\" id=\"use22574\" transform=\"matrix(0.86515982,0.50149625,-0.50149625,0.86515982,180.19116,-103.82587)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22574\" inkscape:transform-center-x=\"-0.60734728\" inkscape:transform-center-y=\"181.5838\" id=\"use22576\" transform=\"matrix(0.86805803,0.49646275,-0.49646275,0.86805803,177.94514,-103.22122)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22576\" inkscape:transform-center-x=\"90.833529\" inkscape:transform-center-y=\"157.23331\" id=\"use22578\" transform=\"matrix(0.86421665,0.50311985,-0.50311985,0.86421665,180.918,-104.01855)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22578\" inkscape:transform-center-x=\"157.46492\" inkscape:transform-center-y=\"90.431432\" id=\"use22580\" transform=\"matrix(0.86500742,0.50175907,-0.50175907,0.86500742,180.30874,-103.85714)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22580\" inkscape:transform-center-x=\"181.58478\" inkscape:transform-center-y=\"-0.11340949\" id=\"use22582\" transform=\"matrix(0.86685888,0.49855358,-0.49855358,0.86685888,178.87677,-103.47372)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22582\" inkscape:transform-center-x=\"157.72273\" inkscape:transform-center-y=\"-89.98104\" id=\"use22584\" transform=\"matrix(0.86889915,0.49498916,-0.49498916,0.86889915,177.28969,-103.04213)\" width=\"566.33929\" height=\"566.33929\"/>\n              <use x=\"0\" y=\"0\" xlink:href=\"#use22584\" inkscape:transform-center-x=\"90.899088\" inkscape:transform-center-y=\"-157.19543\" id=\"use22586\" transform=\"matrix(0.86378007,0.50386902,-0.50386902,0.86378007,181.25377,-104.10707)\" width=\"566.33929\" height=\"566.33929\"/>\n              <path id=\"path22588\" inkscape:flatsided=\"false\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 283.16965,203.44434 19.93132,45.20323 49.11282,-5.34058 -29.18149,39.86266 29.18149,39.86265 -49.11281,-5.34058 -19.93133,45.20324 -19.93133,-45.20324 -49.11282,5.34058 29.18149,-39.86265 -29.18149,-39.86266 49.11282,5.34059 z\" stroke=\"rgba(122,122,133,0.9958008972049331)\" stroke-dasharray=\"99.58008972049332,0.4199102795066807\" stroke-dashoffset=\"199.16017944098664\"/>\n              <path id=\"path22590\" inkscape:flatsided=\"false\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"m 323.09864,352.3287 -39.92899,-29.23006 -39.929,29.23006 5.34947,-49.19455 -45.27847,-19.96451 45.27847,-19.96449 -5.34947,-49.19456 39.929,29.23006 39.929,-29.23005 -5.34948,49.19455 45.27847,19.9645 -45.27847,19.96449 z\" stroke=\"rgba(109,113,127,0.8186943115802743)\" stroke-dasharray=\"81.86943115802742,18.130568841972575\" stroke-dashoffset=\"163.73886231605485\"/>\n              <path id=\"path22592\" d=\"m 322.10973,283.16965 a 38.940086,38.940086 0 1 1 -77.88017,0 38.940086,38.940086 0 1 1 77.88017,0 z\" stroke=\"rgba(84,94,116,0.4705692635084505)\" stroke-dasharray=\"47.05692635084505,52.94307364915495\" stroke-dashoffset=\"94.1138527016901\"/>\n          </g>\n          s\n      </svg>\n    </div>\n  </div>\n</div>\n"}],"Post":[{"title":"git常用命令","date":"2018-06-09T11:12:15.000Z","_content":"\n进入新公司，要求使用git多人协同开发，记录一下git常用命令。\n<!-- more -->\n\n## 配置\n\n###  1.  配置用户信息\n\n``` SH\n# 配置全局用户信息\n$ git config --global user.name “your name”\n$ git config --global user.email “your email”\n\n# 查看当前用户信息\n$ git config user.name\n$ git config user.email\n\n```\n### 2. 本地生成SSH私钥和公钥\n\n``` SH\n# 查看是否存在SSH\n$ cd ~/. ssh\n# 不存在生成，进行下步\n# 生成本地SSH私钥和公钥\n$ ssh-keygen -t rsa -C “your name”\n ```\n\n 这样在用户下的C:\\Users\\Administrator.\\.ssh目录里就可以创建id_rsa和id_rsa.pub这两个文件。\n 把id_ras.pub文件的内容复制到coding.net个人账户的SSH公钥中。\n\n## 操作\n\n### 1.  下载\n``` SH\n# 克隆\n$ git clone 仓库的SSH地址\n```\n### 2.  关联\n``` SH\n# 本地仓库关联远程仓库\n$ git remote add origin 远程仓库地址\n# 测试是否关联成功\n$ git remote -v\n```\n### 3.  推送\n``` SH\n# 从远程仓库更新到本地\n$ git pull\n# 查看文件状态\n$ git status\n# 部分文件添加到暂存区\n$ git  add  [file1] [file2]\n# 当前目录所有文件添加到暂存区\n$ git add .\n# 再次查看文件状态(添加的变为绿色)\n$ git status\n# 提交暂存区到仓库，并添加必要注释\n$ git commit -m ‘必要的注释’\n# 推送到远程仓库\n$ git push\n```\n\n## 分支\n``` SH\n# 列出本地所有分支\n$ git branch\n# 列出远程所有分支\n$ git branch -r\n# 新建一个分支\n$ git branch  [branch-name]\n# 切换分支\n$ git checkout [branch-name]\n# 合并指定分支到当前分支\n$ git merge [branch]\n# 删除分支\n$ git branch -d [branch-name]\n```\n\n\n## 撤销\n``` SH\n# 同时对多个文件执行了git add,但本次只想提交其中一部分文件\n$ git reset HEAD [filename]\n# 文件执行了git add,但想撤销对其的修改\n$ git reset HEAD [filename]\n$ git checkout [filename]\n```\n\n\n## 回滚\n``` SH\n# 撤销指定文件到指定版本\n$ git log [filename]\n$ git checkout [commitID] [filename]\n# 回滚到某次提交\n$ git log\n$ git revert [commitID]\n```\n","source":"_posts/git-command.md","raw":"---\ntitle: git常用命令\ndate: 2018-06-09 19:12:15\ntags:\n    - git\ncategories:\n    - 技能薄\n---\n\n进入新公司，要求使用git多人协同开发，记录一下git常用命令。\n<!-- more -->\n\n## 配置\n\n###  1.  配置用户信息\n\n``` SH\n# 配置全局用户信息\n$ git config --global user.name “your name”\n$ git config --global user.email “your email”\n\n# 查看当前用户信息\n$ git config user.name\n$ git config user.email\n\n```\n### 2. 本地生成SSH私钥和公钥\n\n``` SH\n# 查看是否存在SSH\n$ cd ~/. ssh\n# 不存在生成，进行下步\n# 生成本地SSH私钥和公钥\n$ ssh-keygen -t rsa -C “your name”\n ```\n\n 这样在用户下的C:\\Users\\Administrator.\\.ssh目录里就可以创建id_rsa和id_rsa.pub这两个文件。\n 把id_ras.pub文件的内容复制到coding.net个人账户的SSH公钥中。\n\n## 操作\n\n### 1.  下载\n``` SH\n# 克隆\n$ git clone 仓库的SSH地址\n```\n### 2.  关联\n``` SH\n# 本地仓库关联远程仓库\n$ git remote add origin 远程仓库地址\n# 测试是否关联成功\n$ git remote -v\n```\n### 3.  推送\n``` SH\n# 从远程仓库更新到本地\n$ git pull\n# 查看文件状态\n$ git status\n# 部分文件添加到暂存区\n$ git  add  [file1] [file2]\n# 当前目录所有文件添加到暂存区\n$ git add .\n# 再次查看文件状态(添加的变为绿色)\n$ git status\n# 提交暂存区到仓库，并添加必要注释\n$ git commit -m ‘必要的注释’\n# 推送到远程仓库\n$ git push\n```\n\n## 分支\n``` SH\n# 列出本地所有分支\n$ git branch\n# 列出远程所有分支\n$ git branch -r\n# 新建一个分支\n$ git branch  [branch-name]\n# 切换分支\n$ git checkout [branch-name]\n# 合并指定分支到当前分支\n$ git merge [branch]\n# 删除分支\n$ git branch -d [branch-name]\n```\n\n\n## 撤销\n``` SH\n# 同时对多个文件执行了git add,但本次只想提交其中一部分文件\n$ git reset HEAD [filename]\n# 文件执行了git add,但想撤销对其的修改\n$ git reset HEAD [filename]\n$ git checkout [filename]\n```\n\n\n## 回滚\n``` SH\n# 撤销指定文件到指定版本\n$ git log [filename]\n$ git checkout [commitID] [filename]\n# 回滚到某次提交\n$ git log\n$ git revert [commitID]\n```\n","slug":"git-command","published":1,"updated":"2019-05-15T08:03:03.611Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvozd9xu0001kcvc959tissy","content":"<p>进入新公司，要求使用git多人协同开发，记录一下git常用命令。<br><a id=\"more\"></a></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"1-配置用户信息\"><a href=\"#1-配置用户信息\" class=\"headerlink\" title=\"1.  配置用户信息\"></a>1.  配置用户信息</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置全局用户信息</span></span><br><span class=\"line\">$ git config --global user.name “your name”</span><br><span class=\"line\">$ git config --global user.email “your email”</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前用户信息</span></span><br><span class=\"line\">$ git config user.name</span><br><span class=\"line\">$ git config user.email</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"2-本地生成SSH私钥和公钥\"><a href=\"#2-本地生成SSH私钥和公钥\" class=\"headerlink\" title=\"2. 本地生成SSH私钥和公钥\"></a>2. 本地生成SSH私钥和公钥</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看是否存在SSH</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/. ssh</span><br><span class=\"line\"><span class=\"comment\"># 不存在生成，进行下步</span></span><br><span class=\"line\"><span class=\"comment\"># 生成本地SSH私钥和公钥</span></span><br><span class=\"line\">$ ssh-keygen -t rsa -C “your name”</span><br></pre></td></tr></table></figure></div>\n<p> 这样在用户下的C:\\Users\\Administrator..ssh目录里就可以创建id_rsa和id_rsa.pub这两个文件。<br> 把id_ras.pub文件的内容复制到coding.net个人账户的SSH公钥中。</p>\n<h2 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h2><h3 id=\"1-下载\"><a href=\"#1-下载\" class=\"headerlink\" title=\"1.  下载\"></a>1.  下载</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 克隆</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> 仓库的SSH地址</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"2-关联\"><a href=\"#2-关联\" class=\"headerlink\" title=\"2.  关联\"></a>2.  关联</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 本地仓库关联远程仓库</span></span><br><span class=\"line\">$ git remote add origin 远程仓库地址</span><br><span class=\"line\"><span class=\"comment\"># 测试是否关联成功</span></span><br><span class=\"line\">$ git remote -v</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"3-推送\"><a href=\"#3-推送\" class=\"headerlink\" title=\"3.  推送\"></a>3.  推送</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从远程仓库更新到本地</span></span><br><span class=\"line\">$ git pull</span><br><span class=\"line\"><span class=\"comment\"># 查看文件状态</span></span><br><span class=\"line\">$ git status</span><br><span class=\"line\"><span class=\"comment\"># 部分文件添加到暂存区</span></span><br><span class=\"line\">$ git  add  [file1] [file2]</span><br><span class=\"line\"><span class=\"comment\"># 当前目录所有文件添加到暂存区</span></span><br><span class=\"line\">$ git add .</span><br><span class=\"line\"><span class=\"comment\"># 再次查看文件状态(添加的变为绿色)</span></span><br><span class=\"line\">$ git status</span><br><span class=\"line\"><span class=\"comment\"># 提交暂存区到仓库，并添加必要注释</span></span><br><span class=\"line\">$ git commit -m ‘必要的注释’</span><br><span class=\"line\"><span class=\"comment\"># 推送到远程仓库</span></span><br><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出本地所有分支</span></span><br><span class=\"line\">$ git branch</span><br><span class=\"line\"><span class=\"comment\"># 列出远程所有分支</span></span><br><span class=\"line\">$ git branch -r</span><br><span class=\"line\"><span class=\"comment\"># 新建一个分支</span></span><br><span class=\"line\">$ git branch  [branch-name]</span><br><span class=\"line\"><span class=\"comment\"># 切换分支</span></span><br><span class=\"line\">$ git checkout [branch-name]</span><br><span class=\"line\"><span class=\"comment\"># 合并指定分支到当前分支</span></span><br><span class=\"line\">$ git merge [branch]</span><br><span class=\"line\"><span class=\"comment\"># 删除分支</span></span><br><span class=\"line\">$ git branch -d [branch-name]</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"撤销\"><a href=\"#撤销\" class=\"headerlink\" title=\"撤销\"></a>撤销</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 同时对多个文件执行了git add,但本次只想提交其中一部分文件</span></span><br><span class=\"line\">$ git reset HEAD [filename]</span><br><span class=\"line\"><span class=\"comment\"># 文件执行了git add,但想撤销对其的修改</span></span><br><span class=\"line\">$ git reset HEAD [filename]</span><br><span class=\"line\">$ git checkout [filename]</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"回滚\"><a href=\"#回滚\" class=\"headerlink\" title=\"回滚\"></a>回滚</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 撤销指定文件到指定版本</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> [filename]</span><br><span class=\"line\">$ git checkout [commitID] [filename]</span><br><span class=\"line\"><span class=\"comment\"># 回滚到某次提交</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span></span><br><span class=\"line\">$ git revert [commitID]</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"<p>进入新公司，要求使用git多人协同开发，记录一下git常用命令。<br>","more":"</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"1-配置用户信息\"><a href=\"#1-配置用户信息\" class=\"headerlink\" title=\"1.  配置用户信息\"></a>1.  配置用户信息</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置全局用户信息</span></span><br><span class=\"line\">$ git config --global user.name “your name”</span><br><span class=\"line\">$ git config --global user.email “your email”</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前用户信息</span></span><br><span class=\"line\">$ git config user.name</span><br><span class=\"line\">$ git config user.email</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-本地生成SSH私钥和公钥\"><a href=\"#2-本地生成SSH私钥和公钥\" class=\"headerlink\" title=\"2. 本地生成SSH私钥和公钥\"></a>2. 本地生成SSH私钥和公钥</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看是否存在SSH</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/. ssh</span><br><span class=\"line\"><span class=\"comment\"># 不存在生成，进行下步</span></span><br><span class=\"line\"><span class=\"comment\"># 生成本地SSH私钥和公钥</span></span><br><span class=\"line\">$ ssh-keygen -t rsa -C “your name”</span><br></pre></td></tr></table></figure>\n<p> 这样在用户下的C:\\Users\\Administrator..ssh目录里就可以创建id_rsa和id_rsa.pub这两个文件。<br> 把id_ras.pub文件的内容复制到coding.net个人账户的SSH公钥中。</p>\n<h2 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h2><h3 id=\"1-下载\"><a href=\"#1-下载\" class=\"headerlink\" title=\"1.  下载\"></a>1.  下载</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 克隆</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> 仓库的SSH地址</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-关联\"><a href=\"#2-关联\" class=\"headerlink\" title=\"2.  关联\"></a>2.  关联</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 本地仓库关联远程仓库</span></span><br><span class=\"line\">$ git remote add origin 远程仓库地址</span><br><span class=\"line\"><span class=\"comment\"># 测试是否关联成功</span></span><br><span class=\"line\">$ git remote -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-推送\"><a href=\"#3-推送\" class=\"headerlink\" title=\"3.  推送\"></a>3.  推送</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从远程仓库更新到本地</span></span><br><span class=\"line\">$ git pull</span><br><span class=\"line\"><span class=\"comment\"># 查看文件状态</span></span><br><span class=\"line\">$ git status</span><br><span class=\"line\"><span class=\"comment\"># 部分文件添加到暂存区</span></span><br><span class=\"line\">$ git  add  [file1] [file2]</span><br><span class=\"line\"><span class=\"comment\"># 当前目录所有文件添加到暂存区</span></span><br><span class=\"line\">$ git add .</span><br><span class=\"line\"><span class=\"comment\"># 再次查看文件状态(添加的变为绿色)</span></span><br><span class=\"line\">$ git status</span><br><span class=\"line\"><span class=\"comment\"># 提交暂存区到仓库，并添加必要注释</span></span><br><span class=\"line\">$ git commit -m ‘必要的注释’</span><br><span class=\"line\"><span class=\"comment\"># 推送到远程仓库</span></span><br><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure>\n<h2 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出本地所有分支</span></span><br><span class=\"line\">$ git branch</span><br><span class=\"line\"><span class=\"comment\"># 列出远程所有分支</span></span><br><span class=\"line\">$ git branch -r</span><br><span class=\"line\"><span class=\"comment\"># 新建一个分支</span></span><br><span class=\"line\">$ git branch  [branch-name]</span><br><span class=\"line\"><span class=\"comment\"># 切换分支</span></span><br><span class=\"line\">$ git checkout [branch-name]</span><br><span class=\"line\"><span class=\"comment\"># 合并指定分支到当前分支</span></span><br><span class=\"line\">$ git merge [branch]</span><br><span class=\"line\"><span class=\"comment\"># 删除分支</span></span><br><span class=\"line\">$ git branch -d [branch-name]</span><br></pre></td></tr></table></figure>\n<h2 id=\"撤销\"><a href=\"#撤销\" class=\"headerlink\" title=\"撤销\"></a>撤销</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 同时对多个文件执行了git add,但本次只想提交其中一部分文件</span></span><br><span class=\"line\">$ git reset HEAD [filename]</span><br><span class=\"line\"><span class=\"comment\"># 文件执行了git add,但想撤销对其的修改</span></span><br><span class=\"line\">$ git reset HEAD [filename]</span><br><span class=\"line\">$ git checkout [filename]</span><br></pre></td></tr></table></figure>\n<h2 id=\"回滚\"><a href=\"#回滚\" class=\"headerlink\" title=\"回滚\"></a>回滚</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 撤销指定文件到指定版本</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span> [filename]</span><br><span class=\"line\">$ git checkout [commitID] [filename]</span><br><span class=\"line\"><span class=\"comment\"># 回滚到某次提交</span></span><br><span class=\"line\">$ git <span class=\"built_in\">log</span></span><br><span class=\"line\">$ git revert [commitID]</span><br></pre></td></tr></table></figure>"},{"title":"React.js 小书","date":"2018-12-20T02:20:48.000Z","_content":"\n  最近，在入坑react，从[React.js 小书](http://huziketang.mangojuice.top/books/react/)开始入门。\n\n<!-- more -->\n\n## 预览\n\n[预览](http://jiushi38.coding.me/react-book/)\n[源码](https://github.com/shamopoo/Notes/tree/master/react-book)\n\n## JSX\n\n<samp>\n```  JAVASCRIPT\nconst element = <h1>Hello, world!</h1>;\n``` \n</samp>\n\n这种写法是不是很奇怪？包含着HTML和JavaScript。\n\n它被称为JSX，一种 JavaScript 的语法扩展，是React 的核心组成部分。\n\n在React 中，JSX会被编译成普通的 JavaScript 对象。举个栗子：\n\n<samp>\n```  HTML\n<ul id='list'>\n  <li class='item'>Item 1</li>\n  <li class='item'>Item 2</li>\n  <li class='item'>Item 3</li>\n</ul>\n``` \n</samp>\n\n每个 DOM 元素的结构都可以用 JavaScript 的对象来表示。你会发现一个 DOM 元素包含的信息其实只有三个：标签名，属性，子元素。\n\n所以其实上面这个 HTML 所有的信息我们都可以用合法的 JavaScript 对象来表示：\n\n<samp>\n```  JAVASCRIPT\n{\n  tag: 'ul',\n  attrs: { className: null, id: 'list'},\n  children: [\n    {\n      tag: 'li',\n      arrts: { className: 'item' }\n    },\n     {\n      tag: 'li',\n      arrts: { className: 'item' }\n    },\n     {\n      tag: 'li',\n      arrts: { className: 'item' }\n    }\n  ]\n}\n``` \n</samp>\n\nReact利用render将JavaScript对象转化成DOM。主要代码如下：\n\n<samp>\n```  JAVASCRIPT\nElement.prototype.render = function () {\n    var el = document.createElement(this.tagName) // 根据tagName构建\n  var props = this.props\n\n  for (var propName in props) { // 设置节点的DOM属性\n    var propValue = props[propName]\n    el.setAttribute(propName, propValue)\n  }\n\n  var children = this.children || []\n\n  children.forEach(function (child) {\n    var childEl = (child instanceof Element)\n      ? child.render() // 如果子节点也是虚拟DOM，递归构建DOM节点\n      : document.createTextNode(child) // 如果字符串，只构建文本节点\n    el.appendChild(childEl)\n  })\n\n  return el\n}\n``` \n</samp>\n\n\n<samp>\n```  JAVASCRIPT\n// JSX编译过程 => [过程] =>\nJSX => Babel 编译 React.js =>  \nJavaScript对象结构 => ReactDom.render => \nDOM元素 => \n插入页面\n``` \n</samp>\n\n## setState\n\nReact.js 的 state 就是用来存储这种可变化的状态的。如果要想改变某个状态呢？那就\n需要setState。\n\nsetState 方法由父类 Component 所提供。setState 接受<code>对象参数 </code>和  <code>函数参数</code>。<code>当我们调用这个函数的时候，React.js 会更新组件的状态 state ，并且重新调用 render 方法，然后再把 render 方法所渲染的最新的内容显示到页面上。</code>\n\n\n\n{% pullquote warning %}\n注意：\n当你调用 setState 的时候，React.js 并不会马上修改 state。\n{% endpullquote  %}\n\n调用 setState 的时候，是把这个对象放到一个更新队列里面，稍后才会从队列当中把新的状态提取出来合并到 state 当中，然后再触发组件更新。举个栗子：\n\n\n<samp>\n```  JAVASCRIPT\nclass Index extends Component {\n    constructor () {\n        super()\n        this.state = { isLiked: false }\n    }\n    handleClickOnLikeButton () {\n        console.log(this.state.isLiked) // false\n        this.setState({\n            isLiked: !this.state.isLiked\n        })\n        console.log(this.state.isLiked) // false\n    }\n    render() {\n        return(\n            <button onClick={this.handleClickOnLikeButton.bind(this)>\n                  {this.state.isLiked ? '取消' : '点赞'} \n            </botton>\n        )\n    }\n}\n``` \n</samp>\n\n{% pullquote tip %}\nTip:\n在使用 React.js 的时候，并不需要担心多次进行 setState 会带来性能问题。//  ✅ \n{% endpullquote  %}\n\n\n## 生命周期\n\n React.js 内部对待每个组件都有一个过程，也就是初始化组件 -> 挂载到页面上的过程。\n\n<samp>\n```  JAVASCRIPT\n-> constructor()\n-> componentWillMount()\n-> render()\n// 然后构造 DOM 元素插入页面\n-> componentDidMount()\n``` \n</samp>\n\n那么挂载的时候，执行顺序是怎样的呢？请看下面这个栗子：\n\n\n<samp>\n```  JAVASCRIPT\nclass Header extends Component {\n  constructor () {\n    super()\n    console.log('construct')\n  }\n\n  componentWillMount () {\n    console.log('component will mount')\n  }\n\n  componentDidMount () {\n    console.log('component did mount')\n  }\n\n  render () {\n    console.log('render')\n    return (\n      <div>\n        <h1 className='title'>React 小书</h1>\n      </div>\n    )\n  }\n}\n``` \n</samp>\n\n在控制台可以看到依次输出：\n<samp>\n```  JAVASCRIPT\nconstruct\ncomponent will mount\nrender\ncomponent did mount\n``` \n</samp>\n\n{% pullquote tip %}\n\n### 生命周期\ncomponentWillMount：组件挂载开始之前，也就是在组件调用 render 方法之前调用。\ncomponentDidMount：组件挂载完成以后，也就是 DOM 元素已经插入页面后调用。\ncomponentWillUnmount：组件对应的 DOM 元素从页面中删除之前调用。\ncomponentWillUnmount：组件对应的 DOM 元素从页面中删除之前调用。\ncomponentWillUnmount: 组件销毁调用。\n\n### 更新阶段\nshouldComponentUpdate(nextProps, nextState)：你可以通过这个方法控制组件是否重新渲染。如果返回 false 组件就不会重新渲染。这个生命周期在 React.js 性能优化上非常有用。\ncomponentWillReceiveProps(nextProps)：组件从父组件接收到新的 props 之前调用。\ncomponentWillUpdate()：组件开始重新渲染之前调用。\ncomponentDidUpdate()：组件重新渲染并且把更改变更到真实的 DOM 以后调用。\n{% endpullquote  %}\n\n\n##  Redux\n\nTo be continued...\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/React-js-book.md","raw":"---\ntitle: React.js 小书\ndate: 2018-12-20 10:20:48\ntags:\n    - React\ncategories:\n  - 技能簿\n---\n\n  最近，在入坑react，从[React.js 小书](http://huziketang.mangojuice.top/books/react/)开始入门。\n\n<!-- more -->\n\n## 预览\n\n[预览](http://jiushi38.coding.me/react-book/)\n[源码](https://github.com/shamopoo/Notes/tree/master/react-book)\n\n## JSX\n\n<samp>\n```  JAVASCRIPT\nconst element = <h1>Hello, world!</h1>;\n``` \n</samp>\n\n这种写法是不是很奇怪？包含着HTML和JavaScript。\n\n它被称为JSX，一种 JavaScript 的语法扩展，是React 的核心组成部分。\n\n在React 中，JSX会被编译成普通的 JavaScript 对象。举个栗子：\n\n<samp>\n```  HTML\n<ul id='list'>\n  <li class='item'>Item 1</li>\n  <li class='item'>Item 2</li>\n  <li class='item'>Item 3</li>\n</ul>\n``` \n</samp>\n\n每个 DOM 元素的结构都可以用 JavaScript 的对象来表示。你会发现一个 DOM 元素包含的信息其实只有三个：标签名，属性，子元素。\n\n所以其实上面这个 HTML 所有的信息我们都可以用合法的 JavaScript 对象来表示：\n\n<samp>\n```  JAVASCRIPT\n{\n  tag: 'ul',\n  attrs: { className: null, id: 'list'},\n  children: [\n    {\n      tag: 'li',\n      arrts: { className: 'item' }\n    },\n     {\n      tag: 'li',\n      arrts: { className: 'item' }\n    },\n     {\n      tag: 'li',\n      arrts: { className: 'item' }\n    }\n  ]\n}\n``` \n</samp>\n\nReact利用render将JavaScript对象转化成DOM。主要代码如下：\n\n<samp>\n```  JAVASCRIPT\nElement.prototype.render = function () {\n    var el = document.createElement(this.tagName) // 根据tagName构建\n  var props = this.props\n\n  for (var propName in props) { // 设置节点的DOM属性\n    var propValue = props[propName]\n    el.setAttribute(propName, propValue)\n  }\n\n  var children = this.children || []\n\n  children.forEach(function (child) {\n    var childEl = (child instanceof Element)\n      ? child.render() // 如果子节点也是虚拟DOM，递归构建DOM节点\n      : document.createTextNode(child) // 如果字符串，只构建文本节点\n    el.appendChild(childEl)\n  })\n\n  return el\n}\n``` \n</samp>\n\n\n<samp>\n```  JAVASCRIPT\n// JSX编译过程 => [过程] =>\nJSX => Babel 编译 React.js =>  \nJavaScript对象结构 => ReactDom.render => \nDOM元素 => \n插入页面\n``` \n</samp>\n\n## setState\n\nReact.js 的 state 就是用来存储这种可变化的状态的。如果要想改变某个状态呢？那就\n需要setState。\n\nsetState 方法由父类 Component 所提供。setState 接受<code>对象参数 </code>和  <code>函数参数</code>。<code>当我们调用这个函数的时候，React.js 会更新组件的状态 state ，并且重新调用 render 方法，然后再把 render 方法所渲染的最新的内容显示到页面上。</code>\n\n\n\n{% pullquote warning %}\n注意：\n当你调用 setState 的时候，React.js 并不会马上修改 state。\n{% endpullquote  %}\n\n调用 setState 的时候，是把这个对象放到一个更新队列里面，稍后才会从队列当中把新的状态提取出来合并到 state 当中，然后再触发组件更新。举个栗子：\n\n\n<samp>\n```  JAVASCRIPT\nclass Index extends Component {\n    constructor () {\n        super()\n        this.state = { isLiked: false }\n    }\n    handleClickOnLikeButton () {\n        console.log(this.state.isLiked) // false\n        this.setState({\n            isLiked: !this.state.isLiked\n        })\n        console.log(this.state.isLiked) // false\n    }\n    render() {\n        return(\n            <button onClick={this.handleClickOnLikeButton.bind(this)>\n                  {this.state.isLiked ? '取消' : '点赞'} \n            </botton>\n        )\n    }\n}\n``` \n</samp>\n\n{% pullquote tip %}\nTip:\n在使用 React.js 的时候，并不需要担心多次进行 setState 会带来性能问题。//  ✅ \n{% endpullquote  %}\n\n\n## 生命周期\n\n React.js 内部对待每个组件都有一个过程，也就是初始化组件 -> 挂载到页面上的过程。\n\n<samp>\n```  JAVASCRIPT\n-> constructor()\n-> componentWillMount()\n-> render()\n// 然后构造 DOM 元素插入页面\n-> componentDidMount()\n``` \n</samp>\n\n那么挂载的时候，执行顺序是怎样的呢？请看下面这个栗子：\n\n\n<samp>\n```  JAVASCRIPT\nclass Header extends Component {\n  constructor () {\n    super()\n    console.log('construct')\n  }\n\n  componentWillMount () {\n    console.log('component will mount')\n  }\n\n  componentDidMount () {\n    console.log('component did mount')\n  }\n\n  render () {\n    console.log('render')\n    return (\n      <div>\n        <h1 className='title'>React 小书</h1>\n      </div>\n    )\n  }\n}\n``` \n</samp>\n\n在控制台可以看到依次输出：\n<samp>\n```  JAVASCRIPT\nconstruct\ncomponent will mount\nrender\ncomponent did mount\n``` \n</samp>\n\n{% pullquote tip %}\n\n### 生命周期\ncomponentWillMount：组件挂载开始之前，也就是在组件调用 render 方法之前调用。\ncomponentDidMount：组件挂载完成以后，也就是 DOM 元素已经插入页面后调用。\ncomponentWillUnmount：组件对应的 DOM 元素从页面中删除之前调用。\ncomponentWillUnmount：组件对应的 DOM 元素从页面中删除之前调用。\ncomponentWillUnmount: 组件销毁调用。\n\n### 更新阶段\nshouldComponentUpdate(nextProps, nextState)：你可以通过这个方法控制组件是否重新渲染。如果返回 false 组件就不会重新渲染。这个生命周期在 React.js 性能优化上非常有用。\ncomponentWillReceiveProps(nextProps)：组件从父组件接收到新的 props 之前调用。\ncomponentWillUpdate()：组件开始重新渲染之前调用。\ncomponentDidUpdate()：组件重新渲染并且把更改变更到真实的 DOM 以后调用。\n{% endpullquote  %}\n\n\n##  Redux\n\nTo be continued...\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"React-js-book","published":1,"updated":"2019-05-15T08:03:03.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvozd9xz0003kcvc1cu1llcr","content":"<p>  最近，在入坑react，从<a href=\"http://huziketang.mangojuice.top/books/react/\" target=\"_blank\" rel=\"noopener\">React.js 小书</a>开始入门。</p>\n<a id=\"more\"></a>\n<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><p><a href=\"http://jiushi38.coding.me/react-book/\" target=\"_blank\" rel=\"noopener\">预览</a><br><a href=\"https://github.com/shamopoo/Notes/tree/master/react-book\" target=\"_blank\" rel=\"noopener\">源码</a></p>\n<h2 id=\"JSX\"><a href=\"#JSX\" class=\"headerlink\" title=\"JSX\"></a>JSX</h2><p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> element = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;\n</code></pre>\n<p></p>\n<p>这种写法是不是很奇怪？包含着HTML和JavaScript。</p>\n<p>它被称为JSX，一种 JavaScript 的语法扩展，是React 的核心组成部分。</p>\n<p>在React 中，JSX会被编译成普通的 JavaScript 对象。举个栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"HTML\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">'list'</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">'item'</span>&gt;</span>Item 1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">'item'</span>&gt;</span>Item 2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">'item'</span>&gt;</span>Item 3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span>\n</code></pre>\n<p></p>\n<p>每个 DOM 元素的结构都可以用 JavaScript 的对象来表示。你会发现一个 DOM 元素包含的信息其实只有三个：标签名，属性，子元素。</p>\n<p>所以其实上面这个 HTML 所有的信息我们都可以用合法的 JavaScript 对象来表示：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">{\n  tag: <span class=\"string\">'ul'</span>,\n  attrs: { <span class=\"attr\">className</span>: <span class=\"literal\">null</span>, <span class=\"attr\">id</span>: <span class=\"string\">'list'</span>},\n  children: [\n    {\n      tag: <span class=\"string\">'li'</span>,\n      arrts: { <span class=\"attr\">className</span>: <span class=\"string\">'item'</span> }\n    },\n     {\n      tag: <span class=\"string\">'li'</span>,\n      arrts: { <span class=\"attr\">className</span>: <span class=\"string\">'item'</span> }\n    },\n     {\n      tag: <span class=\"string\">'li'</span>,\n      arrts: { <span class=\"attr\">className</span>: <span class=\"string\">'item'</span> }\n    }\n  ]\n}\n</code></pre>\n<p></p>\n<p>React利用render将JavaScript对象转化成DOM。主要代码如下：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">Element.prototype.render = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{\n    <span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.createElement(<span class=\"keyword\">this</span>.tagName) <span class=\"comment\">// 根据tagName构建</span>\n  <span class=\"keyword\">var</span> props = <span class=\"keyword\">this</span>.props\n\n  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> propName <span class=\"keyword\">in</span> props) { <span class=\"comment\">// 设置节点的DOM属性</span>\n    <span class=\"keyword\">var</span> propValue = props[propName]\n    el.setAttribute(propName, propValue)\n  }\n\n  <span class=\"keyword\">var</span> children = <span class=\"keyword\">this</span>.children || []\n\n  children.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">child</span>) </span>{\n    <span class=\"keyword\">var</span> childEl = (child <span class=\"keyword\">instanceof</span> Element)\n      ? child.render() <span class=\"comment\">// 如果子节点也是虚拟DOM，递归构建DOM节点</span>\n      : <span class=\"built_in\">document</span>.createTextNode(child) <span class=\"comment\">// 如果字符串，只构建文本节点</span>\n    el.appendChild(childEl)\n  })\n\n  <span class=\"keyword\">return</span> el\n}\n</code></pre>\n<p></p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"comment\">// JSX编译过程 =&gt; [过程] =&gt;</span>\nJSX =&gt; Babel 编译 React.js =&gt;  \nJavaScript对象结构 =&gt; ReactDom.render =&gt; \nDOM元素 =&gt; \n插入页面\n</code></pre>\n<p></p>\n<h2 id=\"setState\"><a href=\"#setState\" class=\"headerlink\" title=\"setState\"></a>setState</h2><p>React.js 的 state 就是用来存储这种可变化的状态的。如果要想改变某个状态呢？那就<br>需要setState。</p>\n<p>setState 方法由父类 Component 所提供。setState 接受<code>对象参数 </code>和  <code>函数参数</code>。<code>当我们调用这个函数的时候，React.js 会更新组件的状态 state ，并且重新调用 render 方法，然后再把 render 方法所渲染的最新的内容显示到页面上。</code></p>\n<blockquote class=\"pullquote warning\"><p>注意：<br>当你调用 setState 的时候，React.js 并不会马上修改 state。</p>\n</blockquote>\n<p>调用 setState 的时候，是把这个对象放到一个更新队列里面，稍后才会从队列当中把新的状态提取出来合并到 state 当中，然后再触发组件更新。举个栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Index</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>{\n    <span class=\"keyword\">constructor</span> () {\n        <span class=\"keyword\">super</span>()\n        <span class=\"keyword\">this</span>.state = { <span class=\"attr\">isLiked</span>: <span class=\"literal\">false</span> }\n    }\n    handleClickOnLikeButton () {\n        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.state.isLiked) <span class=\"comment\">// false</span>\n        <span class=\"keyword\">this</span>.setState({\n            isLiked: !<span class=\"keyword\">this</span>.state.isLiked\n        })\n        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.state.isLiked) <span class=\"comment\">// false</span>\n    }\n    render() {\n        <span class=\"keyword\">return</span>(\n            &lt;button onClick={<span class=\"keyword\">this</span>.handleClickOnLikeButton.bind(<span class=\"keyword\">this</span>)&gt;\n                  {<span class=\"keyword\">this</span>.state.isLiked ? <span class=\"string\">'取消'</span> : <span class=\"string\">'点赞'</span>} \n            &lt;<span class=\"regexp\">/botton&gt;</span>\n<span class=\"regexp\">        )</span>\n<span class=\"regexp\">    }</span>\n<span class=\"regexp\">}</span>\n</code></pre>\n<p></p>\n<blockquote class=\"pullquote tip\"><p>Tip:<br>在使用 React.js 的时候，并不需要担心多次进行 setState 会带来性能问题。//  ✅ </p>\n</blockquote>\n<h2 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h2><p> React.js 内部对待每个组件都有一个过程，也就是初始化组件 -&gt; 挂载到页面上的过程。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">-&gt; <span class=\"keyword\">constructor</span>()\n-&gt; componentWillMount()\n-&gt; render()\n// 然后构造 DOM 元素插入页面\n-&gt; componentDidMount()\n</code></pre>\n<p></p>\n<p>那么挂载的时候，执行顺序是怎样的呢？请看下面这个栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Header</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>{\n  <span class=\"keyword\">constructor</span> () {\n    <span class=\"keyword\">super</span>()\n    <span class=\"built_in\">console</span>.log(<span class=\"string\">'construct'</span>)\n  }\n\n  componentWillMount () {\n    <span class=\"built_in\">console</span>.log(<span class=\"string\">'component will mount'</span>)\n  }\n\n  componentDidMount () {\n    <span class=\"built_in\">console</span>.log(<span class=\"string\">'component did mount'</span>)\n  }\n\n  render () {\n    <span class=\"built_in\">console</span>.log(<span class=\"string\">'render'</span>)\n    <span class=\"keyword\">return</span> (\n      &lt;div&gt;\n        &lt;h1 className=<span class=\"string\">'title'</span>&gt;React 小书&lt;<span class=\"regexp\">/h1&gt;</span>\n<span class=\"regexp\">      &lt;/</span>div&gt;\n    )\n  }\n}\n</code></pre>\n<p></p>\n<p>在控制台可以看到依次输出：<br><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">construct\ncomponent will mount\nrender\ncomponent did mount\n</code></pre>\n<p></p>\n<blockquote class=\"pullquote tip\"><h3 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h3><p>componentWillMount：组件挂载开始之前，也就是在组件调用 render 方法之前调用。<br>componentDidMount：组件挂载完成以后，也就是 DOM 元素已经插入页面后调用。<br>componentWillUnmount：组件对应的 DOM 元素从页面中删除之前调用。<br>componentWillUnmount：组件对应的 DOM 元素从页面中删除之前调用。<br>componentWillUnmount: 组件销毁调用。</p>\n<h3 id=\"更新阶段\"><a href=\"#更新阶段\" class=\"headerlink\" title=\"更新阶段\"></a>更新阶段</h3><p>shouldComponentUpdate(nextProps, nextState)：你可以通过这个方法控制组件是否重新渲染。如果返回 false 组件就不会重新渲染。这个生命周期在 React.js 性能优化上非常有用。<br>componentWillReceiveProps(nextProps)：组件从父组件接收到新的 props 之前调用。<br>componentWillUpdate()：组件开始重新渲染之前调用。<br>componentDidUpdate()：组件重新渲染并且把更改变更到真实的 DOM 以后调用。</p>\n</blockquote>\n<h2 id=\"Redux\"><a href=\"#Redux\" class=\"headerlink\" title=\"Redux\"></a>Redux</h2><p>To be continued…</p>\n","site":{"data":{}},"excerpt":"<p>  最近，在入坑react，从<a href=\"http://huziketang.mangojuice.top/books/react/\" target=\"_blank\" rel=\"noopener\">React.js 小书</a>开始入门。</p>","more":"<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><p><a href=\"http://jiushi38.coding.me/react-book/\" target=\"_blank\" rel=\"noopener\">预览</a><br><a href=\"https://github.com/shamopoo/Notes/tree/master/react-book\" target=\"_blank\" rel=\"noopener\">源码</a></p>\n<h2 id=\"JSX\"><a href=\"#JSX\" class=\"headerlink\" title=\"JSX\"></a>JSX</h2><p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> element = <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;\n</code></pre>\n<p></p>\n<p>这种写法是不是很奇怪？包含着HTML和JavaScript。</p>\n<p>它被称为JSX，一种 JavaScript 的语法扩展，是React 的核心组成部分。</p>\n<p>在React 中，JSX会被编译成普通的 JavaScript 对象。举个栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"HTML\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">'list'</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">'item'</span>&gt;</span>Item 1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">'item'</span>&gt;</span>Item 2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">'item'</span>&gt;</span>Item 3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span>\n</code></pre>\n<p></p>\n<p>每个 DOM 元素的结构都可以用 JavaScript 的对象来表示。你会发现一个 DOM 元素包含的信息其实只有三个：标签名，属性，子元素。</p>\n<p>所以其实上面这个 HTML 所有的信息我们都可以用合法的 JavaScript 对象来表示：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">{\n  tag: <span class=\"string\">'ul'</span>,\n  attrs: { <span class=\"attr\">className</span>: <span class=\"literal\">null</span>, <span class=\"attr\">id</span>: <span class=\"string\">'list'</span>},\n  children: [\n    {\n      tag: <span class=\"string\">'li'</span>,\n      arrts: { <span class=\"attr\">className</span>: <span class=\"string\">'item'</span> }\n    },\n     {\n      tag: <span class=\"string\">'li'</span>,\n      arrts: { <span class=\"attr\">className</span>: <span class=\"string\">'item'</span> }\n    },\n     {\n      tag: <span class=\"string\">'li'</span>,\n      arrts: { <span class=\"attr\">className</span>: <span class=\"string\">'item'</span> }\n    }\n  ]\n}\n</code></pre>\n<p></p>\n<p>React利用render将JavaScript对象转化成DOM。主要代码如下：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">Element.prototype.render = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{\n    <span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.createElement(<span class=\"keyword\">this</span>.tagName) <span class=\"comment\">// 根据tagName构建</span>\n  <span class=\"keyword\">var</span> props = <span class=\"keyword\">this</span>.props\n\n  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> propName <span class=\"keyword\">in</span> props) { <span class=\"comment\">// 设置节点的DOM属性</span>\n    <span class=\"keyword\">var</span> propValue = props[propName]\n    el.setAttribute(propName, propValue)\n  }\n\n  <span class=\"keyword\">var</span> children = <span class=\"keyword\">this</span>.children || []\n\n  children.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">child</span>) </span>{\n    <span class=\"keyword\">var</span> childEl = (child <span class=\"keyword\">instanceof</span> Element)\n      ? child.render() <span class=\"comment\">// 如果子节点也是虚拟DOM，递归构建DOM节点</span>\n      : <span class=\"built_in\">document</span>.createTextNode(child) <span class=\"comment\">// 如果字符串，只构建文本节点</span>\n    el.appendChild(childEl)\n  })\n\n  <span class=\"keyword\">return</span> el\n}\n</code></pre>\n<p></p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"comment\">// JSX编译过程 =&gt; [过程] =&gt;</span>\nJSX =&gt; Babel 编译 React.js =&gt;  \nJavaScript对象结构 =&gt; ReactDom.render =&gt; \nDOM元素 =&gt; \n插入页面\n</code></pre>\n<p></p>\n<h2 id=\"setState\"><a href=\"#setState\" class=\"headerlink\" title=\"setState\"></a>setState</h2><p>React.js 的 state 就是用来存储这种可变化的状态的。如果要想改变某个状态呢？那就<br>需要setState。</p>\n<p>setState 方法由父类 Component 所提供。setState 接受<code>对象参数 </code>和  <code>函数参数</code>。<code>当我们调用这个函数的时候，React.js 会更新组件的状态 state ，并且重新调用 render 方法，然后再把 render 方法所渲染的最新的内容显示到页面上。</code></p>\n<blockquote class=\"pullquote warning\"><p>注意：<br>当你调用 setState 的时候，React.js 并不会马上修改 state。</p>\n</blockquote>\n<p>调用 setState 的时候，是把这个对象放到一个更新队列里面，稍后才会从队列当中把新的状态提取出来合并到 state 当中，然后再触发组件更新。举个栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Index</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>{\n    <span class=\"keyword\">constructor</span> () {\n        <span class=\"keyword\">super</span>()\n        <span class=\"keyword\">this</span>.state = { <span class=\"attr\">isLiked</span>: <span class=\"literal\">false</span> }\n    }\n    handleClickOnLikeButton () {\n        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.state.isLiked) <span class=\"comment\">// false</span>\n        <span class=\"keyword\">this</span>.setState({\n            isLiked: !<span class=\"keyword\">this</span>.state.isLiked\n        })\n        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.state.isLiked) <span class=\"comment\">// false</span>\n    }\n    render() {\n        <span class=\"keyword\">return</span>(\n            &lt;button onClick={<span class=\"keyword\">this</span>.handleClickOnLikeButton.bind(<span class=\"keyword\">this</span>)&gt;\n                  {<span class=\"keyword\">this</span>.state.isLiked ? <span class=\"string\">'取消'</span> : <span class=\"string\">'点赞'</span>} \n            &lt;<span class=\"regexp\">/botton&gt;</span>\n<span class=\"regexp\">        )</span>\n<span class=\"regexp\">    }</span>\n<span class=\"regexp\">}</span>\n</code></pre>\n<p></p>\n<blockquote class=\"pullquote tip\"><p>Tip:<br>在使用 React.js 的时候，并不需要担心多次进行 setState 会带来性能问题。//  ✅ </p>\n</blockquote>\n<h2 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h2><p> React.js 内部对待每个组件都有一个过程，也就是初始化组件 -&gt; 挂载到页面上的过程。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">-&gt; <span class=\"keyword\">constructor</span>()\n-&gt; componentWillMount()\n-&gt; render()\n// 然后构造 DOM 元素插入页面\n-&gt; componentDidMount()\n</code></pre>\n<p></p>\n<p>那么挂载的时候，执行顺序是怎样的呢？请看下面这个栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Header</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>{\n  <span class=\"keyword\">constructor</span> () {\n    <span class=\"keyword\">super</span>()\n    <span class=\"built_in\">console</span>.log(<span class=\"string\">'construct'</span>)\n  }\n\n  componentWillMount () {\n    <span class=\"built_in\">console</span>.log(<span class=\"string\">'component will mount'</span>)\n  }\n\n  componentDidMount () {\n    <span class=\"built_in\">console</span>.log(<span class=\"string\">'component did mount'</span>)\n  }\n\n  render () {\n    <span class=\"built_in\">console</span>.log(<span class=\"string\">'render'</span>)\n    <span class=\"keyword\">return</span> (\n      &lt;div&gt;\n        &lt;h1 className=<span class=\"string\">'title'</span>&gt;React 小书&lt;<span class=\"regexp\">/h1&gt;</span>\n<span class=\"regexp\">      &lt;/</span>div&gt;\n    )\n  }\n}\n</code></pre>\n<p></p>\n<p>在控制台可以看到依次输出：<br><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">construct\ncomponent will mount\nrender\ncomponent did mount\n</code></pre>\n<p></p>\n<blockquote class=\"pullquote tip\"><h3 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h3><p>componentWillMount：组件挂载开始之前，也就是在组件调用 render 方法之前调用。<br>componentDidMount：组件挂载完成以后，也就是 DOM 元素已经插入页面后调用。<br>componentWillUnmount：组件对应的 DOM 元素从页面中删除之前调用。<br>componentWillUnmount：组件对应的 DOM 元素从页面中删除之前调用。<br>componentWillUnmount: 组件销毁调用。</p>\n<h3 id=\"更新阶段\"><a href=\"#更新阶段\" class=\"headerlink\" title=\"更新阶段\"></a>更新阶段</h3><p>shouldComponentUpdate(nextProps, nextState)：你可以通过这个方法控制组件是否重新渲染。如果返回 false 组件就不会重新渲染。这个生命周期在 React.js 性能优化上非常有用。<br>componentWillReceiveProps(nextProps)：组件从父组件接收到新的 props 之前调用。<br>componentWillUpdate()：组件开始重新渲染之前调用。<br>componentDidUpdate()：组件重新渲染并且把更改变更到真实的 DOM 以后调用。</p>\n</blockquote>\n<h2 id=\"Redux\"><a href=\"#Redux\" class=\"headerlink\" title=\"Redux\"></a>Redux</h2><p>To be continued…</p>"},{"title":"VuePress搭建个人博客","date":"2018-05-11T12:23:46.000Z","_content":"\n\n借助[VuePress](https://vuepress.docschina.org/)文档用VuePress + github搭建博客, 初试VuePress。\n\n## 原理\n\nVuePress 网站实际上是由 Vue, Vue Router 和 webpack 驱动的单页面应用程序。\n\n\n## 注意\n{% pullquote warning %}\n兼容性注意事项\nVuePress 要求 Node.js >= 8。\n{% endpullquote  %}\n\n<!-- more -->\n## 安装\n\n``` sh\n$ npm install -g vuepress\n```\n\n## 克隆VuePress\n\n``` sh\n$ git clone git@github.com:docschina/vuepress.git\n```\n\n## 运行\n\n``` sh\n$ cd VuePress\n$ cd docs\n$ vuepress dev\n```\n\n{% pullquote tip %}\n\nVuePress dev server listening at http://localhost:8080/\n出现上述提示，运行成功\n\n{% endpullquote  %}\n\n\n打开[http://localhost:8080/](http://localhost:8080/)查看效果。\n","source":"_posts/VuePress.md","raw":"---\ntitle: VuePress搭建个人博客\ndate: 2018-05-11 20:23:46\ntags:\n    - VuePress\ncategories:\n    - 技能簿\n---\n\n\n借助[VuePress](https://vuepress.docschina.org/)文档用VuePress + github搭建博客, 初试VuePress。\n\n## 原理\n\nVuePress 网站实际上是由 Vue, Vue Router 和 webpack 驱动的单页面应用程序。\n\n\n## 注意\n{% pullquote warning %}\n兼容性注意事项\nVuePress 要求 Node.js >= 8。\n{% endpullquote  %}\n\n<!-- more -->\n## 安装\n\n``` sh\n$ npm install -g vuepress\n```\n\n## 克隆VuePress\n\n``` sh\n$ git clone git@github.com:docschina/vuepress.git\n```\n\n## 运行\n\n``` sh\n$ cd VuePress\n$ cd docs\n$ vuepress dev\n```\n\n{% pullquote tip %}\n\nVuePress dev server listening at http://localhost:8080/\n出现上述提示，运行成功\n\n{% endpullquote  %}\n\n\n打开[http://localhost:8080/](http://localhost:8080/)查看效果。\n","slug":"VuePress","published":1,"updated":"2019-05-15T08:03:03.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvozd9y30007kcvcskc0svy1","content":"<p>借助<a href=\"https://vuepress.docschina.org/\" target=\"_blank\" rel=\"noopener\">VuePress</a>文档用VuePress + github搭建博客, 初试VuePress。</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>VuePress 网站实际上是由 Vue, Vue Router 和 webpack 驱动的单页面应用程序。</p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><blockquote class=\"pullquote warning\"><p>兼容性注意事项<br>VuePress 要求 Node.js &gt;= 8。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g vuepress</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"克隆VuePress\"><a href=\"#克隆VuePress\" class=\"headerlink\" title=\"克隆VuePress\"></a>克隆VuePress</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git@github.com:docschina/vuepress.git</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> VuePress</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> docs</span><br><span class=\"line\">$ vuepress dev</span><br></pre></td></tr></table></figure></div>\n<blockquote class=\"pullquote tip\"><p>VuePress dev server listening at <a href=\"http://localhost:8080/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/</a><br>出现上述提示，运行成功</p>\n</blockquote>\n<p>打开<a href=\"http://localhost:8080/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/</a>查看效果。</p>\n","site":{"data":{}},"excerpt":"<p>借助<a href=\"https://vuepress.docschina.org/\" target=\"_blank\" rel=\"noopener\">VuePress</a>文档用VuePress + github搭建博客, 初试VuePress。</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>VuePress 网站实际上是由 Vue, Vue Router 和 webpack 驱动的单页面应用程序。</p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><blockquote class=\"pullquote warning\"><p>兼容性注意事项<br>VuePress 要求 Node.js &gt;= 8。</p>\n</blockquote>","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g vuepress</span><br></pre></td></tr></table></figure>\n<h2 id=\"克隆VuePress\"><a href=\"#克隆VuePress\" class=\"headerlink\" title=\"克隆VuePress\"></a>克隆VuePress</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git@github.com:docschina/vuepress.git</span><br></pre></td></tr></table></figure>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> VuePress</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> docs</span><br><span class=\"line\">$ vuepress dev</span><br></pre></td></tr></table></figure>\n<blockquote class=\"pullquote tip\"><p>VuePress dev server listening at <a href=\"http://localhost:8080/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/</a><br>出现上述提示，运行成功</p>\n</blockquote>\n<p>打开<a href=\"http://localhost:8080/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/</a>查看效果。</p>"},{"title":"「 付费后可查看 」","date":"2018-05-10T07:27:18.000Z","password":"miao233","abstract":"支付成功可浏览","message":"请输入金额","_content":"\n\n一直想写一遍关于大学四年的文章，想到哪写到哪...写到毕业【离毕业还有一个月不到】\n\n## 大一\n\n  记得，大一进来对大学很期待，认识了很多朋友，其实，现在想来，应该上课好好听讲的，而不是天天玩爪机。细细想来，\n在大学，没找到一个趣味相投的朋友，不过找到了一个漂亮的女朋友。大一军训，因为我走路同手同脚然后比较爱开玩笑，\n大家就叫我逗比了，也挺好的。喜欢这个称号。大一，可以说是在手机中度过的。\n\n## 大二\n\n  大二喜欢看动漫了，整天在追番，水群和贴吧，大二，在动漫中度过。\n\n## 大三\n\n  大三突然之间喜欢玩基三了，哇，真的，大三游戏中度过，不过在基三中找到了女朋友，也是不错的。\n  到了下学期，为了可以去她的地方上班，我选择了去培训，在8.19日我去了重庆，在8.27日见到了她，她很好看，比重庆好看。\n\n## 大四\n  在重庆找工作上班，明白了很多道理，学到了很多...\n  在4月中旬因为考试和答辩，我回到了学校，走的那一刻，想起了叶修一句话，只不过是从头再来罢了。是啊，重庆等我，你也要等我。\n\n## 未来\n   念念不忘 必有回响\n","source":"_posts/daily.md","raw":"---\ntitle: 「 付费后可查看 」\ndate: 2018-05-10 15:27:18\ntags:\n    - 日常\ncategories:\n    - 日常簿\npassword: miao233\nabstract: 支付成功可浏览\nmessage: 请输入金额\n---\n\n\n一直想写一遍关于大学四年的文章，想到哪写到哪...写到毕业【离毕业还有一个月不到】\n\n## 大一\n\n  记得，大一进来对大学很期待，认识了很多朋友，其实，现在想来，应该上课好好听讲的，而不是天天玩爪机。细细想来，\n在大学，没找到一个趣味相投的朋友，不过找到了一个漂亮的女朋友。大一军训，因为我走路同手同脚然后比较爱开玩笑，\n大家就叫我逗比了，也挺好的。喜欢这个称号。大一，可以说是在手机中度过的。\n\n## 大二\n\n  大二喜欢看动漫了，整天在追番，水群和贴吧，大二，在动漫中度过。\n\n## 大三\n\n  大三突然之间喜欢玩基三了，哇，真的，大三游戏中度过，不过在基三中找到了女朋友，也是不错的。\n  到了下学期，为了可以去她的地方上班，我选择了去培训，在8.19日我去了重庆，在8.27日见到了她，她很好看，比重庆好看。\n\n## 大四\n  在重庆找工作上班，明白了很多道理，学到了很多...\n  在4月中旬因为考试和答辩，我回到了学校，走的那一刻，想起了叶修一句话，只不过是从头再来罢了。是啊，重庆等我，你也要等我。\n\n## 未来\n   念念不忘 必有回响\n","slug":"daily","published":1,"updated":"2019-05-15T08:03:03.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvozd9y60009kcvc51t3cnf8","content":"<script src=\"/crypto-js.js\"></script><script src=\"/mcommon.js\"></script><h3 id=\"encrypt-message\">请输入金额</h3><link rel=\"stylesheet\" href=\"//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css\"> <link rel=\"stylesheet\" href=\"//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css\"> <script src=\"//cdn.bootcss.com/jquery/1.11.3/jquery.min.js\"></script> <script src=\"//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script> <div id=\"security\"> <div> <div class=\"input-group\"> <input type=\"text\" class=\"form-control\" aria-label=\"Enter the password.\" id=\"pass\"/> <div class=\"input-group-btn\"> <button type=\"button\" class=\"btn btn-default\" onclick=\"decryptAES()\">Decrypt</button> </div> </div> </div> </div> <div id=\"encrypt-blog\" style=\"display:none\"> U2FsdGVkX19uEUuUqQmlubOPWLlNYAKjASDMbJEMhjXRXHePTR52ZO289/moP4OzOFLtetRCRh3IJJ3OHm+BYx/xZzeC1GV04pv2HJ17X0TvSCYCt1BdUFjI0DzdNDU6A6Xi+Q4FjTRd/f/PIIEtC4ymY+o9gbE3REoUfekDcNqXZGuL76RuuoNCJ3wNcTas6Z9H+owCL1jgERfG+3RXcGZq+xdYc8L91QZ6LHnq71Bl1MN1e4p1gfiK+6OuREeqto3PUF+8vQUkLeV73zCMNiLLoJdj0LKU4WoEEGyFDtgd16HPcKMsjXfMAOrEuRCrtWZsd0gQqw+YSH+dThgF3S9lbrSRCCjFPlcnCFsQyb1GQdieMi3DH/LazYyMW/DoWwPPDz7IBquqz7X4BzIONQQwillM4G0ZDAOu5nxcr0XAJyfNBRxYtFBuWC+Yk5GeJhwLHAmcqA5d8+ijtZHueqI/8ZHtFnwcAepehIFTd6qKtofX9vHUfITQ/XnHIVJ+SACLY4xOJXQ4EUBXu3GtC+V4ZqGiU+gK+L13qnH1SaymiwpVeC9zpdTupq4JN9UhFuAvwpmG8YjreBINQ/bMtAXchKvWmydsjtZn5oZONa0EfMUfQLG2JpRMbQ6EaAzolPGhPPAJaQ5NJ6Z9Q1JRgrJfsZtiX2LJ+PqzAX//VIH3nj4lUQ9VE1U3sJeLMKyr212Q7qbmngZf1B5IwxGH2wAaPwm7VONCu0BxIVZcWZT6CXfcO9edpWMA76HfrfdZhWXOgHHx7OYOnI1UxE8rZ5gC2rGwl/4j8bYwu/LESaJrDS9f/vPfHhsrZL40baTCLniGJBJtqr0khqeIRDPIu+uBoP0jiiYAhEeMj3mNXVJTsLMAJKooUDNkDiGJ1aTOnNeSiQzrYaJzr/D9tqU6d+apxvjBOt6OeZErQi8lli2ZiMkSSrfBRSzcyahp9ArXR5QEHaLefYVNUOx3+xMr2quGJFLoKvFY4nHPYmuEwFEf9eoztxRsHEKJv0VTqDZfTsTcOQdFtcqmBD9UajE1TSIDhjM826q/wf0RcZ2trUngzBjlAVtAaTn8E4zZEW25r2aX9eoFsO8s/z/b6BCxtrxwDZFF8sP+grBgUDHdMIDV4Kz/I5Z4pyCjaGryuKBMyVMrRyNg/Q2O0akodooptz5frJLSgouGGHwJGiISC3AovP6Lvlc654E7FNfVGCCEl8cTaBCmQbTsoYtdZLQdN64OHZ13RErzQEspIxtOfMMRVI028aQwF/rn3XAPJ71CWzgNny9v7engwXH1wqx4biuBAk0ZWGkcJzyHxLqJbQ6Lv9WB6hQzufoTliIHx9yAOll0w5XptHXlcwk9chgE8KzgUmbKIDoSSu0T1pBMMdcnJUhgvxcPHs5l//s0gOFhDjZoKyIhBNnR8e7jCgWBxHNXNUtth0epkA6lNmiT4CHe3oDMR4fiuoo30ewxr4JxHN/p/AlBlsZE8miONo+HaQZiVhtid7+Iys9DL6QZMX+vSWkETEZNADX9uBPSCjwi5gwJCuJu+BIsHRwcbBoueyIO2sKrwY6iP2Kbk6mbwnPuRN6Z4Ad9eSeBP9BsobF+7GBErx+PoqpV4pq7m8KMgGh0Hdn/rkuvXWwZRScJxhvb2VunsFPcnlVyywaFQQmRwPGB64ILiCVlnOP6agnYYk5vqIxyj9pSgr0JuWMdA9kO99aGjBjqIhHCc1+kh9zph9uIyQuU+aLXl9QoUYJcdijbxxcH+O+wHK8b/FUfkuACGBx1pVkL3pZKtXr3yDNA8crR5nKG/r+qxPQRPzaQPQ5RQ/NGY7fDpQqOF+FJ7d2QSc6LGFQJHQHWSmhUKTvMvWBaN2mfSCwhR/l8GDGQWWVn482p1vOAdySHt9222eGO5jqCcSNB6f+yByXKRZAQa5aheVnTyEFG4H2vFi1x5G/VJjwVHH6+XzihSdsOwxl+lONI28jAjdj+1c06sfcxVfQ2fGvZvxu3+2maF08TGle0sWETSL6vDlENUPHmTI3zLaBPN47seoZkJH2i7+SwnhnaZy5ug7KHfLN4L1bG/diSl9YNCRTy9nnibl8z3luqkw2xnD6WEQF+Eync/R2FvuTcUJ1/saXcWpyfleb/CoZP7j3K+Ypj7sp/n3gk489ZMgrEp1ueeGUk/PqDmH+ajS+k8ESyGHvBH4OmCqbOLXRIDDTnoWSakNPzDqS3tauD8wxHmiYig8KtKrhH7FD+zW8RE8Nh108RX8OhjwZlnrWXyrnHEO+SL5XwaMRrI344RzHRMz/jWVoPqLQ/4sTcPSxtpKlqYJAnPGn09a3YrwBnQPwEQvkdRwdHLhcSU6+6Qa5wkWcetFmIMju+DPQpBlYYn8Ej/rPu5Ld4RUBmNU3XwPkLF2TIT9lqQvCRfokIO99xKLFHrk/MuHC96JlFe1HUEpSmNnhsSnAdS6DovwFqdTPbP9Ds4tjGMmThrSddTpYnrYM0YTms4mS8IykObXPgKEJ4WjgajLhlSjb4PUSL4xr6kZ6FkrL3D/rM3s7+cdFOThYu66l/1d7MhUenGxrsp60vT5PZ19zpDBMLsOeib7hdnY2bo9MlGSkb225J9KOyvINIz3aMdsQ6j2+xnUzAJivlpsGGHU5+TY9sD1DDxGBbeLI6iK6BkuJO10kKSd6Qwn1MUf2Da6l2FS6Iie614w8tDArgM2c22D5qAxSbfTziNtJ5ewTGK+JYFa9W4ZZNHrNGk8yr0Op7LcDdD+mrD38szcIdBr1YIPfKKKQf4wY8UV1CiQ+TgldPATJc3APyOKjqOzfkBAwC11TysoVFUwVyt9yHUSTISnRiXkDN8VWpFyPChPmE+2hsw7ioOmm7dvTm3bDywvh3KQU/fn4KilqxPZKiwLJA5pHNX21i82QbdQ9RYhuSmOn8nMcqGoKRjJtuYXT+Yg+VHFuu/kN4ppCiYfthfGZyEojHgmpvrbODb8thK5EFBwpb2E8tC8jjEUKkNa/ofUnWl2QFMbI5ZELd/zgwRizV9UKHMqT3uiXfvsW58jqeNfzok5VgsKICaoerBM5f8Cd+LehcaQtNllK10GtaZRAmPkhhfE+Ke5/ciZSR3nLFq5efzZZ9N3PP8Hq6L/9md9vj8AxgPBYpB16cL7sVD4Pwpz4rc6P3UcvjTzVgMPrvP5LBOEF7Yx9KDlL3pTLFfacQjJ6prXYkQLp2AmWQLNAEXXPTsVVde+26TyeIUh7BAEEVj2J5xuObvNcWo77y+1XlBTdD/gEb5CmB2ZO3rOaLJjukCC8XdFjK6y16lqPXLzJ7XEk8UEzt7tWTaU3yF517Fzj4qM1kJBE5GNCyT5cnHHk0H3nE/SKAZQx/tNlQO/odJAwxT98eCHi5wtCvHXnFxcGqU3MtLLiUGPPwEvdqskPfxE8RXm6VoG3AUS30Frbdswx9bfqnvWYPR5XrLw40xbO2CqRVXk2k/2gcNb0juM+1zuwrT7KCF1csNf0+HqBWsJVR1vzKwyrHPwyhEJecbza/ODZgmQ9IYRsUX0pPAGHX6XnMkXzkp/Q+epWwki+80kXhJZbzUuzMw23QtjSsJN+dx356JT+d8Wg4191f+9zXI7wDTGsZzN9FPvDAX3ZOBhrtXQEdWPVNyvqgTGH/CPss1HL4tNGShT1gf8M+OU0GbBngA1mYQefTyRyzvAqdvGLsaUbsGkCORcSlW5I0XqLt0pCBJrbshqxmKFijyFcu5xyRDUmm49VwIbKD5FtNsPvLqrTxmSFbVn8r7Wk7wMb2xgPYPYHewd2ufA5azt6BQDI9oPKvU3Lop17/nZBPA/BrMyOKMFaAVTypHZ0KSgj3DAulAGstVQLBoXO8DKle2BWBoeumEbe5XtqxPW4BUXH6rQAiwAf6nBQow7SbUa14+OFZ83Kh4kDmIVR6y3ST7Gj8xNdeEGl3N3gEG1xcWDyp+w9nURQX/sRLgrde9A7TS7c55xM6hkcjTKoE5x/K9NAko/Z6X9uCddSsEWOzBKzLOKEO7L2LGPe5LzNxDd/Z4KR0yRUw1py2CCbUjpADL502pEf1NKZOqdNSOztPs1KF1FMA2gkX7UcjvX2t+5NZCAuYSMngXI4J5TguzQeSZqcYuwtABC4OeoU+oMPAelmsUVezcoPLQK4boKhTXMP6FvtJ1Y/w3KjLtn7Cr+6YsbjIM+0RJYfKzvN/qaAsA9qIz+GvaAXzpleUXG/ut06zyFiRHriwq3m2KaQ988KWzew5uFloSPEUsxgTdSe+rssn5HoMslpCo4y5Ugz83NHol93v+J5tJvxDoR/5S87x6grktfcXmPAFN8N7dxzAEmfNCtEmCj5XuVuplxNyNz6YFxwnrmth6CAjzkblFtXPi/GG4HDW7m9/hb4J7GdLd/WHnZUYg3VrONrAbxQxKFUYegceQb1FJ3ypyvWBhNSLRagFI0PjhcJQmfQF283sIIHmTCUdki9Ne33FxZN9VXr9pi6TUbStgSATM9HUWcNbiZrS7dKIwGr8rFus7au9QUhWs2PAaG/R/jKKVtNcJs7x0lIK6S8J0HpqRw2x3ePzbdvh8lJUFUoFP3j6tNglB5eLmXRBOr0SvuUDKnKGAkIQTykMEEq5+fO7g1f2NvgPzyma8UVQxva369358X9aO6WOAx+N4zi+Q0KjtKONyAgAdslk8ACB89N3XKxm4kcvmC3R9G+FyPYrbPxZNvLaJv6H04YWxXxV+XP+pbd/P8ErB18vkOmxdPYScveY5/wlQ2qSk8j8SyD3u0IQi7FYwuX/ICu8MIIzfJdXyzXtyHf0FtgltC1xtwLJW587IT4sF/U9GOajLI4Qsgzjwx3wpnV6hPW+6GnPwivJVtcQABTUfiQrRQZ3+HASVtn6eIhCUfD7RhfcSycgnqosrlba9k4DArOjRoZYJ1Br+BiZW+ixzYvmnF2y17+pzzxRs3hBJWVWTRfZ8+1XbUfVtt86SqdFveX2It8JaNSngqEVi2KYthVa0DJJF1Ke5POU8XfdoppL/qmij1cEQA7EQ8/CDGh0uBSj4acz1YW6KXmMrr5SmbCyplUxIO3F21fxEaTkRJhE4dGHGATiGjh+8IY5lBAUOG9UOLAVbXLYNQEj26Iu32FTrIy5B4VD3XkVvvjkoo4AwnKwnldI2oriJkPImtoDcHWormGZScmi5qSA8OdFXaRhsxuecS9k5vad0tVnvwsnOrtHP8pu0s7VKZMtcXZbNcpWLg2JYFwTw9YbL6bmS0jIcoFmN2/rjDm1wFvzeHnufC7Zse4pBpdauJTctIroW1fGMhoGnwY2RqMiADVoFBTiw5AE3ioTKRdsbLEcbzc+6NclOfI/IM7IF2JlyhZPk35/1NlMUZ/Tm4G0b96EVPlDzn2O8MnkzJ1TRMJ4aC3ampHTXZqhysItPh56tnRTrrXsfZOnWHg9AVtXi/IyJdDSUtkXcbEuZnUijX8S3+KAUZQ/+gnlXVPSn1K4ADJWLsSXQvXq+HQi8QK9TUDUoVWfIR0B12gQUuMOIVEqZ+lN9fhUWm8HbQnnjJ0LGF0pom5opFBwMX+5kLEHraexmA49fo/OkpxpaQMaWjPF2u3HYxkHikOHbHGQnXCpQHg84j5DUJVtnqsrmO2B8TzhVXUo9q/HIjACqDMYiBOinSp8o0n1ulfb4GgmlZG+Ga4G+X/JfLIzt6x0I6oIWyebJxaJD+go5vEFz0sU0fh+WIyyQl1l3WiwTMMUKdg493qtlAiSIsO+Ra5kJtI2W9JQYZ6V0nE1yXubZtICsOTC37VX7hScLOs7eSIeg1op8PrjofcJ5WAnMHENoi10pvIu1vNbuHtr+lrBZegzjZ26OhSQHqE0A5aS0a/K45sdmYlw8l8d3AONeCF0cCzUzwmsM0CsnSZPn0eu93wVv/A0khj4RzKgIEXkCU/plB2I0uHMyhcrWerkQhpxEAEtiB2wDDbYYFpn0nH7vb38H/SXuMriYoYr3SqEj8M98wjZqBfim7R+ZktEUbKNlmrWeSr0VD7LmkTRZ40uKIiwparlR2rxinAkjkRPmidaOPN6ATI= </div>","site":{"data":{}},"excerpt":"支付成功可浏览","more":"支付成功可浏览","origin":"<p>一直想写一遍关于大学四年的文章，想到哪写到哪…写到毕业【离毕业还有一个月不到】</p>\n<h2 id=\"大一\"><a href=\"#大一\" class=\"headerlink\" title=\"大一\"></a>大一</h2><p>  记得，大一进来对大学很期待，认识了很多朋友，其实，现在想来，应该上课好好听讲的，而不是天天玩爪机。细细想来，<br>在大学，没找到一个趣味相投的朋友，不过找到了一个漂亮的女朋友。大一军训，因为我走路同手同脚然后比较爱开玩笑，<br>大家就叫我逗比了，也挺好的。喜欢这个称号。大一，可以说是在手机中度过的。</p>\n<h2 id=\"大二\"><a href=\"#大二\" class=\"headerlink\" title=\"大二\"></a>大二</h2><p>  大二喜欢看动漫了，整天在追番，水群和贴吧，大二，在动漫中度过。</p>\n<h2 id=\"大三\"><a href=\"#大三\" class=\"headerlink\" title=\"大三\"></a>大三</h2><p>  大三突然之间喜欢玩基三了，哇，真的，大三游戏中度过，不过在基三中找到了女朋友，也是不错的。<br>  到了下学期，为了可以去她的地方上班，我选择了去培训，在8.19日我去了重庆，在8.27日见到了她，她很好看，比重庆好看。</p>\n<h2 id=\"大四\"><a href=\"#大四\" class=\"headerlink\" title=\"大四\"></a>大四</h2><p>  在重庆找工作上班，明白了很多道理，学到了很多…<br>  在4月中旬因为考试和答辩，我回到了学校，走的那一刻，想起了叶修一句话，只不过是从头再来罢了。是啊，重庆等我，你也要等我。</p>\n<h2 id=\"未来\"><a href=\"#未来\" class=\"headerlink\" title=\"未来\"></a>未来</h2><p>   念念不忘 必有回响</p>\n","encrypt":true,"template":"<link rel=\"stylesheet\" href=\"//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css\"> <link rel=\"stylesheet\" href=\"//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css\"> <script src=\"//cdn.bootcss.com/jquery/1.11.3/jquery.min.js\"></script> <script src=\"//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script> <div id=\"security\"> <div> <div class=\"input-group\"> <input type=\"text\" class=\"form-control\" aria-label=\"Enter the password.\" id=\"pass\"/> <div class=\"input-group-btn\"> <button type=\"button\" class=\"btn btn-default\" onclick=\"decryptAES()\">Decrypt</button> </div> </div> </div> </div> <div id=\"encrypt-blog\" style=\"display:none\"> {{content}} </div>"},{"layout":"[layout]","title":"毕业快乐！","author":"shamopoo","date":"2018-07-04T02:15:22.000Z","_content":"           \n那一天， 我毕业了 !  \n<!-- more -->\n\n<div class=\"graduate-time\" id=\"graduate-time\"></div>\n<script>\n  (function() {\n    var show = document.getElementById(\"graduate-time\");\n    setInterval(function() {\n    var BirthDay = new Date('2018-07-04');\n    var today = new Date();\n    var timeold = (today.getTime() - BirthDay.getTime());\n    var msPerDay = 24 * 60 * 60 * 1000 * 365;\n    var e_yearsold = timeold / msPerDay;\n    var yearsold = Math.floor(e_yearsold);\n    var e_daysold = (e_yearsold - yearsold) * 365;\n    var daysold = Math.floor(e_daysold);\n    var e_hrsold = (e_daysold - daysold) * 24;\n    var hrsold = Math.floor(e_hrsold);\n    var e_minsold = (e_hrsold - hrsold) * 60;\n    var minsold = Math.floor((e_hrsold - hrsold) * 60);\n    var seconds = Math.floor((e_minsold - minsold) * 60);\n    var t = '毕业' \n    + (yearsold + '').padStart(2, '0') + \"年\" \n    + (daysold + '').padStart(3, '0') + \"天\" \n    + (hrsold + '').padStart(2, '0') + \"小时\" \n    + (minsold + '').padStart(2, '0')  + \"分\" \n    + (seconds + '').padStart(2, '0') + \"秒\"\n    show.innerHTML = t;\n    }, 1000)\n}());\n</script>\n</script>\n","source":"_posts/graduate.md","raw":"layout: '[layout]'\ntitle: 毕业快乐！\ntags:\n  - 毕业\ncategories:\n  - 日常簿\nauthor: shamopoo\ndate: 2018-07-04 10:15:22\n---\n           \n那一天， 我毕业了 !  \n<!-- more -->\n\n<div class=\"graduate-time\" id=\"graduate-time\"></div>\n<script>\n  (function() {\n    var show = document.getElementById(\"graduate-time\");\n    setInterval(function() {\n    var BirthDay = new Date('2018-07-04');\n    var today = new Date();\n    var timeold = (today.getTime() - BirthDay.getTime());\n    var msPerDay = 24 * 60 * 60 * 1000 * 365;\n    var e_yearsold = timeold / msPerDay;\n    var yearsold = Math.floor(e_yearsold);\n    var e_daysold = (e_yearsold - yearsold) * 365;\n    var daysold = Math.floor(e_daysold);\n    var e_hrsold = (e_daysold - daysold) * 24;\n    var hrsold = Math.floor(e_hrsold);\n    var e_minsold = (e_hrsold - hrsold) * 60;\n    var minsold = Math.floor((e_hrsold - hrsold) * 60);\n    var seconds = Math.floor((e_minsold - minsold) * 60);\n    var t = '毕业' \n    + (yearsold + '').padStart(2, '0') + \"年\" \n    + (daysold + '').padStart(3, '0') + \"天\" \n    + (hrsold + '').padStart(2, '0') + \"小时\" \n    + (minsold + '').padStart(2, '0')  + \"分\" \n    + (seconds + '').padStart(2, '0') + \"秒\"\n    show.innerHTML = t;\n    }, 1000)\n}());\n</script>\n</script>\n","slug":"graduate","published":1,"updated":"2019-05-15T08:03:03.611Z","comments":1,"photos":[],"link":"","_id":"cjvozd9y9000bkcvck3r5wr9c","content":"<p>那一天， 我毕业了 !<br><a id=\"more\"></a></p>\n<p><div class=\"graduate-time\" id=\"graduate-time\"></div></p>\n<script>\n  (function() {\n    var show = document.getElementById(\"graduate-time\");\n    setInterval(function() {\n    var BirthDay = new Date('2018-07-04');\n    var today = new Date();\n    var timeold = (today.getTime() - BirthDay.getTime());\n    var msPerDay = 24 * 60 * 60 * 1000 * 365;\n    var e_yearsold = timeold / msPerDay;\n    var yearsold = Math.floor(e_yearsold);\n    var e_daysold = (e_yearsold - yearsold) * 365;\n    var daysold = Math.floor(e_daysold);\n    var e_hrsold = (e_daysold - daysold) * 24;\n    var hrsold = Math.floor(e_hrsold);\n    var e_minsold = (e_hrsold - hrsold) * 60;\n    var minsold = Math.floor((e_hrsold - hrsold) * 60);\n    var seconds = Math.floor((e_minsold - minsold) * 60);\n    var t = '毕业' \n    + (yearsold + '').padStart(2, '0') + \"年\" \n    + (daysold + '').padStart(3, '0') + \"天\" \n    + (hrsold + '').padStart(2, '0') + \"小时\" \n    + (minsold + '').padStart(2, '0')  + \"分\" \n    + (seconds + '').padStart(2, '0') + \"秒\"\n    show.innerHTML = t;\n    }, 1000)\n}());\n</script>\n\n","site":{"data":{}},"excerpt":"<p>那一天， 我毕业了 !<br>","more":"</p>\n<p><div class=\"graduate-time\" id=\"graduate-time\"></div></p>\n<script>\n  (function() {\n    var show = document.getElementById(\"graduate-time\");\n    setInterval(function() {\n    var BirthDay = new Date('2018-07-04');\n    var today = new Date();\n    var timeold = (today.getTime() - BirthDay.getTime());\n    var msPerDay = 24 * 60 * 60 * 1000 * 365;\n    var e_yearsold = timeold / msPerDay;\n    var yearsold = Math.floor(e_yearsold);\n    var e_daysold = (e_yearsold - yearsold) * 365;\n    var daysold = Math.floor(e_daysold);\n    var e_hrsold = (e_daysold - daysold) * 24;\n    var hrsold = Math.floor(e_hrsold);\n    var e_minsold = (e_hrsold - hrsold) * 60;\n    var minsold = Math.floor((e_hrsold - hrsold) * 60);\n    var seconds = Math.floor((e_minsold - minsold) * 60);\n    var t = '毕业' \n    + (yearsold + '').padStart(2, '0') + \"年\" \n    + (daysold + '').padStart(3, '0') + \"天\" \n    + (hrsold + '').padStart(2, '0') + \"小时\" \n    + (minsold + '').padStart(2, '0')  + \"分\" \n    + (seconds + '').padStart(2, '0') + \"秒\"\n    show.innerHTML = t;\n    }, 1000)\n}());\n</script>"},{"title":"Hello World","date":"2018-03-16T13:53:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"title: Hello World\ntags:\n- 前端\n- hexo\ncategories:\n- 事件簿\ndate: 2018-03-16 21:53:00\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2019-05-15T08:03:03.611Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvozd9yd000gkcvcssmqwnog","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<a id=\"more\"></a>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight /bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight /bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight /bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight /bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></div>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>","more":"<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"title":"一台电脑上用多个git账户更新多个hexo博客","date":"2018-05-05T07:00:58.000Z","_content":"\n## 问题描述\n\n有时候我们一台电脑要更新两个甚至多个hexo博客, 而电脑默认保存一个git私钥/公钥。\n\n\n## 思路\n\n生成多个不同的私钥/公钥, 分别 hexo g 到多个的git账户，从而实现更新多个hexo博客。\n<!-- more -->\n## 配置\n\n1.查看是否存在SSH密钥\n``` sh\n$ cd ~/.ssh\n```\n如果有 id_rsa 和 id_rsa.pub，说明已存在一对密钥/公钥。\n\n2.创建新的 私钥/公钥, 并指定秘钥名称, 如 id_rsa_second\n\n``` sh\nssh-keygen -t rsa -f  ~/.ssh/id_rsa_second -C \"yourmail@xxx.com\"\n```\n\n完成后, 该目录下会多出 id_rsa_second 和 id_rsa_second.pub 两个文件\n\n3.在 ~/.ssh 目录下创建一个名为 config 文件\n\n将以下内容添加到 config 文件中\n\n``` sh\n# 第一个账号，默认使用的账号\nHost github.com\nHostName github.com\nUser git\nIdentityFile ~/.ssh/id_rsa\n# 第二个账号\nHost second.github.com  # second为前缀名，可以任意设置\nHostName github.com\nUser git\nIdentityFile ~/.ssh/id_rsa_second\n```\n\n{% pullquote tip %}\n原理分析\n1.ssh 客户端是通过类似 git@github.com:githubUserName/repName.git 的地址来识别使用本地的哪个私钥的，\n地址中的 User 是@前面的git， Host 是@后面的github.com。\n2.如果所有账号的 User 和 Host 都为 git 和 github.com，那么就只能使用一个私钥。\n所以要对User 和 Host 进行配置，让每个账号使用自己的 Host，每个 Host 的域名做 CNAME 解析到 github.com，\n如上面配置中的Host second.github.com。\n3.配置了别名之后，新的地址就是git@second.github.com:githubUserName/repName.git。\n这样 ssh 在连接时就可以区别不同的账号了。\n{% endpullquote  %}\n\n4.查看 SSH 密钥的值，分别添加到对应的 GitHub 账户中\n\n``` sh\n$ cat id_rsa.pub\n$ cat id_rsa_second.pub\n```\n\n5.清空本地的 SSH 缓存，添加新的 SSH 密钥 到 SSH agent中\n\n``` sh\n$ ssh-add -D\n$ ssh-add id_rsa\n$ ssh-add id_rsa_second\n```\n\n最后确认一下新秘钥已经添加成功\n\n``` sh\n$ ssh-add -l\n```\n6.测试 ssh 链接\n\n``` sh\nssh -T git@github.com\nssh -T git@second.github.com\n```\n{% pullquote tip %}\n\nHi username! You've successfully authenticated, but GitHub does not provide shell access.\n出现上述提示，连接成功\n\n{% endpullquote  %}\n\n7.进入项目文件夹，单独设置用户名/邮箱\n\n``` sh\n# 取消全局 用户名/邮箱 配置\n$ git config --global --unset user.name\n$ git config --global --unset user.email\n# 进入项目文件夹，单独设置每个repo 用户名/邮箱\n$ git config user.email \"xxxx@xx.com\"\n$ git config user.name \"xxxx\"\n```\n\n查看设置是否成功\n\n``` sh\ngit config --list\n```\n8.最后在 hexo 配置文件修改git地址\n\n``` sh\ndeploy:\n  type: git\n  repository: git@second.github.com:username/username.github.io.git\n  branch: master\n```\n\n配置多个git账户重复以上步骤。\n\n## 参考\n[一台电脑上用多个git账户](http://e-e.iteye.com/blog/2359320)\n","source":"_posts/hexo-git.md","raw":"---\ntitle: 一台电脑上用多个git账户更新多个hexo博客\ndate: 2018-05-05 15:00:58\ntags:\n  - hexo\n  - git\ncategories:\n  - 技能簿\n---\n\n## 问题描述\n\n有时候我们一台电脑要更新两个甚至多个hexo博客, 而电脑默认保存一个git私钥/公钥。\n\n\n## 思路\n\n生成多个不同的私钥/公钥, 分别 hexo g 到多个的git账户，从而实现更新多个hexo博客。\n<!-- more -->\n## 配置\n\n1.查看是否存在SSH密钥\n``` sh\n$ cd ~/.ssh\n```\n如果有 id_rsa 和 id_rsa.pub，说明已存在一对密钥/公钥。\n\n2.创建新的 私钥/公钥, 并指定秘钥名称, 如 id_rsa_second\n\n``` sh\nssh-keygen -t rsa -f  ~/.ssh/id_rsa_second -C \"yourmail@xxx.com\"\n```\n\n完成后, 该目录下会多出 id_rsa_second 和 id_rsa_second.pub 两个文件\n\n3.在 ~/.ssh 目录下创建一个名为 config 文件\n\n将以下内容添加到 config 文件中\n\n``` sh\n# 第一个账号，默认使用的账号\nHost github.com\nHostName github.com\nUser git\nIdentityFile ~/.ssh/id_rsa\n# 第二个账号\nHost second.github.com  # second为前缀名，可以任意设置\nHostName github.com\nUser git\nIdentityFile ~/.ssh/id_rsa_second\n```\n\n{% pullquote tip %}\n原理分析\n1.ssh 客户端是通过类似 git@github.com:githubUserName/repName.git 的地址来识别使用本地的哪个私钥的，\n地址中的 User 是@前面的git， Host 是@后面的github.com。\n2.如果所有账号的 User 和 Host 都为 git 和 github.com，那么就只能使用一个私钥。\n所以要对User 和 Host 进行配置，让每个账号使用自己的 Host，每个 Host 的域名做 CNAME 解析到 github.com，\n如上面配置中的Host second.github.com。\n3.配置了别名之后，新的地址就是git@second.github.com:githubUserName/repName.git。\n这样 ssh 在连接时就可以区别不同的账号了。\n{% endpullquote  %}\n\n4.查看 SSH 密钥的值，分别添加到对应的 GitHub 账户中\n\n``` sh\n$ cat id_rsa.pub\n$ cat id_rsa_second.pub\n```\n\n5.清空本地的 SSH 缓存，添加新的 SSH 密钥 到 SSH agent中\n\n``` sh\n$ ssh-add -D\n$ ssh-add id_rsa\n$ ssh-add id_rsa_second\n```\n\n最后确认一下新秘钥已经添加成功\n\n``` sh\n$ ssh-add -l\n```\n6.测试 ssh 链接\n\n``` sh\nssh -T git@github.com\nssh -T git@second.github.com\n```\n{% pullquote tip %}\n\nHi username! You've successfully authenticated, but GitHub does not provide shell access.\n出现上述提示，连接成功\n\n{% endpullquote  %}\n\n7.进入项目文件夹，单独设置用户名/邮箱\n\n``` sh\n# 取消全局 用户名/邮箱 配置\n$ git config --global --unset user.name\n$ git config --global --unset user.email\n# 进入项目文件夹，单独设置每个repo 用户名/邮箱\n$ git config user.email \"xxxx@xx.com\"\n$ git config user.name \"xxxx\"\n```\n\n查看设置是否成功\n\n``` sh\ngit config --list\n```\n8.最后在 hexo 配置文件修改git地址\n\n``` sh\ndeploy:\n  type: git\n  repository: git@second.github.com:username/username.github.io.git\n  branch: master\n```\n\n配置多个git账户重复以上步骤。\n\n## 参考\n[一台电脑上用多个git账户](http://e-e.iteye.com/blog/2359320)\n","slug":"hexo-git","published":1,"updated":"2019-05-15T08:03:03.611Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvozd9yf000ikcvcm146k727","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>有时候我们一台电脑要更新两个甚至多个hexo博客, 而电脑默认保存一个git私钥/公钥。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>生成多个不同的私钥/公钥, 分别 hexo g 到多个的git账户，从而实现更新多个hexo博客。<br><a id=\"more\"></a></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>1.查看是否存在SSH密钥<br><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.ssh</span><br></pre></td></tr></table></figure></div></p>\n<p>如果有 id_rsa 和 id_rsa.pub，说明已存在一对密钥/公钥。</p>\n<p>2.创建新的 私钥/公钥, 并指定秘钥名称, 如 id_rsa_second</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -f  ~/.ssh/id_rsa_second -C <span class=\"string\">\"yourmail@xxx.com\"</span></span><br></pre></td></tr></table></figure></div>\n<p>完成后, 该目录下会多出 id_rsa_second 和 id_rsa_second.pub 两个文件</p>\n<p>3.在 ~/.ssh 目录下创建一个名为 config 文件</p>\n<p>将以下内容添加到 config 文件中</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 第一个账号，默认使用的账号</span></span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\"><span class=\"comment\"># 第二个账号</span></span><br><span class=\"line\">Host second.github.com  <span class=\"comment\"># second为前缀名，可以任意设置</span></span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa_second</span><br></pre></td></tr></table></figure></div>\n<blockquote class=\"pullquote tip\"><p>原理分析<br>1.ssh 客户端是通过类似 <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:githubUserName/repName.git 的地址来识别使用本地的哪个私钥的，<br>地址中的 User 是@前面的git， Host 是@后面的github.com。<br>2.如果所有账号的 User 和 Host 都为 git 和 github.com，那么就只能使用一个私钥。<br>所以要对User 和 Host 进行配置，让每个账号使用自己的 Host，每个 Host 的域名做 CNAME 解析到 github.com，<br>如上面配置中的Host second.github.com。<br>3.配置了别名之后，新的地址就是<a href=\"mailto:git@second.github.com\" target=\"_blank\" rel=\"noopener\">git@second.github.com</a>:githubUserName/repName.git。<br>这样 ssh 在连接时就可以区别不同的账号了。</p>\n</blockquote>\n<p>4.查看 SSH 密钥的值，分别添加到对应的 GitHub 账户中</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat id_rsa.pub</span><br><span class=\"line\">$ cat id_rsa_second.pub</span><br></pre></td></tr></table></figure></div>\n<p>5.清空本地的 SSH 缓存，添加新的 SSH 密钥 到 SSH agent中</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-add -D</span><br><span class=\"line\">$ ssh-add id_rsa</span><br><span class=\"line\">$ ssh-add id_rsa_second</span><br></pre></td></tr></table></figure></div>\n<p>最后确认一下新秘钥已经添加成功</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-add -l</span><br></pre></td></tr></table></figure></div>\n<p>6.测试 ssh 链接</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br><span class=\"line\">ssh -T git@second.github.com</span><br></pre></td></tr></table></figure></div>\n<blockquote class=\"pullquote tip\"><p>Hi username! You’ve successfully authenticated, but GitHub does not provide shell access.<br>出现上述提示，连接成功</p>\n</blockquote>\n<p>7.进入项目文件夹，单独设置用户名/邮箱</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 取消全局 用户名/邮箱 配置</span></span><br><span class=\"line\">$ git config --global --<span class=\"built_in\">unset</span> user.name</span><br><span class=\"line\">$ git config --global --<span class=\"built_in\">unset</span> user.email</span><br><span class=\"line\"><span class=\"comment\"># 进入项目文件夹，单独设置每个repo 用户名/邮箱</span></span><br><span class=\"line\">$ git config user.email <span class=\"string\">\"xxxx@xx.com\"</span></span><br><span class=\"line\">$ git config user.name <span class=\"string\">\"xxxx\"</span></span><br></pre></td></tr></table></figure></div>\n<p>查看设置是否成功</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure></div>\n<p>8.最后在 hexo 配置文件修改git地址</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"SH\"><figure class=\"iseeu highlight /sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repository: git@second.github.com:username/username.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></div>\n<p>配置多个git账户重复以上步骤。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://e-e.iteye.com/blog/2359320\" target=\"_blank\" rel=\"noopener\">一台电脑上用多个git账户</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>有时候我们一台电脑要更新两个甚至多个hexo博客, 而电脑默认保存一个git私钥/公钥。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>生成多个不同的私钥/公钥, 分别 hexo g 到多个的git账户，从而实现更新多个hexo博客。<br>","more":"</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>1.查看是否存在SSH密钥<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.ssh</span><br></pre></td></tr></table></figure></p>\n<p>如果有 id_rsa 和 id_rsa.pub，说明已存在一对密钥/公钥。</p>\n<p>2.创建新的 私钥/公钥, 并指定秘钥名称, 如 id_rsa_second</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -f  ~/.ssh/id_rsa_second -C <span class=\"string\">\"yourmail@xxx.com\"</span></span><br></pre></td></tr></table></figure>\n<p>完成后, 该目录下会多出 id_rsa_second 和 id_rsa_second.pub 两个文件</p>\n<p>3.在 ~/.ssh 目录下创建一个名为 config 文件</p>\n<p>将以下内容添加到 config 文件中</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 第一个账号，默认使用的账号</span></span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\"><span class=\"comment\"># 第二个账号</span></span><br><span class=\"line\">Host second.github.com  <span class=\"comment\"># second为前缀名，可以任意设置</span></span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">User git</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa_second</span><br></pre></td></tr></table></figure>\n<blockquote class=\"pullquote tip\"><p>原理分析<br>1.ssh 客户端是通过类似 <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:githubUserName/repName.git 的地址来识别使用本地的哪个私钥的，<br>地址中的 User 是@前面的git， Host 是@后面的github.com。<br>2.如果所有账号的 User 和 Host 都为 git 和 github.com，那么就只能使用一个私钥。<br>所以要对User 和 Host 进行配置，让每个账号使用自己的 Host，每个 Host 的域名做 CNAME 解析到 github.com，<br>如上面配置中的Host second.github.com。<br>3.配置了别名之后，新的地址就是<a href=\"mailto:git@second.github.com\" target=\"_blank\" rel=\"noopener\">git@second.github.com</a>:githubUserName/repName.git。<br>这样 ssh 在连接时就可以区别不同的账号了。</p>\n</blockquote>\n<p>4.查看 SSH 密钥的值，分别添加到对应的 GitHub 账户中</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat id_rsa.pub</span><br><span class=\"line\">$ cat id_rsa_second.pub</span><br></pre></td></tr></table></figure>\n<p>5.清空本地的 SSH 缓存，添加新的 SSH 密钥 到 SSH agent中</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-add -D</span><br><span class=\"line\">$ ssh-add id_rsa</span><br><span class=\"line\">$ ssh-add id_rsa_second</span><br></pre></td></tr></table></figure>\n<p>最后确认一下新秘钥已经添加成功</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-add -l</span><br></pre></td></tr></table></figure>\n<p>6.测试 ssh 链接</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br><span class=\"line\">ssh -T git@second.github.com</span><br></pre></td></tr></table></figure>\n<blockquote class=\"pullquote tip\"><p>Hi username! You’ve successfully authenticated, but GitHub does not provide shell access.<br>出现上述提示，连接成功</p>\n</blockquote>\n<p>7.进入项目文件夹，单独设置用户名/邮箱</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 取消全局 用户名/邮箱 配置</span></span><br><span class=\"line\">$ git config --global --<span class=\"built_in\">unset</span> user.name</span><br><span class=\"line\">$ git config --global --<span class=\"built_in\">unset</span> user.email</span><br><span class=\"line\"><span class=\"comment\"># 进入项目文件夹，单独设置每个repo 用户名/邮箱</span></span><br><span class=\"line\">$ git config user.email <span class=\"string\">\"xxxx@xx.com\"</span></span><br><span class=\"line\">$ git config user.name <span class=\"string\">\"xxxx\"</span></span><br></pre></td></tr></table></figure>\n<p>查看设置是否成功</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n<p>8.最后在 hexo 配置文件修改git地址</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repository: git@second.github.com:username/username.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>配置多个git账户重复以上步骤。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://e-e.iteye.com/blog/2359320\" target=\"_blank\" rel=\"noopener\">一台电脑上用多个git账户</a></p>"},{"title":"hexo置顶文章及样式美化","date":"2018-05-14T09:51:12.000Z","_content":"\n## 问题描述\n\n文章置顶功能实现, top值越高越在前。由于官方并未给出置顶功能, 所以要手动修改。\n{% pullquote tip %}\nsticky: 显示图钉样式\ntop: 置顶功能实现\n{% endpullquote  %}\n## 原理\n\n在Hexo生成首页HTML时， top值越高越在前，达到文章置顶功能。\n\n<!-- more -->\n\n## 修改\n\n找到<code>node_modules\\hexo-generator-index\\lib\\generator.js</code>文件。替换如下：\n\n``` JAVASCRIPT\n'use strict';\nvar pagination = require('hexo-pagination');\nmodule.exports = function(locals){\n  var config = this.config;\n  var posts = locals.posts;\n    posts.data = posts.data.sort(function(a, b) {\n        if(a.top && b.top) { // 两篇文章top都有定义\n            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排\n            else return b.top - a.top; // 否则按照top值降序排\n        }\n        else if(a.top && !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）\n            return -1;\n        }\n        else if(!a.top && b.top) {\n            return 1;\n        }\n        else return b.date - a.date; // 都没定义按照文章日期降序排\n    });\n  var paginationDir = config.pagination_dir || 'page';\n  return pagination('', posts, {\n    perPage: config.index_generator.per_page,\n    layout: ['index', 'archive'],\n    format: paginationDir + '/%d/',\n    data: {\n      __index: true\n    }\n  });\n};\n```\n\n找到<code>themes\\主题\\layout\\_macro\\post.swig</code>文件。在<code>POST BLOCK</code>添加如下：\n\n``` HTML\n<div class=\"set-top\"><div>置顶</div></div>\n```\n找到<code>themes\\主题\\source\\css\\_custom\\custom.styl</code>文件。添加如下：\n\n``` CSS\n/*置顶*/\narticle:not(:first-of-type) .post-block .set-top div{display:none;}\narticle:last-of-type .post-block .set-top div{display:none;}\narticle:first-of-type .post-block .set-top {\n    width: 80px;\n    height: 80px;\n    overflow: hidden;\n    position: absolute;\n    top: -3px;\n    right: -3px;\n}\narticle:first-of-type .post-block .set-top div{\n    line-height: 18px;\n    text-align: center;\n    -webkit-transform: rotate(45deg);\n    -moz-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    -o-transform: rotate(45deg);\n    position: relative;\n    padding: 3px 0;\n    top: 12px;\n    width: 113px;\n    background-color: #0bf;\n    color: #fff;\n    box-shadow: -3px 5px 6px -5px rgba(0,0,0,.5);\n    background: -webkit-linear-gradient(left , rgba(48,182,209,0.99),rgba(43,70,191,0.99) 100%);\n}\narticle:first-of-type .set-top>div:before {\n    content: \"\";\n    position: absolute;\n    left: 6px;\n    top: 100%;\n    z-index: -1;\n    border-left: 4px solid #31a4ce;\n    border-right: 4px solid transparent;\n    border-bottom: 4px solid transparent;\n    border-top: 4px solid #31a4ce;\n}\narticle:first-of-type .set-top>div:after {\n    content: \"\";\n    position: absolute;\n    right: 6px;\n    top: 100%;\n    z-index: -1;\n    border-left: 4px solid transparent;\n    border-right: 4px solid #2f5ec3;\n    border-bottom: 4px solid transparent;\n    border-top: 4px solid #2f5ec3;\n}\n```\n\n## 使用\n\n``` Markdown\ntitle: hexo置顶文章及样式美化\ndate: 2018-05-14 17:51:12\ntags: - hexo\ncategories: - 技能簿\ntop: 100\n```\n","source":"_posts/hexo-top.md","raw":"---\ntitle: hexo置顶文章及样式美化\ndate: 2018-05-14 17:51:12\ntags:\n   - hexo\ncategories:\n   - 技能簿\n---\n\n## 问题描述\n\n文章置顶功能实现, top值越高越在前。由于官方并未给出置顶功能, 所以要手动修改。\n{% pullquote tip %}\nsticky: 显示图钉样式\ntop: 置顶功能实现\n{% endpullquote  %}\n## 原理\n\n在Hexo生成首页HTML时， top值越高越在前，达到文章置顶功能。\n\n<!-- more -->\n\n## 修改\n\n找到<code>node_modules\\hexo-generator-index\\lib\\generator.js</code>文件。替换如下：\n\n``` JAVASCRIPT\n'use strict';\nvar pagination = require('hexo-pagination');\nmodule.exports = function(locals){\n  var config = this.config;\n  var posts = locals.posts;\n    posts.data = posts.data.sort(function(a, b) {\n        if(a.top && b.top) { // 两篇文章top都有定义\n            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排\n            else return b.top - a.top; // 否则按照top值降序排\n        }\n        else if(a.top && !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）\n            return -1;\n        }\n        else if(!a.top && b.top) {\n            return 1;\n        }\n        else return b.date - a.date; // 都没定义按照文章日期降序排\n    });\n  var paginationDir = config.pagination_dir || 'page';\n  return pagination('', posts, {\n    perPage: config.index_generator.per_page,\n    layout: ['index', 'archive'],\n    format: paginationDir + '/%d/',\n    data: {\n      __index: true\n    }\n  });\n};\n```\n\n找到<code>themes\\主题\\layout\\_macro\\post.swig</code>文件。在<code>POST BLOCK</code>添加如下：\n\n``` HTML\n<div class=\"set-top\"><div>置顶</div></div>\n```\n找到<code>themes\\主题\\source\\css\\_custom\\custom.styl</code>文件。添加如下：\n\n``` CSS\n/*置顶*/\narticle:not(:first-of-type) .post-block .set-top div{display:none;}\narticle:last-of-type .post-block .set-top div{display:none;}\narticle:first-of-type .post-block .set-top {\n    width: 80px;\n    height: 80px;\n    overflow: hidden;\n    position: absolute;\n    top: -3px;\n    right: -3px;\n}\narticle:first-of-type .post-block .set-top div{\n    line-height: 18px;\n    text-align: center;\n    -webkit-transform: rotate(45deg);\n    -moz-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    -o-transform: rotate(45deg);\n    position: relative;\n    padding: 3px 0;\n    top: 12px;\n    width: 113px;\n    background-color: #0bf;\n    color: #fff;\n    box-shadow: -3px 5px 6px -5px rgba(0,0,0,.5);\n    background: -webkit-linear-gradient(left , rgba(48,182,209,0.99),rgba(43,70,191,0.99) 100%);\n}\narticle:first-of-type .set-top>div:before {\n    content: \"\";\n    position: absolute;\n    left: 6px;\n    top: 100%;\n    z-index: -1;\n    border-left: 4px solid #31a4ce;\n    border-right: 4px solid transparent;\n    border-bottom: 4px solid transparent;\n    border-top: 4px solid #31a4ce;\n}\narticle:first-of-type .set-top>div:after {\n    content: \"\";\n    position: absolute;\n    right: 6px;\n    top: 100%;\n    z-index: -1;\n    border-left: 4px solid transparent;\n    border-right: 4px solid #2f5ec3;\n    border-bottom: 4px solid transparent;\n    border-top: 4px solid #2f5ec3;\n}\n```\n\n## 使用\n\n``` Markdown\ntitle: hexo置顶文章及样式美化\ndate: 2018-05-14 17:51:12\ntags: - hexo\ncategories: - 技能簿\ntop: 100\n```\n","slug":"hexo-top","published":1,"updated":"2019-05-15T08:03:03.612Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvozd9yi000nkcvcevcdkz3u","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>文章置顶功能实现, top值越高越在前。由于官方并未给出置顶功能, 所以要手动修改。<br><blockquote class=\"pullquote tip\"><p>sticky: 显示图钉样式<br>top: 置顶功能实现</p>\n</blockquote></p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>在Hexo生成首页HTML时， top值越高越在前，达到文章置顶功能。</p>\n<a id=\"more\"></a>\n<h2 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h2><p>找到<code>node_modules\\hexo-generator-index\\lib\\generator.js</code>文件。替换如下：</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JAVASCRIPT\"><figure class=\"iseeu highlight /javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = <span class=\"keyword\">this</span>.config;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> posts = locals.posts;</span><br><span class=\"line\">    posts.data = posts.data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.top &amp;&amp; b.top) &#123; <span class=\"comment\">// 两篇文章top都有定义</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a.top == b.top) <span class=\"keyword\">return</span> b.date - a.date; <span class=\"comment\">// 若top值一样则按照文章日期降序排</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.top - a.top; <span class=\"comment\">// 否则按照top值降序排</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.top &amp;&amp; !b.top) &#123; <span class=\"comment\">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.date - a.date; <span class=\"comment\">// 都没定义按照文章日期降序排</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> paginationDir = config.pagination_dir || <span class=\"string\">'page'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">''</span>, posts, &#123;</span><br><span class=\"line\">    perPage: config.index_generator.per_page,</span><br><span class=\"line\">    layout: [<span class=\"string\">'index'</span>, <span class=\"string\">'archive'</span>],</span><br><span class=\"line\">    format: paginationDir + <span class=\"string\">'/%d/'</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      __index: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></div>\n<p>找到<code>themes\\主题\\layout_macro\\post.swig</code>文件。在<code>POST BLOCK</code>添加如下：</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"HTML\"><figure class=\"iseeu highlight /html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"set-top\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>置顶<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<p>找到<code>themes\\主题\\source\\css_custom\\custom.styl</code>文件。添加如下：</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"CSS\"><figure class=\"iseeu highlight /css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*置顶*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:not(</span><span class=\"selector-pseudo\">:first-of-type)</span> <span class=\"selector-class\">.post-block</span> <span class=\"selector-class\">.set-top</span> <span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">display</span>:none;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:last-of-type</span> <span class=\"selector-class\">.post-block</span> <span class=\"selector-class\">.set-top</span> <span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">display</span>:none;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:first-of-type</span> <span class=\"selector-class\">.post-block</span> <span class=\"selector-class\">.set-top</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: -<span class=\"number\">3px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: -<span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:first-of-type</span> <span class=\"selector-class\">.post-block</span> <span class=\"selector-class\">.set-top</span> <span class=\"selector-tag\">div</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">    <span class=\"attribute\">-moz-transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">    <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">    <span class=\"attribute\">-o-transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">3px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">113px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#0bf</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: -<span class=\"number\">3px</span> <span class=\"number\">5px</span> <span class=\"number\">6px</span> -<span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0,0,0,.5);</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">-webkit-linear-gradient</span>(left , rgba(48,182,209,0.99),<span class=\"built_in\">rgba</span>(43,70,191,0.99) <span class=\"number\">100%</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:first-of-type</span> <span class=\"selector-class\">.set-top</span>&gt;<span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-left</span>: <span class=\"number\">4px</span> solid <span class=\"number\">#31a4ce</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-right</span>: <span class=\"number\">4px</span> solid transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">4px</span> solid transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-top</span>: <span class=\"number\">4px</span> solid <span class=\"number\">#31a4ce</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:first-of-type</span> <span class=\"selector-class\">.set-top</span>&gt;<span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-left</span>: <span class=\"number\">4px</span> solid transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-right</span>: <span class=\"number\">4px</span> solid <span class=\"number\">#2f5ec3</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">4px</span> solid transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-top</span>: <span class=\"number\">4px</span> solid <span class=\"number\">#2f5ec3</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"MARKDOWN\"><figure class=\"iseeu highlight /markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: hexo置顶文章及样式美化</span><br><span class=\"line\">date: 2018-05-14 17:51:12</span><br><span class=\"line\">tags: - hexo</span><br><span class=\"line\">categories: - 技能簿</span><br><span class=\"line\">top: 100</span><br></pre></td></tr></table></figure></div>\n","site":{"data":{}},"excerpt":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>文章置顶功能实现, top值越高越在前。由于官方并未给出置顶功能, 所以要手动修改。<br><blockquote class=\"pullquote tip\"><p>sticky: 显示图钉样式<br>top: 置顶功能实现</p>\n</blockquote></p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>在Hexo生成首页HTML时， top值越高越在前，达到文章置顶功能。</p>","more":"<h2 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h2><p>找到<code>node_modules\\hexo-generator-index\\lib\\generator.js</code>文件。替换如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = <span class=\"keyword\">this</span>.config;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> posts = locals.posts;</span><br><span class=\"line\">    posts.data = posts.data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.top &amp;&amp; b.top) &#123; <span class=\"comment\">// 两篇文章top都有定义</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a.top == b.top) <span class=\"keyword\">return</span> b.date - a.date; <span class=\"comment\">// 若top值一样则按照文章日期降序排</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.top - a.top; <span class=\"comment\">// 否则按照top值降序排</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.top &amp;&amp; !b.top) &#123; <span class=\"comment\">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.date - a.date; <span class=\"comment\">// 都没定义按照文章日期降序排</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> paginationDir = config.pagination_dir || <span class=\"string\">'page'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">''</span>, posts, &#123;</span><br><span class=\"line\">    perPage: config.index_generator.per_page,</span><br><span class=\"line\">    layout: [<span class=\"string\">'index'</span>, <span class=\"string\">'archive'</span>],</span><br><span class=\"line\">    format: paginationDir + <span class=\"string\">'/%d/'</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      __index: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>找到<code>themes\\主题\\layout_macro\\post.swig</code>文件。在<code>POST BLOCK</code>添加如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"set-top\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>置顶<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>找到<code>themes\\主题\\source\\css_custom\\custom.styl</code>文件。添加如下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*置顶*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:not(</span><span class=\"selector-pseudo\">:first-of-type)</span> <span class=\"selector-class\">.post-block</span> <span class=\"selector-class\">.set-top</span> <span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">display</span>:none;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:last-of-type</span> <span class=\"selector-class\">.post-block</span> <span class=\"selector-class\">.set-top</span> <span class=\"selector-tag\">div</span>&#123;<span class=\"attribute\">display</span>:none;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:first-of-type</span> <span class=\"selector-class\">.post-block</span> <span class=\"selector-class\">.set-top</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: -<span class=\"number\">3px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: -<span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:first-of-type</span> <span class=\"selector-class\">.post-block</span> <span class=\"selector-class\">.set-top</span> <span class=\"selector-tag\">div</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">    <span class=\"attribute\">-moz-transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">    <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">    <span class=\"attribute\">-o-transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">3px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">113px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#0bf</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: -<span class=\"number\">3px</span> <span class=\"number\">5px</span> <span class=\"number\">6px</span> -<span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(0,0,0,.5);</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">-webkit-linear-gradient</span>(left , rgba(48,182,209,0.99),<span class=\"built_in\">rgba</span>(43,70,191,0.99) <span class=\"number\">100%</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:first-of-type</span> <span class=\"selector-class\">.set-top</span>&gt;<span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-left</span>: <span class=\"number\">4px</span> solid <span class=\"number\">#31a4ce</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-right</span>: <span class=\"number\">4px</span> solid transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">4px</span> solid transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-top</span>: <span class=\"number\">4px</span> solid <span class=\"number\">#31a4ce</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">article</span><span class=\"selector-pseudo\">:first-of-type</span> <span class=\"selector-class\">.set-top</span>&gt;<span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-left</span>: <span class=\"number\">4px</span> solid transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-right</span>: <span class=\"number\">4px</span> solid <span class=\"number\">#2f5ec3</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">4px</span> solid transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-top</span>: <span class=\"number\">4px</span> solid <span class=\"number\">#2f5ec3</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: hexo置顶文章及样式美化</span><br><span class=\"line\">date: 2018-05-14 17:51:12</span><br><span class=\"line\">tags: - hexo</span><br><span class=\"line\">categories: - 技能簿</span><br><span class=\"line\">top: 100</span><br></pre></td></tr></table></figure>"},{"layout":"[layout]","title":"路飞赏金飙至15亿，荣登五皇宝座，即将赶超白胡子！","author":"shamopoo","date":"2018-04-28T13:02:00.000Z","_content":"<div class=\"aplayer\" data-id=\"28211151\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"></div>\n\n<!-- more -->\n\n","source":"_posts/lufuy.md","raw":"layout: '[layout]'\ntitle: 路飞赏金飙至15亿，荣登五皇宝座，即将赶超白胡子！\ntags:\n  - 路飞\ncategories:\n  - 动漫簿\nauthor: shamopoo\ndate: 2018-04-28 21:02:00\n---\n<div class=\"aplayer\" data-id=\"28211151\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"></div>\n\n<!-- more -->\n\n","slug":"lufuy","published":1,"updated":"2019-05-15T08:03:03.612Z","comments":1,"photos":[],"link":"","_id":"cjvozd9yl000qkcvcpkai1ny4","content":"<div class=\"aplayer\" data-id=\"28211151\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"></div>\n\n<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"<div class=\"aplayer\" data-id=\"28211151\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"></div>","more":""},{"title":"原型链:prototype和__proto__区别","date":"2018-12-17T07:24:31.000Z","_content":"\n## 问题\n\n在wx交流群看到了一个关于原型链的题目，引起了我对原型链探索的兴趣。\n\n\n<samp>\n``` JAVASCRIPT\n    Object.prototype.a = 'a'\n    Function.prototype.a = 'b'\n    function person () {}\n    var peter = new person()\n    peter.a  // 😳 a or b\n``` \n</samp>\n\n<!-- more -->\n\n当时，我的理解如下：\n<samp>\n``` JAVASCRIPT\npeter  =>  __proto__  =>  pesron.prototype  => __proto__ => Object.prototype\nperson  =>  __proto__  =>  Function.prototype  => __proto__ => Object.prototype\n``` \n</samp>\n\n问题来了，proto是什么东西？\n\n[在javascript的世界里，一切皆为对象。每个实例对象（object ）都有一个私有属性（称之为__proto__）指向它的原型对象（prototype)。该原型对象也有一个自己的原型对象(__proto__) ，层层向上直到一个对象的原型对象为 null。根据定义，null 没有原型，并作为这个原型链中的最后一个环节。](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain)\n\n可以说，区别就是原型链是靠<code>——proto——</code>来链接的,共同点都是用来实现基于原型的继承。\n\n那么，下面的代码是为true:\n\n<samp>\n``` JAVASCRIPT\n// Object.creat() 除外\n obj.__proto__ === obj.constructor.prototype // true\n``` \n</samp>\n\n### 趁热打铁\n\n<samp>\n``` JAVASCRIPT\n\nFunction.__proto__ == Function.prototype // true\n\nObject.__proto__ == Object.prototype // false\n\nObject.__proto__ == Function.prototype // true\n\nFunction.prototype.__proto__ == Object.prototype // true\n\nObject.__proto__.__proto__ === Object.prototype.constructor.prototype // true\n\nObject.__proto__.prototype // undefined\n\nFunction.prototype.__proto__ == Object.prototype // true\n\n``` \n</samp>\n\n这时候，肯定会有点晕+_+，那祭出[原型链神图](https://moetu.fastmirror.org/images/2018/12/20/utf-8-FsA8_UozPiTrwf-G_TE8cR1-ktlj537435246c961e2c.jpg)。\n\n\n## 总结\n\n原型链到Object.prototype.——proto—— 结束，指向null。\n\nObject.create()创建的对象没有继承Object.prototype。\n\n原型链是靠——proto——来链接的，——proto——属性（原型）等于其构造函数的prototype\n属性。\n\n——proto——和prototype都是用来实现基于原型的继承。\n\n\n\n\n\n\n\n","source":"_posts/prototype.md","raw":"---\ntitle: '原型链:prototype和__proto__区别'\ndate: 2018-12-17 15:24:31\ntags:\n  - 原型链\ncategories:\n  - 技能簿      \n---\n\n## 问题\n\n在wx交流群看到了一个关于原型链的题目，引起了我对原型链探索的兴趣。\n\n\n<samp>\n``` JAVASCRIPT\n    Object.prototype.a = 'a'\n    Function.prototype.a = 'b'\n    function person () {}\n    var peter = new person()\n    peter.a  // 😳 a or b\n``` \n</samp>\n\n<!-- more -->\n\n当时，我的理解如下：\n<samp>\n``` JAVASCRIPT\npeter  =>  __proto__  =>  pesron.prototype  => __proto__ => Object.prototype\nperson  =>  __proto__  =>  Function.prototype  => __proto__ => Object.prototype\n``` \n</samp>\n\n问题来了，proto是什么东西？\n\n[在javascript的世界里，一切皆为对象。每个实例对象（object ）都有一个私有属性（称之为__proto__）指向它的原型对象（prototype)。该原型对象也有一个自己的原型对象(__proto__) ，层层向上直到一个对象的原型对象为 null。根据定义，null 没有原型，并作为这个原型链中的最后一个环节。](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain)\n\n可以说，区别就是原型链是靠<code>——proto——</code>来链接的,共同点都是用来实现基于原型的继承。\n\n那么，下面的代码是为true:\n\n<samp>\n``` JAVASCRIPT\n// Object.creat() 除外\n obj.__proto__ === obj.constructor.prototype // true\n``` \n</samp>\n\n### 趁热打铁\n\n<samp>\n``` JAVASCRIPT\n\nFunction.__proto__ == Function.prototype // true\n\nObject.__proto__ == Object.prototype // false\n\nObject.__proto__ == Function.prototype // true\n\nFunction.prototype.__proto__ == Object.prototype // true\n\nObject.__proto__.__proto__ === Object.prototype.constructor.prototype // true\n\nObject.__proto__.prototype // undefined\n\nFunction.prototype.__proto__ == Object.prototype // true\n\n``` \n</samp>\n\n这时候，肯定会有点晕+_+，那祭出[原型链神图](https://moetu.fastmirror.org/images/2018/12/20/utf-8-FsA8_UozPiTrwf-G_TE8cR1-ktlj537435246c961e2c.jpg)。\n\n\n## 总结\n\n原型链到Object.prototype.——proto—— 结束，指向null。\n\nObject.create()创建的对象没有继承Object.prototype。\n\n原型链是靠——proto——来链接的，——proto——属性（原型）等于其构造函数的prototype\n属性。\n\n——proto——和prototype都是用来实现基于原型的继承。\n\n\n\n\n\n\n\n","slug":"prototype","published":1,"updated":"2019-05-15T08:03:03.612Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvozd9yo000vkcvc8kfwrdy9","content":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>在wx交流群看到了一个关于原型链的题目，引起了我对原型链探索的兴趣。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"built_in\">Object</span>.prototype.a = <span class=\"string\">'a'</span>\n<span class=\"built_in\">Function</span>.prototype.a = <span class=\"string\">'b'</span>\n<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span> (<span class=\"params\"></span>) </span>{}\n<span class=\"keyword\">var</span> peter = <span class=\"keyword\">new</span> person()\npeter.a  <span class=\"comment\">// 😳 a or b</span>\n</code></pre>\n<p></p>\n<a id=\"more\"></a>\n<p>当时，我的理解如下：<br><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">peter  =&gt;  <span class=\"function\"><span class=\"params\">__proto__</span>  =&gt;</span>  pesron.prototype  =&gt; <span class=\"function\"><span class=\"params\">__proto__</span> =&gt;</span> <span class=\"built_in\">Object</span>.prototype\nperson  =&gt;  <span class=\"function\"><span class=\"params\">__proto__</span>  =&gt;</span>  <span class=\"built_in\">Function</span>.prototype  =&gt; <span class=\"function\"><span class=\"params\">__proto__</span> =&gt;</span> <span class=\"built_in\">Object</span>.prototype\n</code></pre>\n<p></p>\n<p>问题来了，proto是什么东西？</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\" target=\"_blank\" rel=\"noopener\">在javascript的世界里，一切皆为对象。每个实例对象（object ）都有一个私有属性（称之为<strong>proto</strong>）指向它的原型对象（prototype)。该原型对象也有一个自己的原型对象(<strong>proto</strong>) ，层层向上直到一个对象的原型对象为 null。根据定义，null 没有原型，并作为这个原型链中的最后一个环节。</a></p>\n<p>可以说，区别就是原型链是靠<code>——proto——</code>来链接的,共同点都是用来实现基于原型的继承。</p>\n<p>那么，下面的代码是为true:</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"comment\">// Object.creat() 除外</span>\n obj.__proto__ === obj.constructor.prototype <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"趁热打铁\"><a href=\"#趁热打铁\" class=\"headerlink\" title=\"趁热打铁\"></a>趁热打铁</h3><p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">\n<span class=\"built_in\">Function</span>.__proto__ == <span class=\"built_in\">Function</span>.prototype <span class=\"comment\">// true</span>\n\n<span class=\"built_in\">Object</span>.__proto__ == <span class=\"built_in\">Object</span>.prototype <span class=\"comment\">// false</span>\n\n<span class=\"built_in\">Object</span>.__proto__ == <span class=\"built_in\">Function</span>.prototype <span class=\"comment\">// true</span>\n\n<span class=\"built_in\">Function</span>.prototype.__proto__ == <span class=\"built_in\">Object</span>.prototype <span class=\"comment\">// true</span>\n\n<span class=\"built_in\">Object</span>.__proto__.__proto__ === <span class=\"built_in\">Object</span>.prototype.constructor.prototype <span class=\"comment\">// true</span>\n\n<span class=\"built_in\">Object</span>.__proto__.prototype <span class=\"comment\">// undefined</span>\n\n<span class=\"built_in\">Function</span>.prototype.__proto__ == <span class=\"built_in\">Object</span>.prototype <span class=\"comment\">// true</span>\n\n</code></pre>\n<p></p>\n<p>这时候，肯定会有点晕+_+，那祭出<a href=\"https://moetu.fastmirror.org/images/2018/12/20/utf-8-FsA8_UozPiTrwf-G_TE8cR1-ktlj537435246c961e2c.jpg\" target=\"_blank\" rel=\"noopener\">原型链神图</a>。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>原型链到Object.prototype.——proto—— 结束，指向null。</p>\n<p>Object.create()创建的对象没有继承Object.prototype。</p>\n<p>原型链是靠——proto——来链接的，——proto——属性（原型）等于其构造函数的prototype<br>属性。</p>\n<p>——proto——和prototype都是用来实现基于原型的继承。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>在wx交流群看到了一个关于原型链的题目，引起了我对原型链探索的兴趣。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"built_in\">Object</span>.prototype.a = <span class=\"string\">'a'</span>\n<span class=\"built_in\">Function</span>.prototype.a = <span class=\"string\">'b'</span>\n<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span> (<span class=\"params\"></span>) </span>{}\n<span class=\"keyword\">var</span> peter = <span class=\"keyword\">new</span> person()\npeter.a  <span class=\"comment\">// 😳 a or b</span>\n</code></pre>\n<p></p>","more":"<p>当时，我的理解如下：<br><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">peter  =&gt;  <span class=\"function\"><span class=\"params\">__proto__</span>  =&gt;</span>  pesron.prototype  =&gt; <span class=\"function\"><span class=\"params\">__proto__</span> =&gt;</span> <span class=\"built_in\">Object</span>.prototype\nperson  =&gt;  <span class=\"function\"><span class=\"params\">__proto__</span>  =&gt;</span>  <span class=\"built_in\">Function</span>.prototype  =&gt; <span class=\"function\"><span class=\"params\">__proto__</span> =&gt;</span> <span class=\"built_in\">Object</span>.prototype\n</code></pre>\n<p></p>\n<p>问题来了，proto是什么东西？</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\" target=\"_blank\" rel=\"noopener\">在javascript的世界里，一切皆为对象。每个实例对象（object ）都有一个私有属性（称之为<strong>proto</strong>）指向它的原型对象（prototype)。该原型对象也有一个自己的原型对象(<strong>proto</strong>) ，层层向上直到一个对象的原型对象为 null。根据定义，null 没有原型，并作为这个原型链中的最后一个环节。</a></p>\n<p>可以说，区别就是原型链是靠<code>——proto——</code>来链接的,共同点都是用来实现基于原型的继承。</p>\n<p>那么，下面的代码是为true:</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"comment\">// Object.creat() 除外</span>\n obj.__proto__ === obj.constructor.prototype <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"趁热打铁\"><a href=\"#趁热打铁\" class=\"headerlink\" title=\"趁热打铁\"></a>趁热打铁</h3><p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">\n<span class=\"built_in\">Function</span>.__proto__ == <span class=\"built_in\">Function</span>.prototype <span class=\"comment\">// true</span>\n\n<span class=\"built_in\">Object</span>.__proto__ == <span class=\"built_in\">Object</span>.prototype <span class=\"comment\">// false</span>\n\n<span class=\"built_in\">Object</span>.__proto__ == <span class=\"built_in\">Function</span>.prototype <span class=\"comment\">// true</span>\n\n<span class=\"built_in\">Function</span>.prototype.__proto__ == <span class=\"built_in\">Object</span>.prototype <span class=\"comment\">// true</span>\n\n<span class=\"built_in\">Object</span>.__proto__.__proto__ === <span class=\"built_in\">Object</span>.prototype.constructor.prototype <span class=\"comment\">// true</span>\n\n<span class=\"built_in\">Object</span>.__proto__.prototype <span class=\"comment\">// undefined</span>\n\n<span class=\"built_in\">Function</span>.prototype.__proto__ == <span class=\"built_in\">Object</span>.prototype <span class=\"comment\">// true</span>\n\n</code></pre>\n<p></p>\n<p>这时候，肯定会有点晕+_+，那祭出<a href=\"https://moetu.fastmirror.org/images/2018/12/20/utf-8-FsA8_UozPiTrwf-G_TE8cR1-ktlj537435246c961e2c.jpg\" target=\"_blank\" rel=\"noopener\">原型链神图</a>。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>原型链到Object.prototype.——proto—— 结束，指向null。</p>\n<p>Object.create()创建的对象没有继承Object.prototype。</p>\n<p>原型链是靠——proto——来链接的，——proto——属性（原型）等于其构造函数的prototype<br>属性。</p>\n<p>——proto——和prototype都是用来实现基于原型的继承。</p>"},{"title":"我的2018总结","date":"2018-12-19T02:18:34.000Z","top":2018,"_content":"\n按照惯例，是时候写年度总结了。回想起来，时间如白驹过隙，从大四到工作，从学校正式步入社会，特此记录一下。\n<!-- more -->\n\n## 毕业快乐\n\n上半年主要是毕业。为了毕业答辩，费了不少脑子。对论文绞尽脑汁，还请求女朋友帮忙，毕竟毕业要紧。\n四月份，辞职回南昌参加学校答辩，那时想，等我回来，从头再来。\n五月份，在宿舍白天搞博客，晚上搞论文。可以说，很好耍。五月底，答辩结束。第二天我坐飞机来到了重庆，见到了她。\n答辩告一段落了，终于毕业了，毕业快乐。\n\n## 上班，下班，买菜，做饭，最后洗碗。\n\n六月份，在学校接到了一个应聘前端电话，然后我去面试了，面试成功，办理入职，后来因为项目周期短，压力大，加班文化，我辞职了。\n八月份，来到了我司，无加班文化，mbp办公，下午茶，易相处的同事们。\n九月份，买了Kindle，可以在轻轨上看书，最重要的是，我们有猫了，它的名字叫[九十](https://twitter.com/shamopooo)，和我的花名一样，九十是只橘猫，九十小时候生了一场病，打了两天的点滴，弱小无助，但如今已经有五斤了，果然大橘为重。\n十月份，和女朋友去见了她家长，明年过年一定带回去。十月五号，女朋友的生日。在家里度过了一个开心难忘的生日。生日礼物送了oppo find x，颜值高，和她一样。\n十一月份，双十一剁手买了Akko键盘，iPad2018，小米闹钟。 女朋友买了个粉色的键盘，少女心。\n十二月份，带九十去打疫苗，九十出去还是有点怕生。第二针，背猫背包带九十去，第三针，在月底。\n\n## 念念不忘，必有回响。\n\n2019， [计划清单](https://blog.shamopoo.top/about)。\n\n\n\n\n\n\n\n","source":"_posts/summary-of-2018.md","raw":"---\ntitle: 我的2018总结\ndate: 2018-12-19 10:18:34\ntags:\n    - 2018\n    - 日常\ncategories:\n    - 日常簿\ntop: 2018\n---\n\n按照惯例，是时候写年度总结了。回想起来，时间如白驹过隙，从大四到工作，从学校正式步入社会，特此记录一下。\n<!-- more -->\n\n## 毕业快乐\n\n上半年主要是毕业。为了毕业答辩，费了不少脑子。对论文绞尽脑汁，还请求女朋友帮忙，毕竟毕业要紧。\n四月份，辞职回南昌参加学校答辩，那时想，等我回来，从头再来。\n五月份，在宿舍白天搞博客，晚上搞论文。可以说，很好耍。五月底，答辩结束。第二天我坐飞机来到了重庆，见到了她。\n答辩告一段落了，终于毕业了，毕业快乐。\n\n## 上班，下班，买菜，做饭，最后洗碗。\n\n六月份，在学校接到了一个应聘前端电话，然后我去面试了，面试成功，办理入职，后来因为项目周期短，压力大，加班文化，我辞职了。\n八月份，来到了我司，无加班文化，mbp办公，下午茶，易相处的同事们。\n九月份，买了Kindle，可以在轻轨上看书，最重要的是，我们有猫了，它的名字叫[九十](https://twitter.com/shamopooo)，和我的花名一样，九十是只橘猫，九十小时候生了一场病，打了两天的点滴，弱小无助，但如今已经有五斤了，果然大橘为重。\n十月份，和女朋友去见了她家长，明年过年一定带回去。十月五号，女朋友的生日。在家里度过了一个开心难忘的生日。生日礼物送了oppo find x，颜值高，和她一样。\n十一月份，双十一剁手买了Akko键盘，iPad2018，小米闹钟。 女朋友买了个粉色的键盘，少女心。\n十二月份，带九十去打疫苗，九十出去还是有点怕生。第二针，背猫背包带九十去，第三针，在月底。\n\n## 念念不忘，必有回响。\n\n2019， [计划清单](https://blog.shamopoo.top/about)。\n\n\n\n\n\n\n\n","slug":"summary-of-2018","published":1,"updated":"2019-05-15T08:03:03.613Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvozd9yq000zkcvci5eh8veq","content":"<p>按照惯例，是时候写年度总结了。回想起来，时间如白驹过隙，从大四到工作，从学校正式步入社会，特此记录一下。<br><a id=\"more\"></a></p>\n<h2 id=\"毕业快乐\"><a href=\"#毕业快乐\" class=\"headerlink\" title=\"毕业快乐\"></a>毕业快乐</h2><p>上半年主要是毕业。为了毕业答辩，费了不少脑子。对论文绞尽脑汁，还请求女朋友帮忙，毕竟毕业要紧。<br>四月份，辞职回南昌参加学校答辩，那时想，等我回来，从头再来。<br>五月份，在宿舍白天搞博客，晚上搞论文。可以说，很好耍。五月底，答辩结束。第二天我坐飞机来到了重庆，见到了她。<br>答辩告一段落了，终于毕业了，毕业快乐。</p>\n<h2 id=\"上班，下班，买菜，做饭，最后洗碗。\"><a href=\"#上班，下班，买菜，做饭，最后洗碗。\" class=\"headerlink\" title=\"上班，下班，买菜，做饭，最后洗碗。\"></a>上班，下班，买菜，做饭，最后洗碗。</h2><p>六月份，在学校接到了一个应聘前端电话，然后我去面试了，面试成功，办理入职，后来因为项目周期短，压力大，加班文化，我辞职了。<br>八月份，来到了我司，无加班文化，mbp办公，下午茶，易相处的同事们。<br>九月份，买了Kindle，可以在轻轨上看书，最重要的是，我们有猫了，它的名字叫<a href=\"https://twitter.com/shamopooo\" target=\"_blank\" rel=\"noopener\">九十</a>，和我的花名一样，九十是只橘猫，九十小时候生了一场病，打了两天的点滴，弱小无助，但如今已经有五斤了，果然大橘为重。<br>十月份，和女朋友去见了她家长，明年过年一定带回去。十月五号，女朋友的生日。在家里度过了一个开心难忘的生日。生日礼物送了oppo find x，颜值高，和她一样。<br>十一月份，双十一剁手买了Akko键盘，iPad2018，小米闹钟。 女朋友买了个粉色的键盘，少女心。<br>十二月份，带九十去打疫苗，九十出去还是有点怕生。第二针，背猫背包带九十去，第三针，在月底。</p>\n<h2 id=\"念念不忘，必有回响。\"><a href=\"#念念不忘，必有回响。\" class=\"headerlink\" title=\"念念不忘，必有回响。\"></a>念念不忘，必有回响。</h2><p>2019， <a href=\"https://blog.shamopoo.top/about\" target=\"_blank\" rel=\"noopener\">计划清单</a>。</p>\n","site":{"data":{}},"excerpt":"<p>按照惯例，是时候写年度总结了。回想起来，时间如白驹过隙，从大四到工作，从学校正式步入社会，特此记录一下。<br>","more":"</p>\n<h2 id=\"毕业快乐\"><a href=\"#毕业快乐\" class=\"headerlink\" title=\"毕业快乐\"></a>毕业快乐</h2><p>上半年主要是毕业。为了毕业答辩，费了不少脑子。对论文绞尽脑汁，还请求女朋友帮忙，毕竟毕业要紧。<br>四月份，辞职回南昌参加学校答辩，那时想，等我回来，从头再来。<br>五月份，在宿舍白天搞博客，晚上搞论文。可以说，很好耍。五月底，答辩结束。第二天我坐飞机来到了重庆，见到了她。<br>答辩告一段落了，终于毕业了，毕业快乐。</p>\n<h2 id=\"上班，下班，买菜，做饭，最后洗碗。\"><a href=\"#上班，下班，买菜，做饭，最后洗碗。\" class=\"headerlink\" title=\"上班，下班，买菜，做饭，最后洗碗。\"></a>上班，下班，买菜，做饭，最后洗碗。</h2><p>六月份，在学校接到了一个应聘前端电话，然后我去面试了，面试成功，办理入职，后来因为项目周期短，压力大，加班文化，我辞职了。<br>八月份，来到了我司，无加班文化，mbp办公，下午茶，易相处的同事们。<br>九月份，买了Kindle，可以在轻轨上看书，最重要的是，我们有猫了，它的名字叫<a href=\"https://twitter.com/shamopooo\" target=\"_blank\" rel=\"noopener\">九十</a>，和我的花名一样，九十是只橘猫，九十小时候生了一场病，打了两天的点滴，弱小无助，但如今已经有五斤了，果然大橘为重。<br>十月份，和女朋友去见了她家长，明年过年一定带回去。十月五号，女朋友的生日。在家里度过了一个开心难忘的生日。生日礼物送了oppo find x，颜值高，和她一样。<br>十一月份，双十一剁手买了Akko键盘，iPad2018，小米闹钟。 女朋友买了个粉色的键盘，少女心。<br>十二月份，带九十去打疫苗，九十出去还是有点怕生。第二针，背猫背包带九十去，第三针，在月底。</p>\n<h2 id=\"念念不忘，必有回响。\"><a href=\"#念念不忘，必有回响。\" class=\"headerlink\" title=\"念念不忘，必有回响。\"></a>念念不忘，必有回响。</h2><p>2019， <a href=\"https://blog.shamopoo.top/about\" target=\"_blank\" rel=\"noopener\">计划清单</a>。</p>"},{"title":"30 seconds of Javascript","date":"2018-12-21T03:44:39.000Z","_content":"\n在Gitgub上看见一个好玩的项目 [30 seconds of code](https://github.com/30-seconds/30-seconds-of-code#-adapter-1)，js真好玩。\n<!-- more -->\n\n## 🔌 适配\n\n### ary\n\n创建一个最多可以接受<code>n</code>个参数的函数。\n调用提供的函数，<code>fn</code>，最多n个参数。\n运用<code>Array.prototype.slice(0,n)</code>和展开运算符<code>...</code>\n\n<samp>\n``` JAVASCRIPT\nconst ary = (fn, n) => (...args) => fn(...args.slice(0, n));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nconst firstTwoMax = ary(Math.max, 2);\n[[2, 6, 'a'], [8, 4, 6], [10]].map(x => firstTwoMax(...x));  // [6, 8, 10]\n``` \n</samp>\n\n### over\n\n创建一个函数，该函数使用它接收的参数调用每个提供的函数并返回结果。\n使用<code>Array.prototype.map()</code>和<code>Function.prototype.apply()</code>将每个函数应用于给定的参数。\n\n<samp>\n``` JAVASCRIPT\nconst ary = (fn, n) => (...args) => fn(...args.slice(0, n));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nconst firstTwoMax = ary(Math.max, 2);\n[[2, 6, 'a'], [8, 4, 6], [10]].map(x => firstTwoMax(...x));  // [6, 8, 10]\n``` \n</samp>\n\n### unary\n\n创建只接受一个参数的函数。\n调用提供的函数<code>fn</code>, 只返回第一个参数。\n\n<samp>\n``` JAVASCRIPT\nconst unary = fn => val => fn(val);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\n['6', '8', '10'].map(unary(parseInt)); // [6, 8, 10]\n``` \n</samp>\n\n\n## 📚 Array\n\n### all\n\n如果为集合中的所有元素提供的函数返回<code>true</code>，则返回<code>true</code>，否则返回<code>false</code>。\n使用<code>Array.prototype.every()</code>来测试集合中的所有元素是否基于<code>fn</code>返回<code>true</code>。 省略第二个参数<code>fn</code>，使用<code>Boolean</code>作为默认值。\n\n<samp>\n``` JAVASCRIPT\nconst all = (arr, fn = Boolean) => arr.every(fn);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nall([4, 2, 3], x => x > 1); // true\nall([1, 2, 3]); // true\n``` \n</samp>\n\n\n### allEqual\n\n判断数组的所有元素是否相等。\n使用<code>Array.prototype.every()</code>判断数组的所有元素是否与第一个元素相等。\n\n<samp>\n``` JAVASCRIPT\nconst allEqual = arr => arr.every(val => val === arr[0]);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nallEqual([1, 2, 3, 4, 5, 6]); // false\nallEqual([1, 1, 1, 1]); // true\n``` \n</samp>\n\n\n### some\n\n如果为集合中的至少一个元素提供的函数返回<code>true</code>，则返回<code>true</code>，否则返回<code>false</code>。\n使用<code>Array.prototype.some()</code>来测试集合中的所有元素是否基于<code>fn</code>返回<code>true</code>。 省略第二个参数<code>fn</code>，使用<code>Boolean</code>作为默认值。\n\n<samp>\n``` JAVASCRIPT\nconst any = (arr, fn = Boolean) => arr.some(fn);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nany([0, 1, 2, 0], x => x >= 2); // true\nany([0, 0, 1, 0]); // true\n``` \n</samp>\n\n### bifurcate\n\n将值拆分为两组。 如果过滤器中的元素是真的，则集合中的对应元素属于第一组; 否则，它属于第二组。\n使用<code>Array.prototype.reduce()</code>和<code>Array.prototype.push()</code>根据过滤器向数组添加元素。\n\n<samp>\n``` JAVASCRIPT\nconst bifurcate = (arr, filter) =>\n  arr.reduce((acc, val, i) => (acc[filter[i] ? 0 : 1].push(val), acc), [[], []]);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nbifurcate(['beep', 'boop', 'foo', 'bar'], [true, true, false, true]); \n// [ ['beep', 'boop', 'bar'], ['foo'] ]\n``` \n</samp>\n\n### chunk\n\n将数组分割为指定大小的数组。\n使用<code>Array.from()</code>创建一个新数组，该数组符合指定大小。 使用<code>Array.prototype.slice()</code>将新数组的每个元素映射到一个大小的数组中。 如果原始数组无法均匀分割，则最终的数组包含其余元素。\n\n<samp>\n``` JAVASCRIPT\nconst chunk = (arr, size) =>\n  Array.from({ length: Math.ceil(arr.length / size) }, (v, i) =>\n    arr.slice(i * size, i * size + size)\n  );\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nchunk([1, 2, 3, 4, 5], 2); // [[1,2],[3,4],[5]]\n``` \n</samp>\n\n\n### compact\n\n使用<code>Array.prototype.filter()</code> 从数组中删除<code> (false, null, 0, \"\", undefined, and NaN)</code> 。\n\n<samp>\n``` JAVASCRIPT\nconst compact = arr => arr.filter(Boolean);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ncompact([0, 1, false, 2, '', 3, 'a', 'e' * 23, NaN, 's', 34]); \n// [ 1, 2, 3, 'a', 's', 34 ]\n``` \n</samp>\n\n\n### countBy\n\n基于给定函数对数组的元素进行分组，并返回每个组中元素的数量。\n使用<code>Array.prototype.map()</code>将数组的值映射到函数或属性名称。 使用<code>Array.prototype.reduce()</code>创建一个对象，其中的键是从映射结果生成的。\n\n<samp>\n``` JAVASCRIPT\nconst countBy = (arr, fn) =>\n  arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val) => {\n    acc[val] = (acc[val] || 0) + 1;\n    return acc;\n  }, {});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ncountBy([6.1, 4.2, 6.3], Math.floor); // {4: 1, 6: 2}\ncountBy(['one', 'two', 'three'], 'length'); // {3: 2, 5: 1}\n``` \n</samp>\n\n### countOccurrences\n\n计算数组的元素出现的次数。\n使用<code>Array.prototype.reduce()</code>递增器计算数组每个元素出现的次数。\n\n<samp>\n``` JAVASCRIPT\nconst countOccurrences = (arr, val) => \narr.reduce((a, v) => (v === val ? a + 1 : a), 0);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ncountOccurrences([1, 1, 2, 1, 2, 3], 1); // 3\n``` \n</samp>\n\n### deepFlatten\n\n深度展平一维数组。\n运用递归。使用<code>Array.prototype.concat()</code>、空数组<code>[]</code>和展开运算符\n<code>...</code>去展平数组。递归地展平数组的每个元素。\n\n<samp>\n``` JAVASCRIPT\nconst deepFlatten = arr => \n[].concat(...arr.map(v => (Array.isArray(v) ? deepFlatten(v) : v)));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ndeepFlatten([1, [2], [[3], 4], 5]); // [1,2,3,4,5]\n[1, [2], [[3], 4], 5].toString().split(',') //  ✅ [1,2,3,4,5]\n``` \n</samp>\n\n\n### filterNonUnique\n过滤掉数组中的非唯一值。\n使用<code>Array.prototype.filter()</code>用于仅包含唯一值的数组。\n\n<samp>\n``` JAVASCRIPT\nconst filterNonUnique = arr => \narr.filter(i => arr.indexOf(i) === arr.lastIndexOf(i));\n``` \n</samp>\n\n<samp>\n``` JAVASCRIPT\nfilterNonUnique([1, 2, 2, 3, 4, 4, 5]); // [1, 3, 5]\n``` \n</samp>\n\n### forEachRight\n\n从数组的最后一个元素开始，为每个数组元素执行一次提供的函数。\n使用<code>Array.prototype.slice(0)</code>克隆给定的数组，\n使用<code>Array.prototype.reverse()</code>来反转它，\n使用<code>Array.prototype.forEach()/<code>迭代反向数组。\n\n<samp>\n``` JAVASCRIPT\nconst forEachRight = (arr, callback) =>\n  arr\n    .slice(0)\n    .reverse()\n    .forEach(callback);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nforEachRight([1, 2, 3, 4], val => console.log(val)); // '4', '3', '2', '1'\n``` \n</samp>\n\n### indexOfAll\n\n返回数组中val的所有索引。 如果val不存在，则返回[]。\n使用<code>Array.prototype.reduce()</code>循环元素并存储匹配元素的索引，返回索引数组。\n\n<samp>\n``` JAVASCRIPT\nconst indexOfAll = (arr, val) =>\narr.reduce((acc, el, i) => (el === val ? [...acc, i] : acc), []);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nindexOfAll([1, 2, 3, 1, 2, 3], 1); // [0,3]\nindexOfAll([1, 2, 3], 4); // []\n``` \n</samp>\n\n### initialize2DArray\n\n初始化给定宽度和高度的2D数组。\n使用<code>Array.prototype.map()</code>生成<code>h</code>行，其中每个行都是一个大小为<code>w</code>的初始化的新数组。 如果<code>val</code>未传值，则默认为null。\n\n<samp>\n``` JAVASCRIPT\nconst initialize2DArray = (w, h, val = null) =>\n  Array.from({ length: h }).map(() => Array.from({ length: w }).fill(val));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ninitialize2DArray(2, 2, 0); // [[0,0], [0,0]]\ninitialize2DArray(1, 2); // [[null], [null]]\n``` \n</samp>\n\n\n### initializeArrayWithValues\n\n使用指定的值初始化并填充数组。\n使用<code>Array(n)</code>创建所需长度的数组，<code>fill(v)</code>填充。 如果<code>val</code>未传，默认值为0。\n\n<samp>\n``` JAVASCRIPT\nconst initializeArrayWithValues = (n, val = 0) => Array(n).fill(val);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ninitializeArrayWithValues(5, 2); // [2, 2, 2, 2, 2]\n``` \n</samp>\n\n### mapObject\n\n使用函数将数组的值映射到对象，其中键 - 值对由原始值作为键和映射值组成。\n使用匿名内部函数作用域来声明未定义的内存空间，使用闭包来存储返回值。 \n使用新数组来存储数组，其中包含函数的数据集，并使用逗号运算符返回第二步，\n而无需从一个上下文移动到另一个上下文（由于闭包和操作顺序）。\n\n<samp>\n``` JAVASCRIPT\nconst mapObject = (arr, fn) =>\n  (a => (\n    (a = [arr, arr.map(fn)]), \n    a[0].reduce((acc, val, ind) => ((acc[val] = a[1][ind]), acc), {})\n  ))();\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nconst squareIt = arr => mapObject(arr, a => a * a);\nsquareIt([1, 2, 3]); // { 1: 1, 2: 4, 3: 9 }\n``` \n</samp>\n\n\n### similarity\n\n返回两个数组中都出现的元素数组。\n使用<code>Array.prototype.filter()</code>过滤不属于数组的值，使用<code>Array.prototype.includes</code>判断。\n\n<samp>\n``` JAVASCRIPT\nconst similarity = (arr, values) => arr.filter(v => values.includes(v));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nsimilarity([1, 2, 3], [1, 2, 4]); // [1, 2]\n``` \n</samp>\n\n### union\n\n返回两个数组中任何一个中只存在一次元素的数组。\n\n使用<code>...</code>a和b的所有值创建一个Set并用<code>Array.from()</code>转换为数组。\n\n<samp>\n``` JAVASCRIPT\nconst union = (a, b) => Array.from(new Set([...a, ...b]));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nunion([1, 2, 3], [4, 3, 2]); // [1,2,3,4]\n``` \n</samp>\n\n\n## 🌐 Browser\n\n### detectDeviceType\n\n检测网站是否在移动设备或台式机/笔记本电脑中打开。\n使用正则表达式测试<code>navigator.userAgent</code>属性，以确定设备是移动设备还是台式机/笔记本电脑。\n\n<samp>\n``` JAVASCRIPT\nconst detectDeviceType = () =>\n  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test\n  (navigator.userAgent)\n  ? 'Mobile'\n  : 'Desktop';\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ndetectDeviceType();  // Desktop\n``` \n</samp>\n\n### elementContains\n\n如果父元素包含子元素，则返回<code>true</code>，否则返回<code>false</code>。\n先检查父元素与子元素不是同一元素，再使用<code>parent.contains(child)</code>检查父元素是否包含子元素。\n\n<samp>\n``` JAVASCRIPT\nconst elementContains = (parent, child) => \nparent !== child && parent.contains(child);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\n_query (tag){\n  return document.querySelector(tag)\n}\nelementContains(_query('head'),  _query('title'));  // true\nelementContains(_query('body'),  _query('body')); // false\n``` \n</samp>\n\n### getScrollPosition\n\n返回当前页面的滚动位置。\n如果已定义，则使用<code>pageXOffset</code>和<code>pageYOffset</code>，否则使用<code>scrollLeft</code>和<code>scrollTop</code>。 您可以省略<code>el</code>以使用窗口的默认值。\n\n<samp>\n``` JAVASCRIPT\nconst getScrollPosition = (el = window) => ({\n  x: el.pageXOffset !== undefined ? el.pageXOffset : el.scrollLeft,\n  y: el.pageYOffset !== undefined ? el.pageYOffset : el.scrollTop\n});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ngetScrollPosition(); // {x: 0, y: 200}\n``` \n</samp>\n\n### getStyle\n\n返回指定元素的CSS规则的值。\n使用<code>Window.getComputedStyle()</code>获取指定元素的CSS规则的值。\n\n<samp>\n``` JAVASCRIPT\nconst getStyle = (el, ruleName) => getComputedStyle(el)[ruleName];\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ngetStyle(document.querySelector('p'), 'font-size'); // '16px'\n``` \n</samp>\n\n### hasClass\n\n如果元素具有指定的类，则返回<code>true</code>，否则返回<code>false</code>。\n使用<code>element.classList.contains()</code>检查元素是否具有指定的类。\n\n<samp>\n``` JAVASCRIPT\nconst hasClass = (el, className) => el.classList.contains(className);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nhasClass(document.querySelector('p.special'), 'special'); // true\n``` \n</samp>\n\n## ⏱️ Date\n\n### formatDuration\n\n返回给定毫秒数的可读格式。\n\n将<code>ms</code>除以适当的值，以获得白天，小时，分钟，秒和毫秒的可读值。\n使用 <code>Object.entries()<code>和<code>Array.prototype.filter()<code>仅保留非零值。\n使用<code>Array.prototype.map()<code>为每个值创建字符串。 \n使用<code>String.prototype.join(',')<code>将值组合成一个字符串。\n\n<samp>\n``` JAVASCRIPT\nconst formatDuration = ms => {\n  if (ms < 0) ms = -ms;\n  const time = {\n    day: Math.floor(ms / 86400000),\n    hour: Math.floor(ms / 3600000) % 24,\n    minute: Math.floor(ms / 60000) % 60,\n    second: Math.floor(ms / 1000) % 60,\n    millisecond: Math.floor(ms) % 1000\n  };\n  return Object.entries(time)\n    .filter(val => val[1] !== 0)\n    .map(([key, val]) => `${val} ${key}${val !== 1 ? 's' : ''}`)\n    .join(', ');\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nformatDuration(1001); // '1 second, 1 millisecond'\nformatDuration(34325055574); \n// '397 days, 6 hours, 44 minutes, 15 seconds, 574 milliseconds'\n``` \n</samp>\n\n## 🎛️ Function\n\n### debounce\n\n<samp>\n``` JAVASCRIPT\nconst debounce = (fn, ms = 0) => {\n  let timeoutId;\n  return function(...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(this, args), ms);\n  };\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nwindow.addEventListener(\n  'resize',\n  debounce(() => {\n    console.log(window.innerWidth);\n    console.log(window.innerHeight);\n  }, 250)\n); // Will log the window dimensions at most every 250ms\n``` \n</samp>\n\n### throttle\n\n<samp>\n``` JAVASCRIPT\nconst throttle = (fn, wait) => {\n  let inThrottle, lastFn, lastTime;\n  return function() {\n    const context = this,\n      args = arguments;\n    if (!inThrottle) {\n      fn.apply(context, args);\n      lastTime = Date.now();\n      inThrottle = true;\n    } else {\n      clearTimeout(lastFn);\n      lastFn = setTimeout(function() {\n        if (Date.now() - lastTime >= wait) {\n          fn.apply(context, args);\n          lastTime = Date.now();\n        }\n      }, Math.max(wait - (Date.now() - lastTime), 0));\n    }\n  };\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nwindow.addEventListener(\n  'resize',\n  throttle(function(evt) {\n    console.log(window.innerWidth);\n    console.log(window.innerHeight);\n  }, 250)\n); // Will log the window dimensions at most every 250ms\n``` \n</samp>\n\n## ➗ Math\n\n### distance\n\n返回两点之间的距离。\n使用<code>Math.hypot()</code>计算两点之间的欧几里德距离。\n\n<samp>\n``` JAVASCRIPT\nconst distance = (x0, y0, x1, y1) => Math.hypot(x1 - x0, y1 - y0);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ndistance(1, 1, 2, 3); // 2.23606797749979\n``` \n</samp>\n\n### factorial\n\n\n\n使用递归计算数字的阶乘。\n如果<code>n</code>小于或等于1，则返回1。否则，返回<code>n</code>的乘积和<code>n  -  1</code>的阶乘。如果<code>n</code>是负数，则抛出异常。\n\n<samp>\n``` JAVASCRIPT\nconst factorial = n =>\n  n < 0\n    ? (() => {\n      throw new TypeError('Negative numbers are not allowed!');\n    })()\n    : n <= 1\n      ? 1\n      : n * factorial(n - 1);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nfactorial(6); // 720\n``` \n</samp>\n\n### gcd\n\n计算两个或多个数字/数组之间的最大公约数。\n内部<code>_gcd</code>函数使用递归计算返回<code>y</code>的<code>GCD</code>和除法<code>x / y</code>的余数。\n\n<samp>\n``` JAVASCRIPT\nconst gcd = (...arr) => {\n  const _gcd = (x, y) => (!y ? x : gcd(y, x % y));\n  return [...arr].reduce((a, b) => _gcd(a, b));\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ngcd(8, 36); // 4\ngcd(...[12, 8, 32]); // 4\n``` \n</samp>\n\n\n### randomIntArrayInRange\n\n返回指定范围内的n个随机整数的数组。\n使用<code>Array.from()</code>创建一个特定长度的数组，<code>Math.random()</code>生成一个范围内的随机数，使用<code>Math.floor</code>向下取整。\n\n<samp>\n``` JAVASCRIPT\nconst randomIntArrayInRange = (min, max, n = 1) =>\n  Array.from({ length: n }, () => \n  Math.floor(Math.random() * (max - min + 1)) + min);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nrandomIntArrayInRange(12, 35, 10); // [ 34, 14, 27, 17, 30, 27, 20, 26, 21, 14 ]\n``` \n</samp>\n\n\n### sum\n\n返回数组的总和。\n使用<code>Array.prototype.reduce()</code>将每个值累加，使用值0初始化。\n\n<samp>\n``` JAVASCRIPT\nconst sum = (...arr) => [...arr].reduce((acc, val) => acc + val, 0);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nsum(1, 2, 3, 4); // 10\nsum(...[1, 2, 3, 4]); // 10\n``` \n</samp>\n\n## 🗃️ Object\n\n### deepClone\n\n创建对象的深克隆。\n使用<code>Object.assign()</code>和空对象<code>({})</code>创建原始的浅层克隆。\n使用<code>Object.keys()</code>和<code>Array.prototype.forEach()</code>来确定需要深度克隆的键值对。\n\n<samp>\n``` JAVASCRIPT\nconst deepClone = obj => {\n  let clone = Object.assign({}, obj);\n  Object.keys(clone).forEach(\n    key => (clone[key] = typeof obj[key] === 'object'\n     ? deepClone(obj[key]) \n     : obj[key])\n  );\n  return Array.isArray(obj) \n  ? (clone.length = obj.length) && Array.from(clone) \n  : clone;\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nconst a = { foo: 'bar', obj: { a: 1, b: 2 } };\nconst b = deepClone(a); // a !== b, a.obj !== b.obj\n``` \n</samp>\n\n### flattenObject\n\n展平对象。\n使用<code>Object.keys(obj)</code>与<code>Array.prototype.reduce()</code>结合将每个叶节点转换为展平路径节点。\n\n<samp>\n``` JAVASCRIPT\nconst flattenObject = (obj, prefix = '') =>\n  Object.keys(obj).reduce((acc, k) => {\n    const pre = prefix.length ? prefix + '.' : '';\n    if (typeof obj[k] === 'object') {\n    Object.assign(acc, flattenObject(obj[k], pre + k))\n    };\n    else acc[pre + k] = obj[k];\n    return acc;\n  }, {});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nflattenObject({ a: { b: { c: 1 } }, d: 1 }); // { 'a.b.c': 1, d: 1 }\n``` \n</samp>\n\n\n### mapKeys\n\n\n创建一个对象，其中包含通过为每个键运行提供的函数生成的键以及与提供的对象相同的值。\n使用<code>Object.keys(obj)</code>迭代对象的键。 \n使用</code>Array.prototype.reduce()</code>使用<code>fn</code>创建具有相同值和映射键的新对象。\n\n<samp>\n``` JAVASCRIPT\nconst mapKeys = (obj, fn) =>\n  Object.keys(obj).reduce((acc, k) => {\n    acc[fn(obj[k], k, obj)] = obj[k];\n    return acc;\n  }, {});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nmapKeys({ a: 1, b: 2 }, (val, key) => key + val); // { a1: 1, b2: 2 }\n``` \n</samp>\n\n\n### mapValues\n\n使用与提供的对象相同的键创建对象，并通过为每个值运行提供的函数生成值。\n使用<code>Object.keys(obj)</code>迭代对象的键。\n使用<code>Array.prototype.reduce()</code>。\n使用<code>fn</code>创建具有相同键和映射值的新对象。\n\n<samp>\n``` JAVASCRIPT\nconst mapValues = (obj, fn) =>\n  Object.keys(obj).reduce((acc, k) => {\n    acc[k] = fn(obj[k], k, obj);\n    return acc;\n  }, {});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nconst users = {\n  fred: { user: 'fred', age: 40 },\n  pebbles: { user: 'pebbles', age: 1 }\n};\nmapValues(users, u => u.age); // { fred: 40, pebbles: 1 }\n``` \n</samp>\n\n### objectFromPairs\n\n根据给定的键值对创建对象。\n使用<code>Array.prototype.reduce()</code>创建对象。\n\n<samp>\n``` JAVASCRIPT\nconst objectFromPairs = arr => \narr.reduce((a, [key, val]) => ((a[key] = val), a), {});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nobjectFromPairs([['a', 1], ['b', 2]]); // {a: 1, b: 2}\n``` \n</samp>\n\n### objectToPairs\n\n从对象创建键值对数组的数组。\n使用<code>Object.keys()</code>和<code>Array.prototype.map()</code>迭代对象的键并生成数组。\n\n<samp>\n``` JAVASCRIPT\nconst objectToPairs = obj => Object.keys(obj).map(k => [k, obj[k]]);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nobjectToPairs({ a: 1, b: 2 }); // [ ['a', 1], ['b', 2] ]\n``` \n</samp>\n\n## 📜 String\n\n### fromCamelCase\n\n转换字符串。\n使用<code>String.prototype.replace()</code>删除下划线，连字符和空格，并将单词转换为<code>camelcase</code>。 省略第二个参数以使用<code>_</code>的默认分隔符。\n\n<samp>\n``` JAVASCRIPT\nconst fromCamelCase = (str, separator = '_') =>\n  str\n    .replace(/([a-z\\d])([A-Z])/g, '$1' + separator + '$2')\n    .replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + separator + '$2')\n    .toLowerCase();\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nfromCamelCase('someDatabaseFieldName', ' '); \n// 'some database field name'\nfromCamelCase('someLabelThatNeedsToBeCamelized', '-'); \n// 'some-label-that-needs-to-be-camelized'\nfromCamelCase('someJavascriptProperty', '_'); \n// 'some_javascript_property'\n``` \n</samp>\n\n\n### isAnagram\n\n检查字符串是否是另一个字符串的字谜。\n使用<code>String.toLowerCase()</code>和<code>String.prototype.replace()</code>删除不必要的字符。\n使用<code>String.prototype.split('')</code>和<code>Array.prototype.sort()</code>和<code>Array.prototype.join('')</code>检查是否相等。\n\n<samp>\n``` JAVASCRIPT\nconst isAnagram = (str1, str2) => {\n  const normalize = str =>\n    str\n      .toLowerCase()\n      .replace(/[^a-z0-9]/gi, '')\n      .split('')\n      .sort()\n      .join('');\n  return normalize(str1) === normalize(str2);\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nisAnagram('iceman', 'cinema'); // true\n``` \n</samp>\n\n\n### mask\n\n使用指定的掩码字符替换除最后一个字符数之外的所有字符。\n使用<code>String.prototype.slice()</code>来获取将保持未屏蔽的字符部分。\n使用<code>String.padStart()</code>以掩码字符填充字符串的开头，直到原始长度。\n\n<samp>\n``` JAVASCRIPT\nconst mask = (cc, num = 4, mask = '*') => \n`${cc}`.slice(-num).padStart(`${cc}`.length, mask);\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nmask(1234567890); // '******7890'\nmask(1234567890, 3); // '*******890'\nmask(1234567890, -4, '$'); // '$$$$567890'\n``` \n</samp>\n\n### reverseString\n\n反转字符串。\n使用展开运算符<code>(...)</code>和</code>Array.prototype.reverse()</code>来反转字符串中字符的顺序。\n使用<code>String.prototype.join('')</code>转换成字符串。\n\n<samp>\n``` JAVASCRIPT\nconst reverseString = str => [...str].reverse().join('');\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nreverseString('foobar'); // 'raboof'\n``` \n</samp>\n\n\n### stripHTMLTags\n\n从字符串中删除<code>HTML / XML</code>标记。\n使用正则表达式从字符串中删除<code>HTML / XML</code>标记。\n\n<samp>\n``` JAVASCRIPT\nconst stripHTMLTags = str => str.replace(/<[^>]*>/g, '');\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nstripHTMLTags('<p><em>lorem</em> <em>ipsum</em></p>'); \n// 'lorem ipsum'\n``` \n</samp>\n\n### toKebabCase\n\n字符串转换为烤肉串案例。\n将字符串分解为单词并将它们组合添加<code> - </code>使用正则表达式作为分隔符。\n\n<samp>\n``` JAVASCRIPT\nconst toKebabCase = str =>\n  str &&\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map(x => x.toLowerCase())\n    .join('-');\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ntoKebabCase('camelCase'); // 'camel-case'\ntoKebabCase('some text'); // 'some-text'\ntoKebabCase('some-mixed_string With spaces_underscores-and-hyphens'); \n// 'some-mixed-string-with-spaces-underscores-and-hyphens'\ntoKebabCase('AllThe-small Things'); \n// \"all-the-small-things\"\ntoKebabCase('IAmListeningToFMWhileLoadingDifferentURLOnMyBrowser'); \n// \"i-am-listening-to-fm-while-loading-different-url-on-my-browser\"\n``` \n</samp>\n\n\n### words\n\n将给定的字符串转换为单词数组。\n使用<code>String.prototype.split()</code>与默认为非字母作为正则使用，以转换为字符串数组。 \n使用<code>Array.prototype.filter()</code>删除任何空字符串。 默认的正则为<code>/[^a-zA-Z-]+/</code>。\n\n<samp>\n``` JAVASCRIPT\nconst words = (str, pattern = /[^a-zA-Z-]+/) => \nstr.split(pattern).filter(Boolean);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nwords('I love javaScript!!'); // [\"I\", \"love\", \"javaScript\"]\nwords('python, javaScript & coffee'); // [\"python\", \"javaScript\", \"coffee\"]\n``` \n</samp>\n\n## 🔧 Utility\n\n### RGBToHex\n\n将<code>RGB</code>值转换为颜色代码。\n使用按位左移运算符<code>(<<)</code>和<code>toString(16)</code>。\n使用<code>String.padStart(6，'0')</code>将RGB参数转换为十六进制字符串，以获得6位十六进制值。\n\n<samp>\n``` JAVASCRIPT\nconst RGBToHex = (r, g, b) =>\n((r << 16) + (g << 8) + b).toString(16).padStart(6, '0');\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nRGBToHex(255, 165, 1); // 'ffa501'\n``` \n</samp>\n\n### toDecimalMarkc\n\n使用<code>toLocaleString()</code>将浮点运算转换为Decimal标记形式——使用逗号分隔字符串与数字。\n\n<samp>\n``` JAVASCRIPT\nconst toDecimalMark = num => num.toLocaleString('en-US');\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ntoDecimalMark(12305030388.9087); // \"12,305,030,388.909\"\n``` \n</samp>\n\n\n### validateNumber\n\n如果给定值是数字，则返回true，否则返回false。\n使用<code>!isNaN()</code>与<code>parseFloat()</code>判断参数是否为数字。 \n使用<code>isFinite()</code>判断数字是否有限数字。 \n使用<code>Number()</code>判断类型是否为数字。\n\n<samp>\n``` JAVASCRIPT\nconst validateNumber = n => \n!isNaN(parseFloat(n)) && isFinite(n) && Number(n) == n;\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nvalidateNumber('10'); // true\n``` \n</samp>\n\n\n### yesNo\n\n如果字符串是<code>y / yes</code>则返回<code>true</code>，如果字符串是<code>n / no</code>，则返回<code>false</code>。\n使用<code>RegExp.test()</code>检查字符串是否为<code>y / yes</code>或<code>n / no</code>。 <code>def</code>默认为no。\n\n<samp>\n``` JAVASCRIPT\nconst yesNo = (val, def = false) =>\n  /^(y|yes)$/i.test(val) ? true : /^(n|no)$/i.test(val) ? false : def;\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nyesNo('Y'); // true\nyesNo('yes'); // true\nyesNo('No'); // false\nyesNo('Foo', true); // true\n``` \n</samp>\n","source":"_posts/30-seconds-of-js.md","raw":"---\ntitle: 30 seconds of Javascript\ndate: 2018-12-21 11:44:39\ntags:\n    - js\n    - 30secondsofcode\ncategories:\n    - 技能薄      \n---\n\n在Gitgub上看见一个好玩的项目 [30 seconds of code](https://github.com/30-seconds/30-seconds-of-code#-adapter-1)，js真好玩。\n<!-- more -->\n\n## 🔌 适配\n\n### ary\n\n创建一个最多可以接受<code>n</code>个参数的函数。\n调用提供的函数，<code>fn</code>，最多n个参数。\n运用<code>Array.prototype.slice(0,n)</code>和展开运算符<code>...</code>\n\n<samp>\n``` JAVASCRIPT\nconst ary = (fn, n) => (...args) => fn(...args.slice(0, n));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nconst firstTwoMax = ary(Math.max, 2);\n[[2, 6, 'a'], [8, 4, 6], [10]].map(x => firstTwoMax(...x));  // [6, 8, 10]\n``` \n</samp>\n\n### over\n\n创建一个函数，该函数使用它接收的参数调用每个提供的函数并返回结果。\n使用<code>Array.prototype.map()</code>和<code>Function.prototype.apply()</code>将每个函数应用于给定的参数。\n\n<samp>\n``` JAVASCRIPT\nconst ary = (fn, n) => (...args) => fn(...args.slice(0, n));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nconst firstTwoMax = ary(Math.max, 2);\n[[2, 6, 'a'], [8, 4, 6], [10]].map(x => firstTwoMax(...x));  // [6, 8, 10]\n``` \n</samp>\n\n### unary\n\n创建只接受一个参数的函数。\n调用提供的函数<code>fn</code>, 只返回第一个参数。\n\n<samp>\n``` JAVASCRIPT\nconst unary = fn => val => fn(val);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\n['6', '8', '10'].map(unary(parseInt)); // [6, 8, 10]\n``` \n</samp>\n\n\n## 📚 Array\n\n### all\n\n如果为集合中的所有元素提供的函数返回<code>true</code>，则返回<code>true</code>，否则返回<code>false</code>。\n使用<code>Array.prototype.every()</code>来测试集合中的所有元素是否基于<code>fn</code>返回<code>true</code>。 省略第二个参数<code>fn</code>，使用<code>Boolean</code>作为默认值。\n\n<samp>\n``` JAVASCRIPT\nconst all = (arr, fn = Boolean) => arr.every(fn);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nall([4, 2, 3], x => x > 1); // true\nall([1, 2, 3]); // true\n``` \n</samp>\n\n\n### allEqual\n\n判断数组的所有元素是否相等。\n使用<code>Array.prototype.every()</code>判断数组的所有元素是否与第一个元素相等。\n\n<samp>\n``` JAVASCRIPT\nconst allEqual = arr => arr.every(val => val === arr[0]);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nallEqual([1, 2, 3, 4, 5, 6]); // false\nallEqual([1, 1, 1, 1]); // true\n``` \n</samp>\n\n\n### some\n\n如果为集合中的至少一个元素提供的函数返回<code>true</code>，则返回<code>true</code>，否则返回<code>false</code>。\n使用<code>Array.prototype.some()</code>来测试集合中的所有元素是否基于<code>fn</code>返回<code>true</code>。 省略第二个参数<code>fn</code>，使用<code>Boolean</code>作为默认值。\n\n<samp>\n``` JAVASCRIPT\nconst any = (arr, fn = Boolean) => arr.some(fn);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nany([0, 1, 2, 0], x => x >= 2); // true\nany([0, 0, 1, 0]); // true\n``` \n</samp>\n\n### bifurcate\n\n将值拆分为两组。 如果过滤器中的元素是真的，则集合中的对应元素属于第一组; 否则，它属于第二组。\n使用<code>Array.prototype.reduce()</code>和<code>Array.prototype.push()</code>根据过滤器向数组添加元素。\n\n<samp>\n``` JAVASCRIPT\nconst bifurcate = (arr, filter) =>\n  arr.reduce((acc, val, i) => (acc[filter[i] ? 0 : 1].push(val), acc), [[], []]);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nbifurcate(['beep', 'boop', 'foo', 'bar'], [true, true, false, true]); \n// [ ['beep', 'boop', 'bar'], ['foo'] ]\n``` \n</samp>\n\n### chunk\n\n将数组分割为指定大小的数组。\n使用<code>Array.from()</code>创建一个新数组，该数组符合指定大小。 使用<code>Array.prototype.slice()</code>将新数组的每个元素映射到一个大小的数组中。 如果原始数组无法均匀分割，则最终的数组包含其余元素。\n\n<samp>\n``` JAVASCRIPT\nconst chunk = (arr, size) =>\n  Array.from({ length: Math.ceil(arr.length / size) }, (v, i) =>\n    arr.slice(i * size, i * size + size)\n  );\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nchunk([1, 2, 3, 4, 5], 2); // [[1,2],[3,4],[5]]\n``` \n</samp>\n\n\n### compact\n\n使用<code>Array.prototype.filter()</code> 从数组中删除<code> (false, null, 0, \"\", undefined, and NaN)</code> 。\n\n<samp>\n``` JAVASCRIPT\nconst compact = arr => arr.filter(Boolean);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ncompact([0, 1, false, 2, '', 3, 'a', 'e' * 23, NaN, 's', 34]); \n// [ 1, 2, 3, 'a', 's', 34 ]\n``` \n</samp>\n\n\n### countBy\n\n基于给定函数对数组的元素进行分组，并返回每个组中元素的数量。\n使用<code>Array.prototype.map()</code>将数组的值映射到函数或属性名称。 使用<code>Array.prototype.reduce()</code>创建一个对象，其中的键是从映射结果生成的。\n\n<samp>\n``` JAVASCRIPT\nconst countBy = (arr, fn) =>\n  arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val) => {\n    acc[val] = (acc[val] || 0) + 1;\n    return acc;\n  }, {});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ncountBy([6.1, 4.2, 6.3], Math.floor); // {4: 1, 6: 2}\ncountBy(['one', 'two', 'three'], 'length'); // {3: 2, 5: 1}\n``` \n</samp>\n\n### countOccurrences\n\n计算数组的元素出现的次数。\n使用<code>Array.prototype.reduce()</code>递增器计算数组每个元素出现的次数。\n\n<samp>\n``` JAVASCRIPT\nconst countOccurrences = (arr, val) => \narr.reduce((a, v) => (v === val ? a + 1 : a), 0);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ncountOccurrences([1, 1, 2, 1, 2, 3], 1); // 3\n``` \n</samp>\n\n### deepFlatten\n\n深度展平一维数组。\n运用递归。使用<code>Array.prototype.concat()</code>、空数组<code>[]</code>和展开运算符\n<code>...</code>去展平数组。递归地展平数组的每个元素。\n\n<samp>\n``` JAVASCRIPT\nconst deepFlatten = arr => \n[].concat(...arr.map(v => (Array.isArray(v) ? deepFlatten(v) : v)));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ndeepFlatten([1, [2], [[3], 4], 5]); // [1,2,3,4,5]\n[1, [2], [[3], 4], 5].toString().split(',') //  ✅ [1,2,3,4,5]\n``` \n</samp>\n\n\n### filterNonUnique\n过滤掉数组中的非唯一值。\n使用<code>Array.prototype.filter()</code>用于仅包含唯一值的数组。\n\n<samp>\n``` JAVASCRIPT\nconst filterNonUnique = arr => \narr.filter(i => arr.indexOf(i) === arr.lastIndexOf(i));\n``` \n</samp>\n\n<samp>\n``` JAVASCRIPT\nfilterNonUnique([1, 2, 2, 3, 4, 4, 5]); // [1, 3, 5]\n``` \n</samp>\n\n### forEachRight\n\n从数组的最后一个元素开始，为每个数组元素执行一次提供的函数。\n使用<code>Array.prototype.slice(0)</code>克隆给定的数组，\n使用<code>Array.prototype.reverse()</code>来反转它，\n使用<code>Array.prototype.forEach()/<code>迭代反向数组。\n\n<samp>\n``` JAVASCRIPT\nconst forEachRight = (arr, callback) =>\n  arr\n    .slice(0)\n    .reverse()\n    .forEach(callback);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nforEachRight([1, 2, 3, 4], val => console.log(val)); // '4', '3', '2', '1'\n``` \n</samp>\n\n### indexOfAll\n\n返回数组中val的所有索引。 如果val不存在，则返回[]。\n使用<code>Array.prototype.reduce()</code>循环元素并存储匹配元素的索引，返回索引数组。\n\n<samp>\n``` JAVASCRIPT\nconst indexOfAll = (arr, val) =>\narr.reduce((acc, el, i) => (el === val ? [...acc, i] : acc), []);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nindexOfAll([1, 2, 3, 1, 2, 3], 1); // [0,3]\nindexOfAll([1, 2, 3], 4); // []\n``` \n</samp>\n\n### initialize2DArray\n\n初始化给定宽度和高度的2D数组。\n使用<code>Array.prototype.map()</code>生成<code>h</code>行，其中每个行都是一个大小为<code>w</code>的初始化的新数组。 如果<code>val</code>未传值，则默认为null。\n\n<samp>\n``` JAVASCRIPT\nconst initialize2DArray = (w, h, val = null) =>\n  Array.from({ length: h }).map(() => Array.from({ length: w }).fill(val));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ninitialize2DArray(2, 2, 0); // [[0,0], [0,0]]\ninitialize2DArray(1, 2); // [[null], [null]]\n``` \n</samp>\n\n\n### initializeArrayWithValues\n\n使用指定的值初始化并填充数组。\n使用<code>Array(n)</code>创建所需长度的数组，<code>fill(v)</code>填充。 如果<code>val</code>未传，默认值为0。\n\n<samp>\n``` JAVASCRIPT\nconst initializeArrayWithValues = (n, val = 0) => Array(n).fill(val);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ninitializeArrayWithValues(5, 2); // [2, 2, 2, 2, 2]\n``` \n</samp>\n\n### mapObject\n\n使用函数将数组的值映射到对象，其中键 - 值对由原始值作为键和映射值组成。\n使用匿名内部函数作用域来声明未定义的内存空间，使用闭包来存储返回值。 \n使用新数组来存储数组，其中包含函数的数据集，并使用逗号运算符返回第二步，\n而无需从一个上下文移动到另一个上下文（由于闭包和操作顺序）。\n\n<samp>\n``` JAVASCRIPT\nconst mapObject = (arr, fn) =>\n  (a => (\n    (a = [arr, arr.map(fn)]), \n    a[0].reduce((acc, val, ind) => ((acc[val] = a[1][ind]), acc), {})\n  ))();\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nconst squareIt = arr => mapObject(arr, a => a * a);\nsquareIt([1, 2, 3]); // { 1: 1, 2: 4, 3: 9 }\n``` \n</samp>\n\n\n### similarity\n\n返回两个数组中都出现的元素数组。\n使用<code>Array.prototype.filter()</code>过滤不属于数组的值，使用<code>Array.prototype.includes</code>判断。\n\n<samp>\n``` JAVASCRIPT\nconst similarity = (arr, values) => arr.filter(v => values.includes(v));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nsimilarity([1, 2, 3], [1, 2, 4]); // [1, 2]\n``` \n</samp>\n\n### union\n\n返回两个数组中任何一个中只存在一次元素的数组。\n\n使用<code>...</code>a和b的所有值创建一个Set并用<code>Array.from()</code>转换为数组。\n\n<samp>\n``` JAVASCRIPT\nconst union = (a, b) => Array.from(new Set([...a, ...b]));\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nunion([1, 2, 3], [4, 3, 2]); // [1,2,3,4]\n``` \n</samp>\n\n\n## 🌐 Browser\n\n### detectDeviceType\n\n检测网站是否在移动设备或台式机/笔记本电脑中打开。\n使用正则表达式测试<code>navigator.userAgent</code>属性，以确定设备是移动设备还是台式机/笔记本电脑。\n\n<samp>\n``` JAVASCRIPT\nconst detectDeviceType = () =>\n  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test\n  (navigator.userAgent)\n  ? 'Mobile'\n  : 'Desktop';\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ndetectDeviceType();  // Desktop\n``` \n</samp>\n\n### elementContains\n\n如果父元素包含子元素，则返回<code>true</code>，否则返回<code>false</code>。\n先检查父元素与子元素不是同一元素，再使用<code>parent.contains(child)</code>检查父元素是否包含子元素。\n\n<samp>\n``` JAVASCRIPT\nconst elementContains = (parent, child) => \nparent !== child && parent.contains(child);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\n_query (tag){\n  return document.querySelector(tag)\n}\nelementContains(_query('head'),  _query('title'));  // true\nelementContains(_query('body'),  _query('body')); // false\n``` \n</samp>\n\n### getScrollPosition\n\n返回当前页面的滚动位置。\n如果已定义，则使用<code>pageXOffset</code>和<code>pageYOffset</code>，否则使用<code>scrollLeft</code>和<code>scrollTop</code>。 您可以省略<code>el</code>以使用窗口的默认值。\n\n<samp>\n``` JAVASCRIPT\nconst getScrollPosition = (el = window) => ({\n  x: el.pageXOffset !== undefined ? el.pageXOffset : el.scrollLeft,\n  y: el.pageYOffset !== undefined ? el.pageYOffset : el.scrollTop\n});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ngetScrollPosition(); // {x: 0, y: 200}\n``` \n</samp>\n\n### getStyle\n\n返回指定元素的CSS规则的值。\n使用<code>Window.getComputedStyle()</code>获取指定元素的CSS规则的值。\n\n<samp>\n``` JAVASCRIPT\nconst getStyle = (el, ruleName) => getComputedStyle(el)[ruleName];\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ngetStyle(document.querySelector('p'), 'font-size'); // '16px'\n``` \n</samp>\n\n### hasClass\n\n如果元素具有指定的类，则返回<code>true</code>，否则返回<code>false</code>。\n使用<code>element.classList.contains()</code>检查元素是否具有指定的类。\n\n<samp>\n``` JAVASCRIPT\nconst hasClass = (el, className) => el.classList.contains(className);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nhasClass(document.querySelector('p.special'), 'special'); // true\n``` \n</samp>\n\n## ⏱️ Date\n\n### formatDuration\n\n返回给定毫秒数的可读格式。\n\n将<code>ms</code>除以适当的值，以获得白天，小时，分钟，秒和毫秒的可读值。\n使用 <code>Object.entries()<code>和<code>Array.prototype.filter()<code>仅保留非零值。\n使用<code>Array.prototype.map()<code>为每个值创建字符串。 \n使用<code>String.prototype.join(',')<code>将值组合成一个字符串。\n\n<samp>\n``` JAVASCRIPT\nconst formatDuration = ms => {\n  if (ms < 0) ms = -ms;\n  const time = {\n    day: Math.floor(ms / 86400000),\n    hour: Math.floor(ms / 3600000) % 24,\n    minute: Math.floor(ms / 60000) % 60,\n    second: Math.floor(ms / 1000) % 60,\n    millisecond: Math.floor(ms) % 1000\n  };\n  return Object.entries(time)\n    .filter(val => val[1] !== 0)\n    .map(([key, val]) => `${val} ${key}${val !== 1 ? 's' : ''}`)\n    .join(', ');\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nformatDuration(1001); // '1 second, 1 millisecond'\nformatDuration(34325055574); \n// '397 days, 6 hours, 44 minutes, 15 seconds, 574 milliseconds'\n``` \n</samp>\n\n## 🎛️ Function\n\n### debounce\n\n<samp>\n``` JAVASCRIPT\nconst debounce = (fn, ms = 0) => {\n  let timeoutId;\n  return function(...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(this, args), ms);\n  };\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nwindow.addEventListener(\n  'resize',\n  debounce(() => {\n    console.log(window.innerWidth);\n    console.log(window.innerHeight);\n  }, 250)\n); // Will log the window dimensions at most every 250ms\n``` \n</samp>\n\n### throttle\n\n<samp>\n``` JAVASCRIPT\nconst throttle = (fn, wait) => {\n  let inThrottle, lastFn, lastTime;\n  return function() {\n    const context = this,\n      args = arguments;\n    if (!inThrottle) {\n      fn.apply(context, args);\n      lastTime = Date.now();\n      inThrottle = true;\n    } else {\n      clearTimeout(lastFn);\n      lastFn = setTimeout(function() {\n        if (Date.now() - lastTime >= wait) {\n          fn.apply(context, args);\n          lastTime = Date.now();\n        }\n      }, Math.max(wait - (Date.now() - lastTime), 0));\n    }\n  };\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nwindow.addEventListener(\n  'resize',\n  throttle(function(evt) {\n    console.log(window.innerWidth);\n    console.log(window.innerHeight);\n  }, 250)\n); // Will log the window dimensions at most every 250ms\n``` \n</samp>\n\n## ➗ Math\n\n### distance\n\n返回两点之间的距离。\n使用<code>Math.hypot()</code>计算两点之间的欧几里德距离。\n\n<samp>\n``` JAVASCRIPT\nconst distance = (x0, y0, x1, y1) => Math.hypot(x1 - x0, y1 - y0);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ndistance(1, 1, 2, 3); // 2.23606797749979\n``` \n</samp>\n\n### factorial\n\n\n\n使用递归计算数字的阶乘。\n如果<code>n</code>小于或等于1，则返回1。否则，返回<code>n</code>的乘积和<code>n  -  1</code>的阶乘。如果<code>n</code>是负数，则抛出异常。\n\n<samp>\n``` JAVASCRIPT\nconst factorial = n =>\n  n < 0\n    ? (() => {\n      throw new TypeError('Negative numbers are not allowed!');\n    })()\n    : n <= 1\n      ? 1\n      : n * factorial(n - 1);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nfactorial(6); // 720\n``` \n</samp>\n\n### gcd\n\n计算两个或多个数字/数组之间的最大公约数。\n内部<code>_gcd</code>函数使用递归计算返回<code>y</code>的<code>GCD</code>和除法<code>x / y</code>的余数。\n\n<samp>\n``` JAVASCRIPT\nconst gcd = (...arr) => {\n  const _gcd = (x, y) => (!y ? x : gcd(y, x % y));\n  return [...arr].reduce((a, b) => _gcd(a, b));\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ngcd(8, 36); // 4\ngcd(...[12, 8, 32]); // 4\n``` \n</samp>\n\n\n### randomIntArrayInRange\n\n返回指定范围内的n个随机整数的数组。\n使用<code>Array.from()</code>创建一个特定长度的数组，<code>Math.random()</code>生成一个范围内的随机数，使用<code>Math.floor</code>向下取整。\n\n<samp>\n``` JAVASCRIPT\nconst randomIntArrayInRange = (min, max, n = 1) =>\n  Array.from({ length: n }, () => \n  Math.floor(Math.random() * (max - min + 1)) + min);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nrandomIntArrayInRange(12, 35, 10); // [ 34, 14, 27, 17, 30, 27, 20, 26, 21, 14 ]\n``` \n</samp>\n\n\n### sum\n\n返回数组的总和。\n使用<code>Array.prototype.reduce()</code>将每个值累加，使用值0初始化。\n\n<samp>\n``` JAVASCRIPT\nconst sum = (...arr) => [...arr].reduce((acc, val) => acc + val, 0);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nsum(1, 2, 3, 4); // 10\nsum(...[1, 2, 3, 4]); // 10\n``` \n</samp>\n\n## 🗃️ Object\n\n### deepClone\n\n创建对象的深克隆。\n使用<code>Object.assign()</code>和空对象<code>({})</code>创建原始的浅层克隆。\n使用<code>Object.keys()</code>和<code>Array.prototype.forEach()</code>来确定需要深度克隆的键值对。\n\n<samp>\n``` JAVASCRIPT\nconst deepClone = obj => {\n  let clone = Object.assign({}, obj);\n  Object.keys(clone).forEach(\n    key => (clone[key] = typeof obj[key] === 'object'\n     ? deepClone(obj[key]) \n     : obj[key])\n  );\n  return Array.isArray(obj) \n  ? (clone.length = obj.length) && Array.from(clone) \n  : clone;\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nconst a = { foo: 'bar', obj: { a: 1, b: 2 } };\nconst b = deepClone(a); // a !== b, a.obj !== b.obj\n``` \n</samp>\n\n### flattenObject\n\n展平对象。\n使用<code>Object.keys(obj)</code>与<code>Array.prototype.reduce()</code>结合将每个叶节点转换为展平路径节点。\n\n<samp>\n``` JAVASCRIPT\nconst flattenObject = (obj, prefix = '') =>\n  Object.keys(obj).reduce((acc, k) => {\n    const pre = prefix.length ? prefix + '.' : '';\n    if (typeof obj[k] === 'object') {\n    Object.assign(acc, flattenObject(obj[k], pre + k))\n    };\n    else acc[pre + k] = obj[k];\n    return acc;\n  }, {});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nflattenObject({ a: { b: { c: 1 } }, d: 1 }); // { 'a.b.c': 1, d: 1 }\n``` \n</samp>\n\n\n### mapKeys\n\n\n创建一个对象，其中包含通过为每个键运行提供的函数生成的键以及与提供的对象相同的值。\n使用<code>Object.keys(obj)</code>迭代对象的键。 \n使用</code>Array.prototype.reduce()</code>使用<code>fn</code>创建具有相同值和映射键的新对象。\n\n<samp>\n``` JAVASCRIPT\nconst mapKeys = (obj, fn) =>\n  Object.keys(obj).reduce((acc, k) => {\n    acc[fn(obj[k], k, obj)] = obj[k];\n    return acc;\n  }, {});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nmapKeys({ a: 1, b: 2 }, (val, key) => key + val); // { a1: 1, b2: 2 }\n``` \n</samp>\n\n\n### mapValues\n\n使用与提供的对象相同的键创建对象，并通过为每个值运行提供的函数生成值。\n使用<code>Object.keys(obj)</code>迭代对象的键。\n使用<code>Array.prototype.reduce()</code>。\n使用<code>fn</code>创建具有相同键和映射值的新对象。\n\n<samp>\n``` JAVASCRIPT\nconst mapValues = (obj, fn) =>\n  Object.keys(obj).reduce((acc, k) => {\n    acc[k] = fn(obj[k], k, obj);\n    return acc;\n  }, {});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nconst users = {\n  fred: { user: 'fred', age: 40 },\n  pebbles: { user: 'pebbles', age: 1 }\n};\nmapValues(users, u => u.age); // { fred: 40, pebbles: 1 }\n``` \n</samp>\n\n### objectFromPairs\n\n根据给定的键值对创建对象。\n使用<code>Array.prototype.reduce()</code>创建对象。\n\n<samp>\n``` JAVASCRIPT\nconst objectFromPairs = arr => \narr.reduce((a, [key, val]) => ((a[key] = val), a), {});\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nobjectFromPairs([['a', 1], ['b', 2]]); // {a: 1, b: 2}\n``` \n</samp>\n\n### objectToPairs\n\n从对象创建键值对数组的数组。\n使用<code>Object.keys()</code>和<code>Array.prototype.map()</code>迭代对象的键并生成数组。\n\n<samp>\n``` JAVASCRIPT\nconst objectToPairs = obj => Object.keys(obj).map(k => [k, obj[k]]);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nobjectToPairs({ a: 1, b: 2 }); // [ ['a', 1], ['b', 2] ]\n``` \n</samp>\n\n## 📜 String\n\n### fromCamelCase\n\n转换字符串。\n使用<code>String.prototype.replace()</code>删除下划线，连字符和空格，并将单词转换为<code>camelcase</code>。 省略第二个参数以使用<code>_</code>的默认分隔符。\n\n<samp>\n``` JAVASCRIPT\nconst fromCamelCase = (str, separator = '_') =>\n  str\n    .replace(/([a-z\\d])([A-Z])/g, '$1' + separator + '$2')\n    .replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + separator + '$2')\n    .toLowerCase();\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nfromCamelCase('someDatabaseFieldName', ' '); \n// 'some database field name'\nfromCamelCase('someLabelThatNeedsToBeCamelized', '-'); \n// 'some-label-that-needs-to-be-camelized'\nfromCamelCase('someJavascriptProperty', '_'); \n// 'some_javascript_property'\n``` \n</samp>\n\n\n### isAnagram\n\n检查字符串是否是另一个字符串的字谜。\n使用<code>String.toLowerCase()</code>和<code>String.prototype.replace()</code>删除不必要的字符。\n使用<code>String.prototype.split('')</code>和<code>Array.prototype.sort()</code>和<code>Array.prototype.join('')</code>检查是否相等。\n\n<samp>\n``` JAVASCRIPT\nconst isAnagram = (str1, str2) => {\n  const normalize = str =>\n    str\n      .toLowerCase()\n      .replace(/[^a-z0-9]/gi, '')\n      .split('')\n      .sort()\n      .join('');\n  return normalize(str1) === normalize(str2);\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nisAnagram('iceman', 'cinema'); // true\n``` \n</samp>\n\n\n### mask\n\n使用指定的掩码字符替换除最后一个字符数之外的所有字符。\n使用<code>String.prototype.slice()</code>来获取将保持未屏蔽的字符部分。\n使用<code>String.padStart()</code>以掩码字符填充字符串的开头，直到原始长度。\n\n<samp>\n``` JAVASCRIPT\nconst mask = (cc, num = 4, mask = '*') => \n`${cc}`.slice(-num).padStart(`${cc}`.length, mask);\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nmask(1234567890); // '******7890'\nmask(1234567890, 3); // '*******890'\nmask(1234567890, -4, '$'); // '$$$$567890'\n``` \n</samp>\n\n### reverseString\n\n反转字符串。\n使用展开运算符<code>(...)</code>和</code>Array.prototype.reverse()</code>来反转字符串中字符的顺序。\n使用<code>String.prototype.join('')</code>转换成字符串。\n\n<samp>\n``` JAVASCRIPT\nconst reverseString = str => [...str].reverse().join('');\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nreverseString('foobar'); // 'raboof'\n``` \n</samp>\n\n\n### stripHTMLTags\n\n从字符串中删除<code>HTML / XML</code>标记。\n使用正则表达式从字符串中删除<code>HTML / XML</code>标记。\n\n<samp>\n``` JAVASCRIPT\nconst stripHTMLTags = str => str.replace(/<[^>]*>/g, '');\n};\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nstripHTMLTags('<p><em>lorem</em> <em>ipsum</em></p>'); \n// 'lorem ipsum'\n``` \n</samp>\n\n### toKebabCase\n\n字符串转换为烤肉串案例。\n将字符串分解为单词并将它们组合添加<code> - </code>使用正则表达式作为分隔符。\n\n<samp>\n``` JAVASCRIPT\nconst toKebabCase = str =>\n  str &&\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map(x => x.toLowerCase())\n    .join('-');\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ntoKebabCase('camelCase'); // 'camel-case'\ntoKebabCase('some text'); // 'some-text'\ntoKebabCase('some-mixed_string With spaces_underscores-and-hyphens'); \n// 'some-mixed-string-with-spaces-underscores-and-hyphens'\ntoKebabCase('AllThe-small Things'); \n// \"all-the-small-things\"\ntoKebabCase('IAmListeningToFMWhileLoadingDifferentURLOnMyBrowser'); \n// \"i-am-listening-to-fm-while-loading-different-url-on-my-browser\"\n``` \n</samp>\n\n\n### words\n\n将给定的字符串转换为单词数组。\n使用<code>String.prototype.split()</code>与默认为非字母作为正则使用，以转换为字符串数组。 \n使用<code>Array.prototype.filter()</code>删除任何空字符串。 默认的正则为<code>/[^a-zA-Z-]+/</code>。\n\n<samp>\n``` JAVASCRIPT\nconst words = (str, pattern = /[^a-zA-Z-]+/) => \nstr.split(pattern).filter(Boolean);\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nwords('I love javaScript!!'); // [\"I\", \"love\", \"javaScript\"]\nwords('python, javaScript & coffee'); // [\"python\", \"javaScript\", \"coffee\"]\n``` \n</samp>\n\n## 🔧 Utility\n\n### RGBToHex\n\n将<code>RGB</code>值转换为颜色代码。\n使用按位左移运算符<code>(<<)</code>和<code>toString(16)</code>。\n使用<code>String.padStart(6，'0')</code>将RGB参数转换为十六进制字符串，以获得6位十六进制值。\n\n<samp>\n``` JAVASCRIPT\nconst RGBToHex = (r, g, b) =>\n((r << 16) + (g << 8) + b).toString(16).padStart(6, '0');\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nRGBToHex(255, 165, 1); // 'ffa501'\n``` \n</samp>\n\n### toDecimalMarkc\n\n使用<code>toLocaleString()</code>将浮点运算转换为Decimal标记形式——使用逗号分隔字符串与数字。\n\n<samp>\n``` JAVASCRIPT\nconst toDecimalMark = num => num.toLocaleString('en-US');\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\ntoDecimalMark(12305030388.9087); // \"12,305,030,388.909\"\n``` \n</samp>\n\n\n### validateNumber\n\n如果给定值是数字，则返回true，否则返回false。\n使用<code>!isNaN()</code>与<code>parseFloat()</code>判断参数是否为数字。 \n使用<code>isFinite()</code>判断数字是否有限数字。 \n使用<code>Number()</code>判断类型是否为数字。\n\n<samp>\n``` JAVASCRIPT\nconst validateNumber = n => \n!isNaN(parseFloat(n)) && isFinite(n) && Number(n) == n;\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nvalidateNumber('10'); // true\n``` \n</samp>\n\n\n### yesNo\n\n如果字符串是<code>y / yes</code>则返回<code>true</code>，如果字符串是<code>n / no</code>，则返回<code>false</code>。\n使用<code>RegExp.test()</code>检查字符串是否为<code>y / yes</code>或<code>n / no</code>。 <code>def</code>默认为no。\n\n<samp>\n``` JAVASCRIPT\nconst yesNo = (val, def = false) =>\n  /^(y|yes)$/i.test(val) ? true : /^(n|no)$/i.test(val) ? false : def;\n``` \n</samp>\n\n🌰栗子：\n\n<samp>\n``` JAVASCRIPT\nyesNo('Y'); // true\nyesNo('yes'); // true\nyesNo('No'); // false\nyesNo('Foo', true); // true\n``` \n</samp>\n","slug":"30-seconds-of-js","published":1,"updated":"2019-05-15T08:03:03.609Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvozda44001zkcvc9kyrd6s2","content":"<p>在Gitgub上看见一个好玩的项目 <a href=\"https://github.com/30-seconds/30-seconds-of-code#-adapter-1\" target=\"_blank\" rel=\"noopener\">30 seconds of code</a>，js真好玩。<br><a id=\"more\"></a></p>\n<h2 id=\"🔌-适配\"><a href=\"#🔌-适配\" class=\"headerlink\" title=\"🔌 适配\"></a>🔌 适配</h2><h3 id=\"ary\"><a href=\"#ary\" class=\"headerlink\" title=\"ary\"></a>ary</h3><p>创建一个最多可以接受<code>n</code>个参数的函数。<br>调用提供的函数，<code>fn</code>，最多n个参数。<br>运用<code>Array.prototype.slice(0,n)</code>和展开运算符<code>…</code></p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> ary = <span class=\"function\">(<span class=\"params\">fn, n</span>) =&gt;</span> (...args) =&gt; fn(...args.slice(<span class=\"number\">0</span>, n));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> firstTwoMax = ary(<span class=\"built_in\">Math</span>.max, <span class=\"number\">2</span>);\n[[<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"string\">'a'</span>], [<span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>], [<span class=\"number\">10</span>]].map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> firstTwoMax(...x));  <span class=\"comment\">// [6, 8, 10]</span>\n</code></pre>\n<p></p>\n<h3 id=\"over\"><a href=\"#over\" class=\"headerlink\" title=\"over\"></a>over</h3><p>创建一个函数，该函数使用它接收的参数调用每个提供的函数并返回结果。<br>使用<code>Array.prototype.map()</code>和<code>Function.prototype.apply()</code>将每个函数应用于给定的参数。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> ary = <span class=\"function\">(<span class=\"params\">fn, n</span>) =&gt;</span> (...args) =&gt; fn(...args.slice(<span class=\"number\">0</span>, n));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> firstTwoMax = ary(<span class=\"built_in\">Math</span>.max, <span class=\"number\">2</span>);\n[[<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"string\">'a'</span>], [<span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>], [<span class=\"number\">10</span>]].map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> firstTwoMax(...x));  <span class=\"comment\">// [6, 8, 10]</span>\n</code></pre>\n<p></p>\n<h3 id=\"unary\"><a href=\"#unary\" class=\"headerlink\" title=\"unary\"></a>unary</h3><p>创建只接受一个参数的函数。<br>调用提供的函数<code>fn</code>, 只返回第一个参数。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> unary = <span class=\"function\"><span class=\"params\">fn</span> =&gt;</span> val =&gt; fn(val);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">[<span class=\"string\">'6'</span>, <span class=\"string\">'8'</span>, <span class=\"string\">'10'</span>].map(unary(<span class=\"built_in\">parseInt</span>)); <span class=\"comment\">// [6, 8, 10]</span>\n</code></pre>\n<p></p>\n<h2 id=\"📚-Array\"><a href=\"#📚-Array\" class=\"headerlink\" title=\"📚 Array\"></a>📚 Array</h2><h3 id=\"all\"><a href=\"#all\" class=\"headerlink\" title=\"all\"></a>all</h3><p>如果为集合中的所有元素提供的函数返回<code>true</code>，则返回<code>true</code>，否则返回<code>false</code>。<br>使用<code>Array.prototype.every()</code>来测试集合中的所有元素是否基于<code>fn</code>返回<code>true</code>。 省略第二个参数<code>fn</code>，使用<code>Boolean</code>作为默认值。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> all = <span class=\"function\">(<span class=\"params\">arr, fn = <span class=\"built_in\">Boolean</span></span>) =&gt;</span> arr.every(fn);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">all([<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], x =&gt; x &gt; <span class=\"number\">1</span>); <span class=\"comment\">// true</span>\nall([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"allEqual\"><a href=\"#allEqual\" class=\"headerlink\" title=\"allEqual\"></a>allEqual</h3><p>判断数组的所有元素是否相等。<br>使用<code>Array.prototype.every()</code>判断数组的所有元素是否与第一个元素相等。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> allEqual = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> arr.every(<span class=\"function\"><span class=\"params\">val</span> =&gt;</span> val === arr[<span class=\"number\">0</span>]);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">allEqual([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]); <span class=\"comment\">// false</span>\nallEqual([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>]); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"some\"><a href=\"#some\" class=\"headerlink\" title=\"some\"></a>some</h3><p>如果为集合中的至少一个元素提供的函数返回<code>true</code>，则返回<code>true</code>，否则返回<code>false</code>。<br>使用<code>Array.prototype.some()</code>来测试集合中的所有元素是否基于<code>fn</code>返回<code>true</code>。 省略第二个参数<code>fn</code>，使用<code>Boolean</code>作为默认值。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> any = <span class=\"function\">(<span class=\"params\">arr, fn = <span class=\"built_in\">Boolean</span></span>) =&gt;</span> arr.some(fn);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">any([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>], x =&gt; x &gt;= <span class=\"number\">2</span>); <span class=\"comment\">// true</span>\nany([<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>]); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"bifurcate\"><a href=\"#bifurcate\" class=\"headerlink\" title=\"bifurcate\"></a>bifurcate</h3><p>将值拆分为两组。 如果过滤器中的元素是真的，则集合中的对应元素属于第一组; 否则，它属于第二组。<br>使用<code>Array.prototype.reduce()</code>和<code>Array.prototype.push()</code>根据过滤器向数组添加元素。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> bifurcate = <span class=\"function\">(<span class=\"params\">arr, filter</span>) =&gt;</span>\n  arr.reduce(<span class=\"function\">(<span class=\"params\">acc, val, i</span>) =&gt;</span> (acc[filter[i] ? <span class=\"number\">0</span> : <span class=\"number\">1</span>].push(val), acc), [[], []]);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">bifurcate([<span class=\"string\">'beep'</span>, <span class=\"string\">'boop'</span>, <span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>], [<span class=\"literal\">true</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">true</span>]); \n<span class=\"comment\">// [ ['beep', 'boop', 'bar'], ['foo'] ]</span>\n</code></pre>\n<p></p>\n<h3 id=\"chunk\"><a href=\"#chunk\" class=\"headerlink\" title=\"chunk\"></a>chunk</h3><p>将数组分割为指定大小的数组。<br>使用<code>Array.from()</code>创建一个新数组，该数组符合指定大小。 使用<code>Array.prototype.slice()</code>将新数组的每个元素映射到一个大小的数组中。 如果原始数组无法均匀分割，则最终的数组包含其余元素。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> chunk = <span class=\"function\">(<span class=\"params\">arr, size</span>) =&gt;</span>\n  <span class=\"built_in\">Array</span>.from({ <span class=\"attr\">length</span>: <span class=\"built_in\">Math</span>.ceil(arr.length / size) }, (v, i) =&gt;\n    arr.slice(i * size, i * size + size)\n  );\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">chunk([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>], <span class=\"number\">2</span>); <span class=\"comment\">// [[1,2],[3,4],[5]]</span>\n</code></pre>\n<p></p>\n<h3 id=\"compact\"><a href=\"#compact\" class=\"headerlink\" title=\"compact\"></a>compact</h3><p>使用<code>Array.prototype.filter()</code> 从数组中删除<code> (false, null, 0, “”, undefined, and NaN)</code> 。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> compact = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> arr.filter(<span class=\"built_in\">Boolean</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">compact([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"literal\">false</span>, <span class=\"number\">2</span>, <span class=\"string\">''</span>, <span class=\"number\">3</span>, <span class=\"string\">'a'</span>, <span class=\"string\">'e'</span> * <span class=\"number\">23</span>, <span class=\"literal\">NaN</span>, <span class=\"string\">'s'</span>, <span class=\"number\">34</span>]); \n<span class=\"comment\">// [ 1, 2, 3, 'a', 's', 34 ]</span>\n</code></pre>\n<p></p>\n<h3 id=\"countBy\"><a href=\"#countBy\" class=\"headerlink\" title=\"countBy\"></a>countBy</h3><p>基于给定函数对数组的元素进行分组，并返回每个组中元素的数量。<br>使用<code>Array.prototype.map()</code>将数组的值映射到函数或属性名称。 使用<code>Array.prototype.reduce()</code>创建一个对象，其中的键是从映射结果生成的。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> countBy = <span class=\"function\">(<span class=\"params\">arr, fn</span>) =&gt;</span>\n  arr.map(<span class=\"keyword\">typeof</span> fn === <span class=\"string\">'function'</span> ? fn : <span class=\"function\"><span class=\"params\">val</span> =&gt;</span> val[fn]).reduce(<span class=\"function\">(<span class=\"params\">acc, val</span>) =&gt;</span> {\n    acc[val] = (acc[val] || <span class=\"number\">0</span>) + <span class=\"number\">1</span>;\n    <span class=\"keyword\">return</span> acc;\n  }, {});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">countBy([<span class=\"number\">6.1</span>, <span class=\"number\">4.2</span>, <span class=\"number\">6.3</span>], <span class=\"built_in\">Math</span>.floor); <span class=\"comment\">// {4: 1, 6: 2}</span>\ncountBy([<span class=\"string\">'one'</span>, <span class=\"string\">'two'</span>, <span class=\"string\">'three'</span>], <span class=\"string\">'length'</span>); <span class=\"comment\">// {3: 2, 5: 1}</span>\n</code></pre>\n<p></p>\n<h3 id=\"countOccurrences\"><a href=\"#countOccurrences\" class=\"headerlink\" title=\"countOccurrences\"></a>countOccurrences</h3><p>计算数组的元素出现的次数。<br>使用<code>Array.prototype.reduce()</code>递增器计算数组每个元素出现的次数。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> countOccurrences = <span class=\"function\">(<span class=\"params\">arr, val</span>) =&gt;</span> \narr.reduce(<span class=\"function\">(<span class=\"params\">a, v</span>) =&gt;</span> (v === val ? a + <span class=\"number\">1</span> : a), <span class=\"number\">0</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">countOccurrences([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">1</span>); <span class=\"comment\">// 3</span>\n</code></pre>\n<p></p>\n<h3 id=\"deepFlatten\"><a href=\"#deepFlatten\" class=\"headerlink\" title=\"deepFlatten\"></a>deepFlatten</h3><p>深度展平一维数组。<br>运用递归。使用<code>Array.prototype.concat()</code>、空数组<code>[]</code>和展开运算符<br><code>…</code>去展平数组。递归地展平数组的每个元素。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> deepFlatten = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> \n[].concat(...arr.map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> (<span class=\"built_in\">Array</span>.isArray(v) ? deepFlatten(v) : v)));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">deepFlatten([<span class=\"number\">1</span>, [<span class=\"number\">2</span>], [[<span class=\"number\">3</span>], <span class=\"number\">4</span>], <span class=\"number\">5</span>]); <span class=\"comment\">// [1,2,3,4,5]</span>\n[<span class=\"number\">1</span>, [<span class=\"number\">2</span>], [[<span class=\"number\">3</span>], <span class=\"number\">4</span>], <span class=\"number\">5</span>].toString().split(<span class=\"string\">','</span>) <span class=\"comment\">//  ✅ [1,2,3,4,5]</span>\n</code></pre>\n<p></p>\n<h3 id=\"filterNonUnique\"><a href=\"#filterNonUnique\" class=\"headerlink\" title=\"filterNonUnique\"></a>filterNonUnique</h3><p>过滤掉数组中的非唯一值。<br>使用<code>Array.prototype.filter()</code>用于仅包含唯一值的数组。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> filterNonUnique = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> \narr.filter(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> arr.indexOf(i) === arr.lastIndexOf(i));\n</code></pre>\n<p></p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">filterNonUnique([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]); <span class=\"comment\">// [1, 3, 5]</span>\n</code></pre>\n<p></p>\n<h3 id=\"forEachRight\"><a href=\"#forEachRight\" class=\"headerlink\" title=\"forEachRight\"></a>forEachRight</h3><p>从数组的最后一个元素开始，为每个数组元素执行一次提供的函数。<br>使用<code>Array.prototype.slice(0)</code>克隆给定的数组，<br>使用<code>Array.prototype.reverse()</code>来反转它，<br>使用<code>Array.prototype.forEach()/<code>迭代反向数组。</code></code></p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> forEachRight = <span class=\"function\">(<span class=\"params\">arr, callback</span>) =&gt;</span>\n  arr\n    .slice(<span class=\"number\">0</span>)\n    .reverse()\n    .forEach(callback);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">forEachRight([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], val =&gt; <span class=\"built_in\">console</span>.log(val)); <span class=\"comment\">// '4', '3', '2', '1'</span>\n</code></pre>\n<p></p>\n<h3 id=\"indexOfAll\"><a href=\"#indexOfAll\" class=\"headerlink\" title=\"indexOfAll\"></a>indexOfAll</h3><p>返回数组中val的所有索引。 如果val不存在，则返回[]。<br>使用<code>Array.prototype.reduce()</code>循环元素并存储匹配元素的索引，返回索引数组。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> indexOfAll = <span class=\"function\">(<span class=\"params\">arr, val</span>) =&gt;</span>\narr.reduce(<span class=\"function\">(<span class=\"params\">acc, el, i</span>) =&gt;</span> (el === val ? [...acc, i] : acc), []);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">indexOfAll([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">1</span>); <span class=\"comment\">// [0,3]</span>\nindexOfAll([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">4</span>); <span class=\"comment\">// []</span>\n</code></pre>\n<p></p>\n<h3 id=\"initialize2DArray\"><a href=\"#initialize2DArray\" class=\"headerlink\" title=\"initialize2DArray\"></a>initialize2DArray</h3><p>初始化给定宽度和高度的2D数组。<br>使用<code>Array.prototype.map()</code>生成<code>h</code>行，其中每个行都是一个大小为<code>w</code>的初始化的新数组。 如果<code>val</code>未传值，则默认为null。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> initialize2DArray = <span class=\"function\">(<span class=\"params\">w, h, val = <span class=\"literal\">null</span></span>) =&gt;</span>\n  <span class=\"built_in\">Array</span>.from({ <span class=\"attr\">length</span>: h }).map(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">Array</span>.from({ <span class=\"attr\">length</span>: w }).fill(val));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">initialize2DArray(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>); <span class=\"comment\">// [[0,0], [0,0]]</span>\ninitialize2DArray(<span class=\"number\">1</span>, <span class=\"number\">2</span>); <span class=\"comment\">// [[null], [null]]</span>\n</code></pre>\n<p></p>\n<h3 id=\"initializeArrayWithValues\"><a href=\"#initializeArrayWithValues\" class=\"headerlink\" title=\"initializeArrayWithValues\"></a>initializeArrayWithValues</h3><p>使用指定的值初始化并填充数组。<br>使用<code>Array(n)</code>创建所需长度的数组，<code>fill(v)</code>填充。 如果<code>val</code>未传，默认值为0。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> initializeArrayWithValues = <span class=\"function\">(<span class=\"params\">n, val = <span class=\"number\">0</span></span>) =&gt;</span> <span class=\"built_in\">Array</span>(n).fill(val);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">initializeArrayWithValues(<span class=\"number\">5</span>, <span class=\"number\">2</span>); <span class=\"comment\">// [2, 2, 2, 2, 2]</span>\n</code></pre>\n<p></p>\n<h3 id=\"mapObject\"><a href=\"#mapObject\" class=\"headerlink\" title=\"mapObject\"></a>mapObject</h3><p>使用函数将数组的值映射到对象，其中键 - 值对由原始值作为键和映射值组成。<br>使用匿名内部函数作用域来声明未定义的内存空间，使用闭包来存储返回值。<br>使用新数组来存储数组，其中包含函数的数据集，并使用逗号运算符返回第二步，<br>而无需从一个上下文移动到另一个上下文（由于闭包和操作顺序）。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> mapObject = <span class=\"function\">(<span class=\"params\">arr, fn</span>) =&gt;</span>\n  (<span class=\"function\"><span class=\"params\">a</span> =&gt;</span> (\n    (a = [arr, arr.map(fn)]), \n    a[<span class=\"number\">0</span>].reduce(<span class=\"function\">(<span class=\"params\">acc, val, ind</span>) =&gt;</span> ((acc[val] = a[<span class=\"number\">1</span>][ind]), acc), {})\n  ))();\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> squareIt = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> mapObject(arr, a =&gt; a * a);\nsquareIt([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]); <span class=\"comment\">// { 1: 1, 2: 4, 3: 9 }</span>\n</code></pre>\n<p></p>\n<h3 id=\"similarity\"><a href=\"#similarity\" class=\"headerlink\" title=\"similarity\"></a>similarity</h3><p>返回两个数组中都出现的元素数组。<br>使用<code>Array.prototype.filter()</code>过滤不属于数组的值，使用<code>Array.prototype.includes</code>判断。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> similarity = <span class=\"function\">(<span class=\"params\">arr, values</span>) =&gt;</span> arr.filter(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> values.includes(v));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">similarity([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>]); <span class=\"comment\">// [1, 2]</span>\n</code></pre>\n<p></p>\n<h3 id=\"union\"><a href=\"#union\" class=\"headerlink\" title=\"union\"></a>union</h3><p>返回两个数组中任何一个中只存在一次元素的数组。</p>\n<p>使用<code>…</code>a和b的所有值创建一个Set并用<code>Array.from()</code>转换为数组。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> union = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> <span class=\"built_in\">Array</span>.from(<span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>([...a, ...b]));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">union([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>]); <span class=\"comment\">// [1,2,3,4]</span>\n</code></pre>\n<p></p>\n<h2 id=\"🌐-Browser\"><a href=\"#🌐-Browser\" class=\"headerlink\" title=\"🌐 Browser\"></a>🌐 Browser</h2><h3 id=\"detectDeviceType\"><a href=\"#detectDeviceType\" class=\"headerlink\" title=\"detectDeviceType\"></a>detectDeviceType</h3><p>检测网站是否在移动设备或台式机/笔记本电脑中打开。<br>使用正则表达式测试<code>navigator.userAgent</code>属性，以确定设备是移动设备还是台式机/笔记本电脑。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> detectDeviceType = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span>\n  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test\n  (navigator.userAgent)\n  ? <span class=\"string\">'Mobile'</span>\n  : <span class=\"string\">'Desktop'</span>;\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">detectDeviceType();  <span class=\"comment\">// Desktop</span>\n</code></pre>\n<p></p>\n<h3 id=\"elementContains\"><a href=\"#elementContains\" class=\"headerlink\" title=\"elementContains\"></a>elementContains</h3><p>如果父元素包含子元素，则返回<code>true</code>，否则返回<code>false</code>。<br>先检查父元素与子元素不是同一元素，再使用<code>parent.contains(child)</code>检查父元素是否包含子元素。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> elementContains = <span class=\"function\">(<span class=\"params\">parent, child</span>) =&gt;</span> \nparent !== child &amp;&amp; parent.contains(child);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">_query (tag){\n  <span class=\"keyword\">return</span> <span class=\"built_in\">document</span>.querySelector(tag)\n}\nelementContains(_query(<span class=\"string\">'head'</span>),  _query(<span class=\"string\">'title'</span>));  <span class=\"comment\">// true</span>\nelementContains(_query(<span class=\"string\">'body'</span>),  _query(<span class=\"string\">'body'</span>)); <span class=\"comment\">// false</span>\n</code></pre>\n<p></p>\n<h3 id=\"getScrollPosition\"><a href=\"#getScrollPosition\" class=\"headerlink\" title=\"getScrollPosition\"></a>getScrollPosition</h3><p>返回当前页面的滚动位置。<br>如果已定义，则使用<code>pageXOffset</code>和<code>pageYOffset</code>，否则使用<code>scrollLeft</code>和<code>scrollTop</code>。 您可以省略<code>el</code>以使用窗口的默认值。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> getScrollPosition = <span class=\"function\">(<span class=\"params\">el = <span class=\"built_in\">window</span></span>) =&gt;</span> ({\n  x: el.pageXOffset !== <span class=\"literal\">undefined</span> ? el.pageXOffset : el.scrollLeft,\n  y: el.pageYOffset !== <span class=\"literal\">undefined</span> ? el.pageYOffset : el.scrollTop\n});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">getScrollPosition(); <span class=\"comment\">// {x: 0, y: 200}</span>\n</code></pre>\n<p></p>\n<h3 id=\"getStyle\"><a href=\"#getStyle\" class=\"headerlink\" title=\"getStyle\"></a>getStyle</h3><p>返回指定元素的CSS规则的值。<br>使用<code>Window.getComputedStyle()</code>获取指定元素的CSS规则的值。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> getStyle = <span class=\"function\">(<span class=\"params\">el, ruleName</span>) =&gt;</span> getComputedStyle(el)[ruleName];\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">getStyle(<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'p'</span>), <span class=\"string\">'font-size'</span>); <span class=\"comment\">// '16px'</span>\n</code></pre>\n<p></p>\n<h3 id=\"hasClass\"><a href=\"#hasClass\" class=\"headerlink\" title=\"hasClass\"></a>hasClass</h3><p>如果元素具有指定的类，则返回<code>true</code>，否则返回<code>false</code>。<br>使用<code>element.classList.contains()</code>检查元素是否具有指定的类。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> hasClass = <span class=\"function\">(<span class=\"params\">el, className</span>) =&gt;</span> el.classList.contains(className);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">hasClass(<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'p.special'</span>), <span class=\"string\">'special'</span>); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h2 id=\"⏱️-Date\"><a href=\"#⏱️-Date\" class=\"headerlink\" title=\"⏱️ Date\"></a>⏱️ Date</h2><h3 id=\"formatDuration\"><a href=\"#formatDuration\" class=\"headerlink\" title=\"formatDuration\"></a>formatDuration</h3><p>返回给定毫秒数的可读格式。</p>\n<p>将<code>ms</code>除以适当的值，以获得白天，小时，分钟，秒和毫秒的可读值。<br>使用 <code>Object.entries()<code>和<code>Array.prototype.filter()<code>仅保留非零值。<br>使用<code>Array.prototype.map()<code>为每个值创建字符串。<br>使用<code>String.prototype.join(‘,’)<code>将值组合成一个字符串。</code></code></code></code></code></code></code></code></p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> formatDuration = <span class=\"function\"><span class=\"params\">ms</span> =&gt;</span> {\n  <span class=\"keyword\">if</span> (ms &lt; <span class=\"number\">0</span>) ms = -ms;\n  <span class=\"keyword\">const</span> time = {\n    day: <span class=\"built_in\">Math</span>.floor(ms / <span class=\"number\">86400000</span>),\n    hour: <span class=\"built_in\">Math</span>.floor(ms / <span class=\"number\">3600000</span>) % <span class=\"number\">24</span>,\n    minute: <span class=\"built_in\">Math</span>.floor(ms / <span class=\"number\">60000</span>) % <span class=\"number\">60</span>,\n    second: <span class=\"built_in\">Math</span>.floor(ms / <span class=\"number\">1000</span>) % <span class=\"number\">60</span>,\n    millisecond: <span class=\"built_in\">Math</span>.floor(ms) % <span class=\"number\">1000</span>\n  };\n  <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.entries(time)\n    .filter(<span class=\"function\"><span class=\"params\">val</span> =&gt;</span> val[<span class=\"number\">1</span>] !== <span class=\"number\">0</span>)\n    .map(<span class=\"function\">(<span class=\"params\">[key, val]</span>) =&gt;</span> <span class=\"string\">`<span class=\"subst\">${val}</span> <span class=\"subst\">${key}</span><span class=\"subst\">${val !== <span class=\"number\">1</span> ? <span class=\"string\">'s'</span> : <span class=\"string\">''</span>}</span>`</span>)\n    .join(<span class=\"string\">', '</span>);\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">formatDuration(<span class=\"number\">1001</span>); <span class=\"comment\">// '1 second, 1 millisecond'</span>\nformatDuration(<span class=\"number\">34325055574</span>); \n<span class=\"comment\">// '397 days, 6 hours, 44 minutes, 15 seconds, 574 milliseconds'</span>\n</code></pre>\n<p></p>\n<h2 id=\"🎛️-Function\"><a href=\"#🎛️-Function\" class=\"headerlink\" title=\"🎛️ Function\"></a>🎛️ Function</h2><h3 id=\"debounce\"><a href=\"#debounce\" class=\"headerlink\" title=\"debounce\"></a>debounce</h3><p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> debounce = <span class=\"function\">(<span class=\"params\">fn, ms = <span class=\"number\">0</span></span>) =&gt;</span> {\n  <span class=\"keyword\">let</span> timeoutId;\n  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">...args</span>) </span>{\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> fn.apply(<span class=\"keyword\">this</span>, args), ms);\n  };\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"built_in\">window</span>.addEventListener(\n  <span class=\"string\">'resize'</span>,\n  debounce(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> {\n    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.innerWidth);\n    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.innerHeight);\n  }, <span class=\"number\">250</span>)\n); <span class=\"comment\">// Will log the window dimensions at most every 250ms</span>\n</code></pre>\n<p></p>\n<h3 id=\"throttle\"><a href=\"#throttle\" class=\"headerlink\" title=\"throttle\"></a>throttle</h3><p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> throttle = <span class=\"function\">(<span class=\"params\">fn, wait</span>) =&gt;</span> {\n  <span class=\"keyword\">let</span> inThrottle, lastFn, lastTime;\n  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{\n    <span class=\"keyword\">const</span> context = <span class=\"keyword\">this</span>,\n      args = <span class=\"built_in\">arguments</span>;\n    <span class=\"keyword\">if</span> (!inThrottle) {\n      fn.apply(context, args);\n      lastTime = <span class=\"built_in\">Date</span>.now();\n      inThrottle = <span class=\"literal\">true</span>;\n    } <span class=\"keyword\">else</span> {\n      clearTimeout(lastFn);\n      lastFn = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{\n        <span class=\"keyword\">if</span> (<span class=\"built_in\">Date</span>.now() - lastTime &gt;= wait) {\n          fn.apply(context, args);\n          lastTime = <span class=\"built_in\">Date</span>.now();\n        }\n      }, <span class=\"built_in\">Math</span>.max(wait - (<span class=\"built_in\">Date</span>.now() - lastTime), <span class=\"number\">0</span>));\n    }\n  };\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"built_in\">window</span>.addEventListener(\n  <span class=\"string\">'resize'</span>,\n  throttle(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">evt</span>) </span>{\n    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.innerWidth);\n    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.innerHeight);\n  }, <span class=\"number\">250</span>)\n); <span class=\"comment\">// Will log the window dimensions at most every 250ms</span>\n</code></pre>\n<p></p>\n<h2 id=\"➗-Math\"><a href=\"#➗-Math\" class=\"headerlink\" title=\"➗ Math\"></a>➗ Math</h2><h3 id=\"distance\"><a href=\"#distance\" class=\"headerlink\" title=\"distance\"></a>distance</h3><p>返回两点之间的距离。<br>使用<code>Math.hypot()</code>计算两点之间的欧几里德距离。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> distance = <span class=\"function\">(<span class=\"params\">x0, y0, x1, y1</span>) =&gt;</span> <span class=\"built_in\">Math</span>.hypot(x1 - x0, y1 - y0);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">distance(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 2.23606797749979</span>\n</code></pre>\n<p></p>\n<h3 id=\"factorial\"><a href=\"#factorial\" class=\"headerlink\" title=\"factorial\"></a>factorial</h3><p>使用递归计算数字的阶乘。<br>如果<code>n</code>小于或等于1，则返回1。否则，返回<code>n</code>的乘积和<code>n  -  1</code>的阶乘。如果<code>n</code>是负数，则抛出异常。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> factorial = <span class=\"function\"><span class=\"params\">n</span> =&gt;</span>\n  n &lt; <span class=\"number\">0</span>\n    ? <span class=\"function\">(<span class=\"params\">(</span>) =&gt;</span> {\n      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">'Negative numbers are not allowed!'</span>);\n    })()\n    : n &lt;= <span class=\"number\">1</span>\n      ? <span class=\"number\">1</span>\n      : n * factorial(n - <span class=\"number\">1</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">factorial(<span class=\"number\">6</span>); <span class=\"comment\">// 720</span>\n</code></pre>\n<p></p>\n<h3 id=\"gcd\"><a href=\"#gcd\" class=\"headerlink\" title=\"gcd\"></a>gcd</h3><p>计算两个或多个数字/数组之间的最大公约数。<br>内部<code>_gcd</code>函数使用递归计算返回<code>y</code>的<code>GCD</code>和除法<code>x / y</code>的余数。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> gcd = <span class=\"function\">(<span class=\"params\">...arr</span>) =&gt;</span> {\n  <span class=\"keyword\">const</span> _gcd = <span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> (!y ? x : gcd(y, x % y));\n  <span class=\"keyword\">return</span> [...arr].reduce(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> _gcd(a, b));\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">gcd(<span class=\"number\">8</span>, <span class=\"number\">36</span>); <span class=\"comment\">// 4</span>\ngcd(...[<span class=\"number\">12</span>, <span class=\"number\">8</span>, <span class=\"number\">32</span>]); <span class=\"comment\">// 4</span>\n</code></pre>\n<p></p>\n<h3 id=\"randomIntArrayInRange\"><a href=\"#randomIntArrayInRange\" class=\"headerlink\" title=\"randomIntArrayInRange\"></a>randomIntArrayInRange</h3><p>返回指定范围内的n个随机整数的数组。<br>使用<code>Array.from()</code>创建一个特定长度的数组，<code>Math.random()</code>生成一个范围内的随机数，使用<code>Math.floor</code>向下取整。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> randomIntArrayInRange = <span class=\"function\">(<span class=\"params\">min, max, n = <span class=\"number\">1</span></span>) =&gt;</span>\n  <span class=\"built_in\">Array</span>.from({ <span class=\"attr\">length</span>: n }, () =&gt; \n  <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * (max - min + <span class=\"number\">1</span>)) + min);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">randomIntArrayInRange(<span class=\"number\">12</span>, <span class=\"number\">35</span>, <span class=\"number\">10</span>); <span class=\"comment\">// [ 34, 14, 27, 17, 30, 27, 20, 26, 21, 14 ]</span>\n</code></pre>\n<p></p>\n<h3 id=\"sum\"><a href=\"#sum\" class=\"headerlink\" title=\"sum\"></a>sum</h3><p>返回数组的总和。<br>使用<code>Array.prototype.reduce()</code>将每个值累加，使用值0初始化。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> sum = <span class=\"function\">(<span class=\"params\">...arr</span>) =&gt;</span> [...arr].reduce(<span class=\"function\">(<span class=\"params\">acc, val</span>) =&gt;</span> acc + val, <span class=\"number\">0</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">sum(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>); <span class=\"comment\">// 10</span>\nsum(...[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]); <span class=\"comment\">// 10</span>\n</code></pre>\n<p></p>\n<h2 id=\"🗃️-Object\"><a href=\"#🗃️-Object\" class=\"headerlink\" title=\"🗃️ Object\"></a>🗃️ Object</h2><h3 id=\"deepClone\"><a href=\"#deepClone\" class=\"headerlink\" title=\"deepClone\"></a>deepClone</h3><p>创建对象的深克隆。<br>使用<code>Object.assign()</code>和空对象<code>({})</code>创建原始的浅层克隆。<br>使用<code>Object.keys()</code>和<code>Array.prototype.forEach()</code>来确定需要深度克隆的键值对。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> deepClone = <span class=\"function\"><span class=\"params\">obj</span> =&gt;</span> {\n  <span class=\"keyword\">let</span> clone = <span class=\"built_in\">Object</span>.assign({}, obj);\n  <span class=\"built_in\">Object</span>.keys(clone).forEach(\n    key =&gt; (clone[key] = <span class=\"keyword\">typeof</span> obj[key] === <span class=\"string\">'object'</span>\n     ? deepClone(obj[key]) \n     : obj[key])\n  );\n  <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.isArray(obj) \n  ? (clone.length = obj.length) &amp;&amp; <span class=\"built_in\">Array</span>.from(clone) \n  : clone;\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> a = { <span class=\"attr\">foo</span>: <span class=\"string\">'bar'</span>, <span class=\"attr\">obj</span>: { <span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span> } };\n<span class=\"keyword\">const</span> b = deepClone(a); <span class=\"comment\">// a !== b, a.obj !== b.obj</span>\n</code></pre>\n<p></p>\n<h3 id=\"flattenObject\"><a href=\"#flattenObject\" class=\"headerlink\" title=\"flattenObject\"></a>flattenObject</h3><p>展平对象。<br>使用<code>Object.keys(obj)</code>与<code>Array.prototype.reduce()</code>结合将每个叶节点转换为展平路径节点。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> flattenObject = <span class=\"function\">(<span class=\"params\">obj, prefix = <span class=\"string\">''</span></span>) =&gt;</span>\n  <span class=\"built_in\">Object</span>.keys(obj).reduce(<span class=\"function\">(<span class=\"params\">acc, k</span>) =&gt;</span> {\n    <span class=\"keyword\">const</span> pre = prefix.length ? prefix + <span class=\"string\">'.'</span> : <span class=\"string\">''</span>;\n    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj[k] === <span class=\"string\">'object'</span>) {\n    <span class=\"built_in\">Object</span>.assign(acc, flattenObject(obj[k], pre + k))\n    };\n    <span class=\"keyword\">else</span> acc[pre + k] = obj[k];\n    <span class=\"keyword\">return</span> acc;\n  }, {});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">flattenObject({ <span class=\"attr\">a</span>: { <span class=\"attr\">b</span>: { <span class=\"attr\">c</span>: <span class=\"number\">1</span> } }, <span class=\"attr\">d</span>: <span class=\"number\">1</span> }); <span class=\"comment\">// { 'a.b.c': 1, d: 1 }</span>\n</code></pre>\n<p></p>\n<h3 id=\"mapKeys\"><a href=\"#mapKeys\" class=\"headerlink\" title=\"mapKeys\"></a>mapKeys</h3><p>创建一个对象，其中包含通过为每个键运行提供的函数生成的键以及与提供的对象相同的值。<br>使用<code>Object.keys(obj)</code>迭代对象的键。<br>使用Array.prototype.reduce()使用<code>fn</code>创建具有相同值和映射键的新对象。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> mapKeys = <span class=\"function\">(<span class=\"params\">obj, fn</span>) =&gt;</span>\n  <span class=\"built_in\">Object</span>.keys(obj).reduce(<span class=\"function\">(<span class=\"params\">acc, k</span>) =&gt;</span> {\n    acc[fn(obj[k], k, obj)] = obj[k];\n    <span class=\"keyword\">return</span> acc;\n  }, {});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">mapKeys({ <span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span> }, (val, key) =&gt; key + val); <span class=\"comment\">// { a1: 1, b2: 2 }</span>\n</code></pre>\n<p></p>\n<h3 id=\"mapValues\"><a href=\"#mapValues\" class=\"headerlink\" title=\"mapValues\"></a>mapValues</h3><p>使用与提供的对象相同的键创建对象，并通过为每个值运行提供的函数生成值。<br>使用<code>Object.keys(obj)</code>迭代对象的键。<br>使用<code>Array.prototype.reduce()</code>。<br>使用<code>fn</code>创建具有相同键和映射值的新对象。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> mapValues = <span class=\"function\">(<span class=\"params\">obj, fn</span>) =&gt;</span>\n  <span class=\"built_in\">Object</span>.keys(obj).reduce(<span class=\"function\">(<span class=\"params\">acc, k</span>) =&gt;</span> {\n    acc[k] = fn(obj[k], k, obj);\n    <span class=\"keyword\">return</span> acc;\n  }, {});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> users = {\n  fred: { <span class=\"attr\">user</span>: <span class=\"string\">'fred'</span>, <span class=\"attr\">age</span>: <span class=\"number\">40</span> },\n  pebbles: { <span class=\"attr\">user</span>: <span class=\"string\">'pebbles'</span>, <span class=\"attr\">age</span>: <span class=\"number\">1</span> }\n};\nmapValues(users, u =&gt; u.age); <span class=\"comment\">// { fred: 40, pebbles: 1 }</span>\n</code></pre>\n<p></p>\n<h3 id=\"objectFromPairs\"><a href=\"#objectFromPairs\" class=\"headerlink\" title=\"objectFromPairs\"></a>objectFromPairs</h3><p>根据给定的键值对创建对象。<br>使用<code>Array.prototype.reduce()</code>创建对象。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> objectFromPairs = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> \narr.reduce(<span class=\"function\">(<span class=\"params\">a, [key, val]</span>) =&gt;</span> ((a[key] = val), a), {});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">objectFromPairs([[<span class=\"string\">'a'</span>, <span class=\"number\">1</span>], [<span class=\"string\">'b'</span>, <span class=\"number\">2</span>]]); <span class=\"comment\">// {a: 1, b: 2}</span>\n</code></pre>\n<p></p>\n<h3 id=\"objectToPairs\"><a href=\"#objectToPairs\" class=\"headerlink\" title=\"objectToPairs\"></a>objectToPairs</h3><p>从对象创建键值对数组的数组。<br>使用<code>Object.keys()</code>和<code>Array.prototype.map()</code>迭代对象的键并生成数组。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> objectToPairs = <span class=\"function\"><span class=\"params\">obj</span> =&gt;</span> <span class=\"built_in\">Object</span>.keys(obj).map(<span class=\"function\"><span class=\"params\">k</span> =&gt;</span> [k, obj[k]]);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">objectToPairs({ <span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span> }); <span class=\"comment\">// [ ['a', 1], ['b', 2] ]</span>\n</code></pre>\n<p></p>\n<h2 id=\"📜-String\"><a href=\"#📜-String\" class=\"headerlink\" title=\"📜 String\"></a>📜 String</h2><h3 id=\"fromCamelCase\"><a href=\"#fromCamelCase\" class=\"headerlink\" title=\"fromCamelCase\"></a>fromCamelCase</h3><p>转换字符串。<br>使用<code>String.prototype.replace()</code>删除下划线，连字符和空格，并将单词转换为<code>camelcase</code>。 省略第二个参数以使用<code>_</code>的默认分隔符。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> fromCamelCase = <span class=\"function\">(<span class=\"params\">str, separator = <span class=\"string\">'_'</span></span>) =&gt;</span>\n  str\n    .replace(<span class=\"regexp\">/([a-z\\d])([A-Z])/g</span>, <span class=\"string\">'$1'</span> + separator + <span class=\"string\">'$2'</span>)\n    .replace(<span class=\"regexp\">/([A-Z]+)([A-Z][a-z\\d]+)/g</span>, <span class=\"string\">'$1'</span> + separator + <span class=\"string\">'$2'</span>)\n    .toLowerCase();\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">fromCamelCase(<span class=\"string\">'someDatabaseFieldName'</span>, <span class=\"string\">' '</span>); \n<span class=\"comment\">// 'some database field name'</span>\nfromCamelCase(<span class=\"string\">'someLabelThatNeedsToBeCamelized'</span>, <span class=\"string\">'-'</span>); \n<span class=\"comment\">// 'some-label-that-needs-to-be-camelized'</span>\nfromCamelCase(<span class=\"string\">'someJavascriptProperty'</span>, <span class=\"string\">'_'</span>); \n<span class=\"comment\">// 'some_javascript_property'</span>\n</code></pre>\n<p></p>\n<h3 id=\"isAnagram\"><a href=\"#isAnagram\" class=\"headerlink\" title=\"isAnagram\"></a>isAnagram</h3><p>检查字符串是否是另一个字符串的字谜。<br>使用<code>String.toLowerCase()</code>和<code>String.prototype.replace()</code>删除不必要的字符。<br>使用<code>String.prototype.split(‘’)</code>和<code>Array.prototype.sort()</code>和<code>Array.prototype.join(‘’)</code>检查是否相等。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> isAnagram = <span class=\"function\">(<span class=\"params\">str1, str2</span>) =&gt;</span> {\n  <span class=\"keyword\">const</span> normalize = <span class=\"function\"><span class=\"params\">str</span> =&gt;</span>\n    str\n      .toLowerCase()\n      .replace(<span class=\"regexp\">/[^a-z0-9]/gi</span>, <span class=\"string\">''</span>)\n      .split(<span class=\"string\">''</span>)\n      .sort()\n      .join(<span class=\"string\">''</span>);\n  <span class=\"keyword\">return</span> normalize(str1) === normalize(str2);\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">isAnagram(<span class=\"string\">'iceman'</span>, <span class=\"string\">'cinema'</span>); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"mask\"><a href=\"#mask\" class=\"headerlink\" title=\"mask\"></a>mask</h3><p>使用指定的掩码字符替换除最后一个字符数之外的所有字符。<br>使用<code>String.prototype.slice()</code>来获取将保持未屏蔽的字符部分。<br>使用<code>String.padStart()</code>以掩码字符填充字符串的开头，直到原始长度。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> mask = <span class=\"function\">(<span class=\"params\">cc, num = <span class=\"number\">4</span>, mask = <span class=\"string\">'*'</span></span>) =&gt;</span> \n<span class=\"string\">`<span class=\"subst\">${cc}</span>`</span>.slice(-num).padStart(<span class=\"string\">`<span class=\"subst\">${cc}</span>`</span>.length, mask);\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">mask(<span class=\"number\">1234567890</span>); <span class=\"comment\">// '******7890'</span>\nmask(<span class=\"number\">1234567890</span>, <span class=\"number\">3</span>); <span class=\"comment\">// '*******890'</span>\nmask(<span class=\"number\">1234567890</span>, <span class=\"number\">-4</span>, <span class=\"string\">'$'</span>); <span class=\"comment\">// '$$$$567890'</span>\n</code></pre>\n<p></p>\n<h3 id=\"reverseString\"><a href=\"#reverseString\" class=\"headerlink\" title=\"reverseString\"></a>reverseString</h3><p>反转字符串。<br>使用展开运算符<code>(…)</code>和Array.prototype.reverse()来反转字符串中字符的顺序。<br>使用<code>String.prototype.join(‘’)</code>转换成字符串。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> reverseString = <span class=\"function\"><span class=\"params\">str</span> =&gt;</span> [...str].reverse().join(<span class=\"string\">''</span>);\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">reverseString(<span class=\"string\">'foobar'</span>); <span class=\"comment\">// 'raboof'</span>\n</code></pre>\n<p></p>\n<h3 id=\"stripHTMLTags\"><a href=\"#stripHTMLTags\" class=\"headerlink\" title=\"stripHTMLTags\"></a>stripHTMLTags</h3><p>从字符串中删除<code>HTML / XML</code>标记。<br>使用正则表达式从字符串中删除<code>HTML / XML</code>标记。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> stripHTMLTags = <span class=\"function\"><span class=\"params\">str</span> =&gt;</span> str.replace(<span class=\"regexp\">/&lt;[^&gt;]*&gt;/g</span>, <span class=\"string\">''</span>);\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">stripHTMLTags(<span class=\"string\">'&lt;p&gt;&lt;em&gt;lorem&lt;/em&gt; &lt;em&gt;ipsum&lt;/em&gt;&lt;/p&gt;'</span>); \n<span class=\"comment\">// 'lorem ipsum'</span>\n</code></pre>\n<p></p>\n<h3 id=\"toKebabCase\"><a href=\"#toKebabCase\" class=\"headerlink\" title=\"toKebabCase\"></a>toKebabCase</h3><p>字符串转换为烤肉串案例。<br>将字符串分解为单词并将它们组合添加<code> - </code>使用正则表达式作为分隔符。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> toKebabCase = <span class=\"function\"><span class=\"params\">str</span> =&gt;</span>\n  str &amp;&amp;\n  str\n    .match(<span class=\"regexp\">/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g</span>)\n    .map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x.toLowerCase())\n    .join(<span class=\"string\">'-'</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">toKebabCase(<span class=\"string\">'camelCase'</span>); <span class=\"comment\">// 'camel-case'</span>\ntoKebabCase(<span class=\"string\">'some text'</span>); <span class=\"comment\">// 'some-text'</span>\ntoKebabCase(<span class=\"string\">'some-mixed_string With spaces_underscores-and-hyphens'</span>); \n<span class=\"comment\">// 'some-mixed-string-with-spaces-underscores-and-hyphens'</span>\ntoKebabCase(<span class=\"string\">'AllThe-small Things'</span>); \n<span class=\"comment\">// \"all-the-small-things\"</span>\ntoKebabCase(<span class=\"string\">'IAmListeningToFMWhileLoadingDifferentURLOnMyBrowser'</span>); \n<span class=\"comment\">// \"i-am-listening-to-fm-while-loading-different-url-on-my-browser\"</span>\n</code></pre>\n<p></p>\n<h3 id=\"words\"><a href=\"#words\" class=\"headerlink\" title=\"words\"></a>words</h3><p>将给定的字符串转换为单词数组。<br>使用<code>String.prototype.split()</code>与默认为非字母作为正则使用，以转换为字符串数组。<br>使用<code>Array.prototype.filter()</code>删除任何空字符串。 默认的正则为<code>/[^a-zA-Z-]+/</code>。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> words = <span class=\"function\">(<span class=\"params\">str, pattern = <span class=\"regexp\">/[^a-zA-Z-]+/</span></span>) =&gt;</span> \nstr.split(pattern).filter(<span class=\"built_in\">Boolean</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">words(<span class=\"string\">'I love javaScript!!'</span>); <span class=\"comment\">// [\"I\", \"love\", \"javaScript\"]</span>\nwords(<span class=\"string\">'python, javaScript &amp; coffee'</span>); <span class=\"comment\">// [\"python\", \"javaScript\", \"coffee\"]</span>\n</code></pre>\n<p></p>\n<h2 id=\"🔧-Utility\"><a href=\"#🔧-Utility\" class=\"headerlink\" title=\"🔧 Utility\"></a>🔧 Utility</h2><h3 id=\"RGBToHex\"><a href=\"#RGBToHex\" class=\"headerlink\" title=\"RGBToHex\"></a>RGBToHex</h3><p>将<code>RGB</code>值转换为颜色代码。<br>使用按位左移运算符<code>(&lt;&lt;)</code>和<code>toString(16)</code>。<br>使用<code>String.padStart(6，’0’)</code>将RGB参数转换为十六进制字符串，以获得6位十六进制值。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> RGBToHex = <span class=\"function\">(<span class=\"params\">r, g, b</span>) =&gt;</span>\n((r &lt;&lt; <span class=\"number\">16</span>) + (g &lt;&lt; <span class=\"number\">8</span>) + b).toString(<span class=\"number\">16</span>).padStart(<span class=\"number\">6</span>, <span class=\"string\">'0'</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">RGBToHex(<span class=\"number\">255</span>, <span class=\"number\">165</span>, <span class=\"number\">1</span>); <span class=\"comment\">// 'ffa501'</span>\n</code></pre>\n<p></p>\n<h3 id=\"toDecimalMarkc\"><a href=\"#toDecimalMarkc\" class=\"headerlink\" title=\"toDecimalMarkc\"></a>toDecimalMarkc</h3><p>使用<code>toLocaleString()</code>将浮点运算转换为Decimal标记形式——使用逗号分隔字符串与数字。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> toDecimalMark = <span class=\"function\"><span class=\"params\">num</span> =&gt;</span> num.toLocaleString(<span class=\"string\">'en-US'</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">toDecimalMark(<span class=\"number\">12305030388.9087</span>); <span class=\"comment\">// \"12,305,030,388.909\"</span>\n</code></pre>\n<p></p>\n<h3 id=\"validateNumber\"><a href=\"#validateNumber\" class=\"headerlink\" title=\"validateNumber\"></a>validateNumber</h3><p>如果给定值是数字，则返回true，否则返回false。<br>使用<code>!isNaN()</code>与<code>parseFloat()</code>判断参数是否为数字。<br>使用<code>isFinite()</code>判断数字是否有限数字。<br>使用<code>Number()</code>判断类型是否为数字。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> validateNumber = <span class=\"function\"><span class=\"params\">n</span> =&gt;</span> \n!<span class=\"built_in\">isNaN</span>(<span class=\"built_in\">parseFloat</span>(n)) &amp;&amp; <span class=\"built_in\">isFinite</span>(n) &amp;&amp; <span class=\"built_in\">Number</span>(n) == n;\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">validateNumber(<span class=\"string\">'10'</span>); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"yesNo\"><a href=\"#yesNo\" class=\"headerlink\" title=\"yesNo\"></a>yesNo</h3><p>如果字符串是<code>y / yes</code>则返回<code>true</code>，如果字符串是<code>n / no</code>，则返回<code>false</code>。<br>使用<code>RegExp.test()</code>检查字符串是否为<code>y / yes</code>或<code>n / no</code>。 <code>def</code>默认为no。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> yesNo = <span class=\"function\">(<span class=\"params\">val, def = <span class=\"literal\">false</span></span>) =&gt;</span>\n  /^(y|yes)$/i.test(val) ? <span class=\"literal\">true</span> : <span class=\"regexp\">/^(n|no)$/i</span>.test(val) ? <span class=\"literal\">false</span> : def;\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">yesNo(<span class=\"string\">'Y'</span>); <span class=\"comment\">// true</span>\nyesNo(<span class=\"string\">'yes'</span>); <span class=\"comment\">// true</span>\nyesNo(<span class=\"string\">'No'</span>); <span class=\"comment\">// false</span>\nyesNo(<span class=\"string\">'Foo'</span>, <span class=\"literal\">true</span>); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n","site":{"data":{}},"excerpt":"<p>在Gitgub上看见一个好玩的项目 <a href=\"https://github.com/30-seconds/30-seconds-of-code#-adapter-1\" target=\"_blank\" rel=\"noopener\">30 seconds of code</a>，js真好玩。<br>","more":"</p>\n<h2 id=\"🔌-适配\"><a href=\"#🔌-适配\" class=\"headerlink\" title=\"🔌 适配\"></a>🔌 适配</h2><h3 id=\"ary\"><a href=\"#ary\" class=\"headerlink\" title=\"ary\"></a>ary</h3><p>创建一个最多可以接受<code>n</code>个参数的函数。<br>调用提供的函数，<code>fn</code>，最多n个参数。<br>运用<code>Array.prototype.slice(0,n)</code>和展开运算符<code>…</code></p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> ary = <span class=\"function\">(<span class=\"params\">fn, n</span>) =&gt;</span> (...args) =&gt; fn(...args.slice(<span class=\"number\">0</span>, n));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> firstTwoMax = ary(<span class=\"built_in\">Math</span>.max, <span class=\"number\">2</span>);\n[[<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"string\">'a'</span>], [<span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>], [<span class=\"number\">10</span>]].map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> firstTwoMax(...x));  <span class=\"comment\">// [6, 8, 10]</span>\n</code></pre>\n<p></p>\n<h3 id=\"over\"><a href=\"#over\" class=\"headerlink\" title=\"over\"></a>over</h3><p>创建一个函数，该函数使用它接收的参数调用每个提供的函数并返回结果。<br>使用<code>Array.prototype.map()</code>和<code>Function.prototype.apply()</code>将每个函数应用于给定的参数。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> ary = <span class=\"function\">(<span class=\"params\">fn, n</span>) =&gt;</span> (...args) =&gt; fn(...args.slice(<span class=\"number\">0</span>, n));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> firstTwoMax = ary(<span class=\"built_in\">Math</span>.max, <span class=\"number\">2</span>);\n[[<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"string\">'a'</span>], [<span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>], [<span class=\"number\">10</span>]].map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> firstTwoMax(...x));  <span class=\"comment\">// [6, 8, 10]</span>\n</code></pre>\n<p></p>\n<h3 id=\"unary\"><a href=\"#unary\" class=\"headerlink\" title=\"unary\"></a>unary</h3><p>创建只接受一个参数的函数。<br>调用提供的函数<code>fn</code>, 只返回第一个参数。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> unary = <span class=\"function\"><span class=\"params\">fn</span> =&gt;</span> val =&gt; fn(val);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">[<span class=\"string\">'6'</span>, <span class=\"string\">'8'</span>, <span class=\"string\">'10'</span>].map(unary(<span class=\"built_in\">parseInt</span>)); <span class=\"comment\">// [6, 8, 10]</span>\n</code></pre>\n<p></p>\n<h2 id=\"📚-Array\"><a href=\"#📚-Array\" class=\"headerlink\" title=\"📚 Array\"></a>📚 Array</h2><h3 id=\"all\"><a href=\"#all\" class=\"headerlink\" title=\"all\"></a>all</h3><p>如果为集合中的所有元素提供的函数返回<code>true</code>，则返回<code>true</code>，否则返回<code>false</code>。<br>使用<code>Array.prototype.every()</code>来测试集合中的所有元素是否基于<code>fn</code>返回<code>true</code>。 省略第二个参数<code>fn</code>，使用<code>Boolean</code>作为默认值。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> all = <span class=\"function\">(<span class=\"params\">arr, fn = <span class=\"built_in\">Boolean</span></span>) =&gt;</span> arr.every(fn);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">all([<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], x =&gt; x &gt; <span class=\"number\">1</span>); <span class=\"comment\">// true</span>\nall([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"allEqual\"><a href=\"#allEqual\" class=\"headerlink\" title=\"allEqual\"></a>allEqual</h3><p>判断数组的所有元素是否相等。<br>使用<code>Array.prototype.every()</code>判断数组的所有元素是否与第一个元素相等。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> allEqual = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> arr.every(<span class=\"function\"><span class=\"params\">val</span> =&gt;</span> val === arr[<span class=\"number\">0</span>]);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">allEqual([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]); <span class=\"comment\">// false</span>\nallEqual([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>]); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"some\"><a href=\"#some\" class=\"headerlink\" title=\"some\"></a>some</h3><p>如果为集合中的至少一个元素提供的函数返回<code>true</code>，则返回<code>true</code>，否则返回<code>false</code>。<br>使用<code>Array.prototype.some()</code>来测试集合中的所有元素是否基于<code>fn</code>返回<code>true</code>。 省略第二个参数<code>fn</code>，使用<code>Boolean</code>作为默认值。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> any = <span class=\"function\">(<span class=\"params\">arr, fn = <span class=\"built_in\">Boolean</span></span>) =&gt;</span> arr.some(fn);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">any([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>], x =&gt; x &gt;= <span class=\"number\">2</span>); <span class=\"comment\">// true</span>\nany([<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>]); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"bifurcate\"><a href=\"#bifurcate\" class=\"headerlink\" title=\"bifurcate\"></a>bifurcate</h3><p>将值拆分为两组。 如果过滤器中的元素是真的，则集合中的对应元素属于第一组; 否则，它属于第二组。<br>使用<code>Array.prototype.reduce()</code>和<code>Array.prototype.push()</code>根据过滤器向数组添加元素。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> bifurcate = <span class=\"function\">(<span class=\"params\">arr, filter</span>) =&gt;</span>\n  arr.reduce(<span class=\"function\">(<span class=\"params\">acc, val, i</span>) =&gt;</span> (acc[filter[i] ? <span class=\"number\">0</span> : <span class=\"number\">1</span>].push(val), acc), [[], []]);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">bifurcate([<span class=\"string\">'beep'</span>, <span class=\"string\">'boop'</span>, <span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>], [<span class=\"literal\">true</span>, <span class=\"literal\">true</span>, <span class=\"literal\">false</span>, <span class=\"literal\">true</span>]); \n<span class=\"comment\">// [ ['beep', 'boop', 'bar'], ['foo'] ]</span>\n</code></pre>\n<p></p>\n<h3 id=\"chunk\"><a href=\"#chunk\" class=\"headerlink\" title=\"chunk\"></a>chunk</h3><p>将数组分割为指定大小的数组。<br>使用<code>Array.from()</code>创建一个新数组，该数组符合指定大小。 使用<code>Array.prototype.slice()</code>将新数组的每个元素映射到一个大小的数组中。 如果原始数组无法均匀分割，则最终的数组包含其余元素。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> chunk = <span class=\"function\">(<span class=\"params\">arr, size</span>) =&gt;</span>\n  <span class=\"built_in\">Array</span>.from({ <span class=\"attr\">length</span>: <span class=\"built_in\">Math</span>.ceil(arr.length / size) }, (v, i) =&gt;\n    arr.slice(i * size, i * size + size)\n  );\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">chunk([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>], <span class=\"number\">2</span>); <span class=\"comment\">// [[1,2],[3,4],[5]]</span>\n</code></pre>\n<p></p>\n<h3 id=\"compact\"><a href=\"#compact\" class=\"headerlink\" title=\"compact\"></a>compact</h3><p>使用<code>Array.prototype.filter()</code> 从数组中删除<code> (false, null, 0, “”, undefined, and NaN)</code> 。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> compact = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> arr.filter(<span class=\"built_in\">Boolean</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">compact([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"literal\">false</span>, <span class=\"number\">2</span>, <span class=\"string\">''</span>, <span class=\"number\">3</span>, <span class=\"string\">'a'</span>, <span class=\"string\">'e'</span> * <span class=\"number\">23</span>, <span class=\"literal\">NaN</span>, <span class=\"string\">'s'</span>, <span class=\"number\">34</span>]); \n<span class=\"comment\">// [ 1, 2, 3, 'a', 's', 34 ]</span>\n</code></pre>\n<p></p>\n<h3 id=\"countBy\"><a href=\"#countBy\" class=\"headerlink\" title=\"countBy\"></a>countBy</h3><p>基于给定函数对数组的元素进行分组，并返回每个组中元素的数量。<br>使用<code>Array.prototype.map()</code>将数组的值映射到函数或属性名称。 使用<code>Array.prototype.reduce()</code>创建一个对象，其中的键是从映射结果生成的。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> countBy = <span class=\"function\">(<span class=\"params\">arr, fn</span>) =&gt;</span>\n  arr.map(<span class=\"keyword\">typeof</span> fn === <span class=\"string\">'function'</span> ? fn : <span class=\"function\"><span class=\"params\">val</span> =&gt;</span> val[fn]).reduce(<span class=\"function\">(<span class=\"params\">acc, val</span>) =&gt;</span> {\n    acc[val] = (acc[val] || <span class=\"number\">0</span>) + <span class=\"number\">1</span>;\n    <span class=\"keyword\">return</span> acc;\n  }, {});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">countBy([<span class=\"number\">6.1</span>, <span class=\"number\">4.2</span>, <span class=\"number\">6.3</span>], <span class=\"built_in\">Math</span>.floor); <span class=\"comment\">// {4: 1, 6: 2}</span>\ncountBy([<span class=\"string\">'one'</span>, <span class=\"string\">'two'</span>, <span class=\"string\">'three'</span>], <span class=\"string\">'length'</span>); <span class=\"comment\">// {3: 2, 5: 1}</span>\n</code></pre>\n<p></p>\n<h3 id=\"countOccurrences\"><a href=\"#countOccurrences\" class=\"headerlink\" title=\"countOccurrences\"></a>countOccurrences</h3><p>计算数组的元素出现的次数。<br>使用<code>Array.prototype.reduce()</code>递增器计算数组每个元素出现的次数。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> countOccurrences = <span class=\"function\">(<span class=\"params\">arr, val</span>) =&gt;</span> \narr.reduce(<span class=\"function\">(<span class=\"params\">a, v</span>) =&gt;</span> (v === val ? a + <span class=\"number\">1</span> : a), <span class=\"number\">0</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">countOccurrences([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">1</span>); <span class=\"comment\">// 3</span>\n</code></pre>\n<p></p>\n<h3 id=\"deepFlatten\"><a href=\"#deepFlatten\" class=\"headerlink\" title=\"deepFlatten\"></a>deepFlatten</h3><p>深度展平一维数组。<br>运用递归。使用<code>Array.prototype.concat()</code>、空数组<code>[]</code>和展开运算符<br><code>…</code>去展平数组。递归地展平数组的每个元素。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> deepFlatten = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> \n[].concat(...arr.map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> (<span class=\"built_in\">Array</span>.isArray(v) ? deepFlatten(v) : v)));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">deepFlatten([<span class=\"number\">1</span>, [<span class=\"number\">2</span>], [[<span class=\"number\">3</span>], <span class=\"number\">4</span>], <span class=\"number\">5</span>]); <span class=\"comment\">// [1,2,3,4,5]</span>\n[<span class=\"number\">1</span>, [<span class=\"number\">2</span>], [[<span class=\"number\">3</span>], <span class=\"number\">4</span>], <span class=\"number\">5</span>].toString().split(<span class=\"string\">','</span>) <span class=\"comment\">//  ✅ [1,2,3,4,5]</span>\n</code></pre>\n<p></p>\n<h3 id=\"filterNonUnique\"><a href=\"#filterNonUnique\" class=\"headerlink\" title=\"filterNonUnique\"></a>filterNonUnique</h3><p>过滤掉数组中的非唯一值。<br>使用<code>Array.prototype.filter()</code>用于仅包含唯一值的数组。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> filterNonUnique = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> \narr.filter(<span class=\"function\"><span class=\"params\">i</span> =&gt;</span> arr.indexOf(i) === arr.lastIndexOf(i));\n</code></pre>\n<p></p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">filterNonUnique([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]); <span class=\"comment\">// [1, 3, 5]</span>\n</code></pre>\n<p></p>\n<h3 id=\"forEachRight\"><a href=\"#forEachRight\" class=\"headerlink\" title=\"forEachRight\"></a>forEachRight</h3><p>从数组的最后一个元素开始，为每个数组元素执行一次提供的函数。<br>使用<code>Array.prototype.slice(0)</code>克隆给定的数组，<br>使用<code>Array.prototype.reverse()</code>来反转它，<br>使用<code>Array.prototype.forEach()/<code>迭代反向数组。</code></code></p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> forEachRight = <span class=\"function\">(<span class=\"params\">arr, callback</span>) =&gt;</span>\n  arr\n    .slice(<span class=\"number\">0</span>)\n    .reverse()\n    .forEach(callback);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">forEachRight([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], val =&gt; <span class=\"built_in\">console</span>.log(val)); <span class=\"comment\">// '4', '3', '2', '1'</span>\n</code></pre>\n<p></p>\n<h3 id=\"indexOfAll\"><a href=\"#indexOfAll\" class=\"headerlink\" title=\"indexOfAll\"></a>indexOfAll</h3><p>返回数组中val的所有索引。 如果val不存在，则返回[]。<br>使用<code>Array.prototype.reduce()</code>循环元素并存储匹配元素的索引，返回索引数组。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> indexOfAll = <span class=\"function\">(<span class=\"params\">arr, val</span>) =&gt;</span>\narr.reduce(<span class=\"function\">(<span class=\"params\">acc, el, i</span>) =&gt;</span> (el === val ? [...acc, i] : acc), []);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">indexOfAll([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">1</span>); <span class=\"comment\">// [0,3]</span>\nindexOfAll([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">4</span>); <span class=\"comment\">// []</span>\n</code></pre>\n<p></p>\n<h3 id=\"initialize2DArray\"><a href=\"#initialize2DArray\" class=\"headerlink\" title=\"initialize2DArray\"></a>initialize2DArray</h3><p>初始化给定宽度和高度的2D数组。<br>使用<code>Array.prototype.map()</code>生成<code>h</code>行，其中每个行都是一个大小为<code>w</code>的初始化的新数组。 如果<code>val</code>未传值，则默认为null。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> initialize2DArray = <span class=\"function\">(<span class=\"params\">w, h, val = <span class=\"literal\">null</span></span>) =&gt;</span>\n  <span class=\"built_in\">Array</span>.from({ <span class=\"attr\">length</span>: h }).map(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">Array</span>.from({ <span class=\"attr\">length</span>: w }).fill(val));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">initialize2DArray(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>); <span class=\"comment\">// [[0,0], [0,0]]</span>\ninitialize2DArray(<span class=\"number\">1</span>, <span class=\"number\">2</span>); <span class=\"comment\">// [[null], [null]]</span>\n</code></pre>\n<p></p>\n<h3 id=\"initializeArrayWithValues\"><a href=\"#initializeArrayWithValues\" class=\"headerlink\" title=\"initializeArrayWithValues\"></a>initializeArrayWithValues</h3><p>使用指定的值初始化并填充数组。<br>使用<code>Array(n)</code>创建所需长度的数组，<code>fill(v)</code>填充。 如果<code>val</code>未传，默认值为0。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> initializeArrayWithValues = <span class=\"function\">(<span class=\"params\">n, val = <span class=\"number\">0</span></span>) =&gt;</span> <span class=\"built_in\">Array</span>(n).fill(val);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">initializeArrayWithValues(<span class=\"number\">5</span>, <span class=\"number\">2</span>); <span class=\"comment\">// [2, 2, 2, 2, 2]</span>\n</code></pre>\n<p></p>\n<h3 id=\"mapObject\"><a href=\"#mapObject\" class=\"headerlink\" title=\"mapObject\"></a>mapObject</h3><p>使用函数将数组的值映射到对象，其中键 - 值对由原始值作为键和映射值组成。<br>使用匿名内部函数作用域来声明未定义的内存空间，使用闭包来存储返回值。<br>使用新数组来存储数组，其中包含函数的数据集，并使用逗号运算符返回第二步，<br>而无需从一个上下文移动到另一个上下文（由于闭包和操作顺序）。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> mapObject = <span class=\"function\">(<span class=\"params\">arr, fn</span>) =&gt;</span>\n  (<span class=\"function\"><span class=\"params\">a</span> =&gt;</span> (\n    (a = [arr, arr.map(fn)]), \n    a[<span class=\"number\">0</span>].reduce(<span class=\"function\">(<span class=\"params\">acc, val, ind</span>) =&gt;</span> ((acc[val] = a[<span class=\"number\">1</span>][ind]), acc), {})\n  ))();\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> squareIt = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> mapObject(arr, a =&gt; a * a);\nsquareIt([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]); <span class=\"comment\">// { 1: 1, 2: 4, 3: 9 }</span>\n</code></pre>\n<p></p>\n<h3 id=\"similarity\"><a href=\"#similarity\" class=\"headerlink\" title=\"similarity\"></a>similarity</h3><p>返回两个数组中都出现的元素数组。<br>使用<code>Array.prototype.filter()</code>过滤不属于数组的值，使用<code>Array.prototype.includes</code>判断。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> similarity = <span class=\"function\">(<span class=\"params\">arr, values</span>) =&gt;</span> arr.filter(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> values.includes(v));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">similarity([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>]); <span class=\"comment\">// [1, 2]</span>\n</code></pre>\n<p></p>\n<h3 id=\"union\"><a href=\"#union\" class=\"headerlink\" title=\"union\"></a>union</h3><p>返回两个数组中任何一个中只存在一次元素的数组。</p>\n<p>使用<code>…</code>a和b的所有值创建一个Set并用<code>Array.from()</code>转换为数组。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> union = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> <span class=\"built_in\">Array</span>.from(<span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>([...a, ...b]));\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">union([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>]); <span class=\"comment\">// [1,2,3,4]</span>\n</code></pre>\n<p></p>\n<h2 id=\"🌐-Browser\"><a href=\"#🌐-Browser\" class=\"headerlink\" title=\"🌐 Browser\"></a>🌐 Browser</h2><h3 id=\"detectDeviceType\"><a href=\"#detectDeviceType\" class=\"headerlink\" title=\"detectDeviceType\"></a>detectDeviceType</h3><p>检测网站是否在移动设备或台式机/笔记本电脑中打开。<br>使用正则表达式测试<code>navigator.userAgent</code>属性，以确定设备是移动设备还是台式机/笔记本电脑。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> detectDeviceType = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span>\n  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test\n  (navigator.userAgent)\n  ? <span class=\"string\">'Mobile'</span>\n  : <span class=\"string\">'Desktop'</span>;\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">detectDeviceType();  <span class=\"comment\">// Desktop</span>\n</code></pre>\n<p></p>\n<h3 id=\"elementContains\"><a href=\"#elementContains\" class=\"headerlink\" title=\"elementContains\"></a>elementContains</h3><p>如果父元素包含子元素，则返回<code>true</code>，否则返回<code>false</code>。<br>先检查父元素与子元素不是同一元素，再使用<code>parent.contains(child)</code>检查父元素是否包含子元素。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> elementContains = <span class=\"function\">(<span class=\"params\">parent, child</span>) =&gt;</span> \nparent !== child &amp;&amp; parent.contains(child);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">_query (tag){\n  <span class=\"keyword\">return</span> <span class=\"built_in\">document</span>.querySelector(tag)\n}\nelementContains(_query(<span class=\"string\">'head'</span>),  _query(<span class=\"string\">'title'</span>));  <span class=\"comment\">// true</span>\nelementContains(_query(<span class=\"string\">'body'</span>),  _query(<span class=\"string\">'body'</span>)); <span class=\"comment\">// false</span>\n</code></pre>\n<p></p>\n<h3 id=\"getScrollPosition\"><a href=\"#getScrollPosition\" class=\"headerlink\" title=\"getScrollPosition\"></a>getScrollPosition</h3><p>返回当前页面的滚动位置。<br>如果已定义，则使用<code>pageXOffset</code>和<code>pageYOffset</code>，否则使用<code>scrollLeft</code>和<code>scrollTop</code>。 您可以省略<code>el</code>以使用窗口的默认值。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> getScrollPosition = <span class=\"function\">(<span class=\"params\">el = <span class=\"built_in\">window</span></span>) =&gt;</span> ({\n  x: el.pageXOffset !== <span class=\"literal\">undefined</span> ? el.pageXOffset : el.scrollLeft,\n  y: el.pageYOffset !== <span class=\"literal\">undefined</span> ? el.pageYOffset : el.scrollTop\n});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">getScrollPosition(); <span class=\"comment\">// {x: 0, y: 200}</span>\n</code></pre>\n<p></p>\n<h3 id=\"getStyle\"><a href=\"#getStyle\" class=\"headerlink\" title=\"getStyle\"></a>getStyle</h3><p>返回指定元素的CSS规则的值。<br>使用<code>Window.getComputedStyle()</code>获取指定元素的CSS规则的值。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> getStyle = <span class=\"function\">(<span class=\"params\">el, ruleName</span>) =&gt;</span> getComputedStyle(el)[ruleName];\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">getStyle(<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'p'</span>), <span class=\"string\">'font-size'</span>); <span class=\"comment\">// '16px'</span>\n</code></pre>\n<p></p>\n<h3 id=\"hasClass\"><a href=\"#hasClass\" class=\"headerlink\" title=\"hasClass\"></a>hasClass</h3><p>如果元素具有指定的类，则返回<code>true</code>，否则返回<code>false</code>。<br>使用<code>element.classList.contains()</code>检查元素是否具有指定的类。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> hasClass = <span class=\"function\">(<span class=\"params\">el, className</span>) =&gt;</span> el.classList.contains(className);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">hasClass(<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'p.special'</span>), <span class=\"string\">'special'</span>); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h2 id=\"⏱️-Date\"><a href=\"#⏱️-Date\" class=\"headerlink\" title=\"⏱️ Date\"></a>⏱️ Date</h2><h3 id=\"formatDuration\"><a href=\"#formatDuration\" class=\"headerlink\" title=\"formatDuration\"></a>formatDuration</h3><p>返回给定毫秒数的可读格式。</p>\n<p>将<code>ms</code>除以适当的值，以获得白天，小时，分钟，秒和毫秒的可读值。<br>使用 <code>Object.entries()<code>和<code>Array.prototype.filter()<code>仅保留非零值。<br>使用<code>Array.prototype.map()<code>为每个值创建字符串。<br>使用<code>String.prototype.join(‘,’)<code>将值组合成一个字符串。</code></code></code></code></code></code></code></code></p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> formatDuration = <span class=\"function\"><span class=\"params\">ms</span> =&gt;</span> {\n  <span class=\"keyword\">if</span> (ms &lt; <span class=\"number\">0</span>) ms = -ms;\n  <span class=\"keyword\">const</span> time = {\n    day: <span class=\"built_in\">Math</span>.floor(ms / <span class=\"number\">86400000</span>),\n    hour: <span class=\"built_in\">Math</span>.floor(ms / <span class=\"number\">3600000</span>) % <span class=\"number\">24</span>,\n    minute: <span class=\"built_in\">Math</span>.floor(ms / <span class=\"number\">60000</span>) % <span class=\"number\">60</span>,\n    second: <span class=\"built_in\">Math</span>.floor(ms / <span class=\"number\">1000</span>) % <span class=\"number\">60</span>,\n    millisecond: <span class=\"built_in\">Math</span>.floor(ms) % <span class=\"number\">1000</span>\n  };\n  <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.entries(time)\n    .filter(<span class=\"function\"><span class=\"params\">val</span> =&gt;</span> val[<span class=\"number\">1</span>] !== <span class=\"number\">0</span>)\n    .map(<span class=\"function\">(<span class=\"params\">[key, val]</span>) =&gt;</span> <span class=\"string\">`<span class=\"subst\">${val}</span> <span class=\"subst\">${key}</span><span class=\"subst\">${val !== <span class=\"number\">1</span> ? <span class=\"string\">'s'</span> : <span class=\"string\">''</span>}</span>`</span>)\n    .join(<span class=\"string\">', '</span>);\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">formatDuration(<span class=\"number\">1001</span>); <span class=\"comment\">// '1 second, 1 millisecond'</span>\nformatDuration(<span class=\"number\">34325055574</span>); \n<span class=\"comment\">// '397 days, 6 hours, 44 minutes, 15 seconds, 574 milliseconds'</span>\n</code></pre>\n<p></p>\n<h2 id=\"🎛️-Function\"><a href=\"#🎛️-Function\" class=\"headerlink\" title=\"🎛️ Function\"></a>🎛️ Function</h2><h3 id=\"debounce\"><a href=\"#debounce\" class=\"headerlink\" title=\"debounce\"></a>debounce</h3><p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> debounce = <span class=\"function\">(<span class=\"params\">fn, ms = <span class=\"number\">0</span></span>) =&gt;</span> {\n  <span class=\"keyword\">let</span> timeoutId;\n  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">...args</span>) </span>{\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> fn.apply(<span class=\"keyword\">this</span>, args), ms);\n  };\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"built_in\">window</span>.addEventListener(\n  <span class=\"string\">'resize'</span>,\n  debounce(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> {\n    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.innerWidth);\n    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.innerHeight);\n  }, <span class=\"number\">250</span>)\n); <span class=\"comment\">// Will log the window dimensions at most every 250ms</span>\n</code></pre>\n<p></p>\n<h3 id=\"throttle\"><a href=\"#throttle\" class=\"headerlink\" title=\"throttle\"></a>throttle</h3><p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> throttle = <span class=\"function\">(<span class=\"params\">fn, wait</span>) =&gt;</span> {\n  <span class=\"keyword\">let</span> inThrottle, lastFn, lastTime;\n  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{\n    <span class=\"keyword\">const</span> context = <span class=\"keyword\">this</span>,\n      args = <span class=\"built_in\">arguments</span>;\n    <span class=\"keyword\">if</span> (!inThrottle) {\n      fn.apply(context, args);\n      lastTime = <span class=\"built_in\">Date</span>.now();\n      inThrottle = <span class=\"literal\">true</span>;\n    } <span class=\"keyword\">else</span> {\n      clearTimeout(lastFn);\n      lastFn = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>{\n        <span class=\"keyword\">if</span> (<span class=\"built_in\">Date</span>.now() - lastTime &gt;= wait) {\n          fn.apply(context, args);\n          lastTime = <span class=\"built_in\">Date</span>.now();\n        }\n      }, <span class=\"built_in\">Math</span>.max(wait - (<span class=\"built_in\">Date</span>.now() - lastTime), <span class=\"number\">0</span>));\n    }\n  };\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"built_in\">window</span>.addEventListener(\n  <span class=\"string\">'resize'</span>,\n  throttle(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">evt</span>) </span>{\n    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.innerWidth);\n    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.innerHeight);\n  }, <span class=\"number\">250</span>)\n); <span class=\"comment\">// Will log the window dimensions at most every 250ms</span>\n</code></pre>\n<p></p>\n<h2 id=\"➗-Math\"><a href=\"#➗-Math\" class=\"headerlink\" title=\"➗ Math\"></a>➗ Math</h2><h3 id=\"distance\"><a href=\"#distance\" class=\"headerlink\" title=\"distance\"></a>distance</h3><p>返回两点之间的距离。<br>使用<code>Math.hypot()</code>计算两点之间的欧几里德距离。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> distance = <span class=\"function\">(<span class=\"params\">x0, y0, x1, y1</span>) =&gt;</span> <span class=\"built_in\">Math</span>.hypot(x1 - x0, y1 - y0);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">distance(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 2.23606797749979</span>\n</code></pre>\n<p></p>\n<h3 id=\"factorial\"><a href=\"#factorial\" class=\"headerlink\" title=\"factorial\"></a>factorial</h3><p>使用递归计算数字的阶乘。<br>如果<code>n</code>小于或等于1，则返回1。否则，返回<code>n</code>的乘积和<code>n  -  1</code>的阶乘。如果<code>n</code>是负数，则抛出异常。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> factorial = <span class=\"function\"><span class=\"params\">n</span> =&gt;</span>\n  n &lt; <span class=\"number\">0</span>\n    ? <span class=\"function\">(<span class=\"params\">(</span>) =&gt;</span> {\n      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">'Negative numbers are not allowed!'</span>);\n    })()\n    : n &lt;= <span class=\"number\">1</span>\n      ? <span class=\"number\">1</span>\n      : n * factorial(n - <span class=\"number\">1</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">factorial(<span class=\"number\">6</span>); <span class=\"comment\">// 720</span>\n</code></pre>\n<p></p>\n<h3 id=\"gcd\"><a href=\"#gcd\" class=\"headerlink\" title=\"gcd\"></a>gcd</h3><p>计算两个或多个数字/数组之间的最大公约数。<br>内部<code>_gcd</code>函数使用递归计算返回<code>y</code>的<code>GCD</code>和除法<code>x / y</code>的余数。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> gcd = <span class=\"function\">(<span class=\"params\">...arr</span>) =&gt;</span> {\n  <span class=\"keyword\">const</span> _gcd = <span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> (!y ? x : gcd(y, x % y));\n  <span class=\"keyword\">return</span> [...arr].reduce(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> _gcd(a, b));\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">gcd(<span class=\"number\">8</span>, <span class=\"number\">36</span>); <span class=\"comment\">// 4</span>\ngcd(...[<span class=\"number\">12</span>, <span class=\"number\">8</span>, <span class=\"number\">32</span>]); <span class=\"comment\">// 4</span>\n</code></pre>\n<p></p>\n<h3 id=\"randomIntArrayInRange\"><a href=\"#randomIntArrayInRange\" class=\"headerlink\" title=\"randomIntArrayInRange\"></a>randomIntArrayInRange</h3><p>返回指定范围内的n个随机整数的数组。<br>使用<code>Array.from()</code>创建一个特定长度的数组，<code>Math.random()</code>生成一个范围内的随机数，使用<code>Math.floor</code>向下取整。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> randomIntArrayInRange = <span class=\"function\">(<span class=\"params\">min, max, n = <span class=\"number\">1</span></span>) =&gt;</span>\n  <span class=\"built_in\">Array</span>.from({ <span class=\"attr\">length</span>: n }, () =&gt; \n  <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * (max - min + <span class=\"number\">1</span>)) + min);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">randomIntArrayInRange(<span class=\"number\">12</span>, <span class=\"number\">35</span>, <span class=\"number\">10</span>); <span class=\"comment\">// [ 34, 14, 27, 17, 30, 27, 20, 26, 21, 14 ]</span>\n</code></pre>\n<p></p>\n<h3 id=\"sum\"><a href=\"#sum\" class=\"headerlink\" title=\"sum\"></a>sum</h3><p>返回数组的总和。<br>使用<code>Array.prototype.reduce()</code>将每个值累加，使用值0初始化。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> sum = <span class=\"function\">(<span class=\"params\">...arr</span>) =&gt;</span> [...arr].reduce(<span class=\"function\">(<span class=\"params\">acc, val</span>) =&gt;</span> acc + val, <span class=\"number\">0</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">sum(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>); <span class=\"comment\">// 10</span>\nsum(...[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]); <span class=\"comment\">// 10</span>\n</code></pre>\n<p></p>\n<h2 id=\"🗃️-Object\"><a href=\"#🗃️-Object\" class=\"headerlink\" title=\"🗃️ Object\"></a>🗃️ Object</h2><h3 id=\"deepClone\"><a href=\"#deepClone\" class=\"headerlink\" title=\"deepClone\"></a>deepClone</h3><p>创建对象的深克隆。<br>使用<code>Object.assign()</code>和空对象<code>({})</code>创建原始的浅层克隆。<br>使用<code>Object.keys()</code>和<code>Array.prototype.forEach()</code>来确定需要深度克隆的键值对。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> deepClone = <span class=\"function\"><span class=\"params\">obj</span> =&gt;</span> {\n  <span class=\"keyword\">let</span> clone = <span class=\"built_in\">Object</span>.assign({}, obj);\n  <span class=\"built_in\">Object</span>.keys(clone).forEach(\n    key =&gt; (clone[key] = <span class=\"keyword\">typeof</span> obj[key] === <span class=\"string\">'object'</span>\n     ? deepClone(obj[key]) \n     : obj[key])\n  );\n  <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.isArray(obj) \n  ? (clone.length = obj.length) &amp;&amp; <span class=\"built_in\">Array</span>.from(clone) \n  : clone;\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> a = { <span class=\"attr\">foo</span>: <span class=\"string\">'bar'</span>, <span class=\"attr\">obj</span>: { <span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span> } };\n<span class=\"keyword\">const</span> b = deepClone(a); <span class=\"comment\">// a !== b, a.obj !== b.obj</span>\n</code></pre>\n<p></p>\n<h3 id=\"flattenObject\"><a href=\"#flattenObject\" class=\"headerlink\" title=\"flattenObject\"></a>flattenObject</h3><p>展平对象。<br>使用<code>Object.keys(obj)</code>与<code>Array.prototype.reduce()</code>结合将每个叶节点转换为展平路径节点。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> flattenObject = <span class=\"function\">(<span class=\"params\">obj, prefix = <span class=\"string\">''</span></span>) =&gt;</span>\n  <span class=\"built_in\">Object</span>.keys(obj).reduce(<span class=\"function\">(<span class=\"params\">acc, k</span>) =&gt;</span> {\n    <span class=\"keyword\">const</span> pre = prefix.length ? prefix + <span class=\"string\">'.'</span> : <span class=\"string\">''</span>;\n    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj[k] === <span class=\"string\">'object'</span>) {\n    <span class=\"built_in\">Object</span>.assign(acc, flattenObject(obj[k], pre + k))\n    };\n    <span class=\"keyword\">else</span> acc[pre + k] = obj[k];\n    <span class=\"keyword\">return</span> acc;\n  }, {});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">flattenObject({ <span class=\"attr\">a</span>: { <span class=\"attr\">b</span>: { <span class=\"attr\">c</span>: <span class=\"number\">1</span> } }, <span class=\"attr\">d</span>: <span class=\"number\">1</span> }); <span class=\"comment\">// { 'a.b.c': 1, d: 1 }</span>\n</code></pre>\n<p></p>\n<h3 id=\"mapKeys\"><a href=\"#mapKeys\" class=\"headerlink\" title=\"mapKeys\"></a>mapKeys</h3><p>创建一个对象，其中包含通过为每个键运行提供的函数生成的键以及与提供的对象相同的值。<br>使用<code>Object.keys(obj)</code>迭代对象的键。<br>使用Array.prototype.reduce()使用<code>fn</code>创建具有相同值和映射键的新对象。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> mapKeys = <span class=\"function\">(<span class=\"params\">obj, fn</span>) =&gt;</span>\n  <span class=\"built_in\">Object</span>.keys(obj).reduce(<span class=\"function\">(<span class=\"params\">acc, k</span>) =&gt;</span> {\n    acc[fn(obj[k], k, obj)] = obj[k];\n    <span class=\"keyword\">return</span> acc;\n  }, {});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">mapKeys({ <span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span> }, (val, key) =&gt; key + val); <span class=\"comment\">// { a1: 1, b2: 2 }</span>\n</code></pre>\n<p></p>\n<h3 id=\"mapValues\"><a href=\"#mapValues\" class=\"headerlink\" title=\"mapValues\"></a>mapValues</h3><p>使用与提供的对象相同的键创建对象，并通过为每个值运行提供的函数生成值。<br>使用<code>Object.keys(obj)</code>迭代对象的键。<br>使用<code>Array.prototype.reduce()</code>。<br>使用<code>fn</code>创建具有相同键和映射值的新对象。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> mapValues = <span class=\"function\">(<span class=\"params\">obj, fn</span>) =&gt;</span>\n  <span class=\"built_in\">Object</span>.keys(obj).reduce(<span class=\"function\">(<span class=\"params\">acc, k</span>) =&gt;</span> {\n    acc[k] = fn(obj[k], k, obj);\n    <span class=\"keyword\">return</span> acc;\n  }, {});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> users = {\n  fred: { <span class=\"attr\">user</span>: <span class=\"string\">'fred'</span>, <span class=\"attr\">age</span>: <span class=\"number\">40</span> },\n  pebbles: { <span class=\"attr\">user</span>: <span class=\"string\">'pebbles'</span>, <span class=\"attr\">age</span>: <span class=\"number\">1</span> }\n};\nmapValues(users, u =&gt; u.age); <span class=\"comment\">// { fred: 40, pebbles: 1 }</span>\n</code></pre>\n<p></p>\n<h3 id=\"objectFromPairs\"><a href=\"#objectFromPairs\" class=\"headerlink\" title=\"objectFromPairs\"></a>objectFromPairs</h3><p>根据给定的键值对创建对象。<br>使用<code>Array.prototype.reduce()</code>创建对象。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> objectFromPairs = <span class=\"function\"><span class=\"params\">arr</span> =&gt;</span> \narr.reduce(<span class=\"function\">(<span class=\"params\">a, [key, val]</span>) =&gt;</span> ((a[key] = val), a), {});\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">objectFromPairs([[<span class=\"string\">'a'</span>, <span class=\"number\">1</span>], [<span class=\"string\">'b'</span>, <span class=\"number\">2</span>]]); <span class=\"comment\">// {a: 1, b: 2}</span>\n</code></pre>\n<p></p>\n<h3 id=\"objectToPairs\"><a href=\"#objectToPairs\" class=\"headerlink\" title=\"objectToPairs\"></a>objectToPairs</h3><p>从对象创建键值对数组的数组。<br>使用<code>Object.keys()</code>和<code>Array.prototype.map()</code>迭代对象的键并生成数组。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> objectToPairs = <span class=\"function\"><span class=\"params\">obj</span> =&gt;</span> <span class=\"built_in\">Object</span>.keys(obj).map(<span class=\"function\"><span class=\"params\">k</span> =&gt;</span> [k, obj[k]]);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">objectToPairs({ <span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span> }); <span class=\"comment\">// [ ['a', 1], ['b', 2] ]</span>\n</code></pre>\n<p></p>\n<h2 id=\"📜-String\"><a href=\"#📜-String\" class=\"headerlink\" title=\"📜 String\"></a>📜 String</h2><h3 id=\"fromCamelCase\"><a href=\"#fromCamelCase\" class=\"headerlink\" title=\"fromCamelCase\"></a>fromCamelCase</h3><p>转换字符串。<br>使用<code>String.prototype.replace()</code>删除下划线，连字符和空格，并将单词转换为<code>camelcase</code>。 省略第二个参数以使用<code>_</code>的默认分隔符。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> fromCamelCase = <span class=\"function\">(<span class=\"params\">str, separator = <span class=\"string\">'_'</span></span>) =&gt;</span>\n  str\n    .replace(<span class=\"regexp\">/([a-z\\d])([A-Z])/g</span>, <span class=\"string\">'$1'</span> + separator + <span class=\"string\">'$2'</span>)\n    .replace(<span class=\"regexp\">/([A-Z]+)([A-Z][a-z\\d]+)/g</span>, <span class=\"string\">'$1'</span> + separator + <span class=\"string\">'$2'</span>)\n    .toLowerCase();\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">fromCamelCase(<span class=\"string\">'someDatabaseFieldName'</span>, <span class=\"string\">' '</span>); \n<span class=\"comment\">// 'some database field name'</span>\nfromCamelCase(<span class=\"string\">'someLabelThatNeedsToBeCamelized'</span>, <span class=\"string\">'-'</span>); \n<span class=\"comment\">// 'some-label-that-needs-to-be-camelized'</span>\nfromCamelCase(<span class=\"string\">'someJavascriptProperty'</span>, <span class=\"string\">'_'</span>); \n<span class=\"comment\">// 'some_javascript_property'</span>\n</code></pre>\n<p></p>\n<h3 id=\"isAnagram\"><a href=\"#isAnagram\" class=\"headerlink\" title=\"isAnagram\"></a>isAnagram</h3><p>检查字符串是否是另一个字符串的字谜。<br>使用<code>String.toLowerCase()</code>和<code>String.prototype.replace()</code>删除不必要的字符。<br>使用<code>String.prototype.split(‘’)</code>和<code>Array.prototype.sort()</code>和<code>Array.prototype.join(‘’)</code>检查是否相等。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> isAnagram = <span class=\"function\">(<span class=\"params\">str1, str2</span>) =&gt;</span> {\n  <span class=\"keyword\">const</span> normalize = <span class=\"function\"><span class=\"params\">str</span> =&gt;</span>\n    str\n      .toLowerCase()\n      .replace(<span class=\"regexp\">/[^a-z0-9]/gi</span>, <span class=\"string\">''</span>)\n      .split(<span class=\"string\">''</span>)\n      .sort()\n      .join(<span class=\"string\">''</span>);\n  <span class=\"keyword\">return</span> normalize(str1) === normalize(str2);\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">isAnagram(<span class=\"string\">'iceman'</span>, <span class=\"string\">'cinema'</span>); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"mask\"><a href=\"#mask\" class=\"headerlink\" title=\"mask\"></a>mask</h3><p>使用指定的掩码字符替换除最后一个字符数之外的所有字符。<br>使用<code>String.prototype.slice()</code>来获取将保持未屏蔽的字符部分。<br>使用<code>String.padStart()</code>以掩码字符填充字符串的开头，直到原始长度。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> mask = <span class=\"function\">(<span class=\"params\">cc, num = <span class=\"number\">4</span>, mask = <span class=\"string\">'*'</span></span>) =&gt;</span> \n<span class=\"string\">`<span class=\"subst\">${cc}</span>`</span>.slice(-num).padStart(<span class=\"string\">`<span class=\"subst\">${cc}</span>`</span>.length, mask);\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">mask(<span class=\"number\">1234567890</span>); <span class=\"comment\">// '******7890'</span>\nmask(<span class=\"number\">1234567890</span>, <span class=\"number\">3</span>); <span class=\"comment\">// '*******890'</span>\nmask(<span class=\"number\">1234567890</span>, <span class=\"number\">-4</span>, <span class=\"string\">'$'</span>); <span class=\"comment\">// '$$$$567890'</span>\n</code></pre>\n<p></p>\n<h3 id=\"reverseString\"><a href=\"#reverseString\" class=\"headerlink\" title=\"reverseString\"></a>reverseString</h3><p>反转字符串。<br>使用展开运算符<code>(…)</code>和Array.prototype.reverse()来反转字符串中字符的顺序。<br>使用<code>String.prototype.join(‘’)</code>转换成字符串。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> reverseString = <span class=\"function\"><span class=\"params\">str</span> =&gt;</span> [...str].reverse().join(<span class=\"string\">''</span>);\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">reverseString(<span class=\"string\">'foobar'</span>); <span class=\"comment\">// 'raboof'</span>\n</code></pre>\n<p></p>\n<h3 id=\"stripHTMLTags\"><a href=\"#stripHTMLTags\" class=\"headerlink\" title=\"stripHTMLTags\"></a>stripHTMLTags</h3><p>从字符串中删除<code>HTML / XML</code>标记。<br>使用正则表达式从字符串中删除<code>HTML / XML</code>标记。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> stripHTMLTags = <span class=\"function\"><span class=\"params\">str</span> =&gt;</span> str.replace(<span class=\"regexp\">/&lt;[^&gt;]*&gt;/g</span>, <span class=\"string\">''</span>);\n};\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">stripHTMLTags(<span class=\"string\">'&lt;p&gt;&lt;em&gt;lorem&lt;/em&gt; &lt;em&gt;ipsum&lt;/em&gt;&lt;/p&gt;'</span>); \n<span class=\"comment\">// 'lorem ipsum'</span>\n</code></pre>\n<p></p>\n<h3 id=\"toKebabCase\"><a href=\"#toKebabCase\" class=\"headerlink\" title=\"toKebabCase\"></a>toKebabCase</h3><p>字符串转换为烤肉串案例。<br>将字符串分解为单词并将它们组合添加<code> - </code>使用正则表达式作为分隔符。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> toKebabCase = <span class=\"function\"><span class=\"params\">str</span> =&gt;</span>\n  str &amp;&amp;\n  str\n    .match(<span class=\"regexp\">/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g</span>)\n    .map(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x.toLowerCase())\n    .join(<span class=\"string\">'-'</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">toKebabCase(<span class=\"string\">'camelCase'</span>); <span class=\"comment\">// 'camel-case'</span>\ntoKebabCase(<span class=\"string\">'some text'</span>); <span class=\"comment\">// 'some-text'</span>\ntoKebabCase(<span class=\"string\">'some-mixed_string With spaces_underscores-and-hyphens'</span>); \n<span class=\"comment\">// 'some-mixed-string-with-spaces-underscores-and-hyphens'</span>\ntoKebabCase(<span class=\"string\">'AllThe-small Things'</span>); \n<span class=\"comment\">// \"all-the-small-things\"</span>\ntoKebabCase(<span class=\"string\">'IAmListeningToFMWhileLoadingDifferentURLOnMyBrowser'</span>); \n<span class=\"comment\">// \"i-am-listening-to-fm-while-loading-different-url-on-my-browser\"</span>\n</code></pre>\n<p></p>\n<h3 id=\"words\"><a href=\"#words\" class=\"headerlink\" title=\"words\"></a>words</h3><p>将给定的字符串转换为单词数组。<br>使用<code>String.prototype.split()</code>与默认为非字母作为正则使用，以转换为字符串数组。<br>使用<code>Array.prototype.filter()</code>删除任何空字符串。 默认的正则为<code>/[^a-zA-Z-]+/</code>。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> words = <span class=\"function\">(<span class=\"params\">str, pattern = <span class=\"regexp\">/[^a-zA-Z-]+/</span></span>) =&gt;</span> \nstr.split(pattern).filter(<span class=\"built_in\">Boolean</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">words(<span class=\"string\">'I love javaScript!!'</span>); <span class=\"comment\">// [\"I\", \"love\", \"javaScript\"]</span>\nwords(<span class=\"string\">'python, javaScript &amp; coffee'</span>); <span class=\"comment\">// [\"python\", \"javaScript\", \"coffee\"]</span>\n</code></pre>\n<p></p>\n<h2 id=\"🔧-Utility\"><a href=\"#🔧-Utility\" class=\"headerlink\" title=\"🔧 Utility\"></a>🔧 Utility</h2><h3 id=\"RGBToHex\"><a href=\"#RGBToHex\" class=\"headerlink\" title=\"RGBToHex\"></a>RGBToHex</h3><p>将<code>RGB</code>值转换为颜色代码。<br>使用按位左移运算符<code>(&lt;&lt;)</code>和<code>toString(16)</code>。<br>使用<code>String.padStart(6，’0’)</code>将RGB参数转换为十六进制字符串，以获得6位十六进制值。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> RGBToHex = <span class=\"function\">(<span class=\"params\">r, g, b</span>) =&gt;</span>\n((r &lt;&lt; <span class=\"number\">16</span>) + (g &lt;&lt; <span class=\"number\">8</span>) + b).toString(<span class=\"number\">16</span>).padStart(<span class=\"number\">6</span>, <span class=\"string\">'0'</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">RGBToHex(<span class=\"number\">255</span>, <span class=\"number\">165</span>, <span class=\"number\">1</span>); <span class=\"comment\">// 'ffa501'</span>\n</code></pre>\n<p></p>\n<h3 id=\"toDecimalMarkc\"><a href=\"#toDecimalMarkc\" class=\"headerlink\" title=\"toDecimalMarkc\"></a>toDecimalMarkc</h3><p>使用<code>toLocaleString()</code>将浮点运算转换为Decimal标记形式——使用逗号分隔字符串与数字。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> toDecimalMark = <span class=\"function\"><span class=\"params\">num</span> =&gt;</span> num.toLocaleString(<span class=\"string\">'en-US'</span>);\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">toDecimalMark(<span class=\"number\">12305030388.9087</span>); <span class=\"comment\">// \"12,305,030,388.909\"</span>\n</code></pre>\n<p></p>\n<h3 id=\"validateNumber\"><a href=\"#validateNumber\" class=\"headerlink\" title=\"validateNumber\"></a>validateNumber</h3><p>如果给定值是数字，则返回true，否则返回false。<br>使用<code>!isNaN()</code>与<code>parseFloat()</code>判断参数是否为数字。<br>使用<code>isFinite()</code>判断数字是否有限数字。<br>使用<code>Number()</code>判断类型是否为数字。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> validateNumber = <span class=\"function\"><span class=\"params\">n</span> =&gt;</span> \n!<span class=\"built_in\">isNaN</span>(<span class=\"built_in\">parseFloat</span>(n)) &amp;&amp; <span class=\"built_in\">isFinite</span>(n) &amp;&amp; <span class=\"built_in\">Number</span>(n) == n;\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">validateNumber(<span class=\"string\">'10'</span>); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>\n<h3 id=\"yesNo\"><a href=\"#yesNo\" class=\"headerlink\" title=\"yesNo\"></a>yesNo</h3><p>如果字符串是<code>y / yes</code>则返回<code>true</code>，如果字符串是<code>n / no</code>，则返回<code>false</code>。<br>使用<code>RegExp.test()</code>检查字符串是否为<code>y / yes</code>或<code>n / no</code>。 <code>def</code>默认为no。</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\"><span class=\"keyword\">const</span> yesNo = <span class=\"function\">(<span class=\"params\">val, def = <span class=\"literal\">false</span></span>) =&gt;</span>\n  /^(y|yes)$/i.test(val) ? <span class=\"literal\">true</span> : <span class=\"regexp\">/^(n|no)$/i</span>.test(val) ? <span class=\"literal\">false</span> : def;\n</code></pre>\n<p></p>\n<p>🌰栗子：</p>\n<p><samp></samp></p>\n<pre><code class=\"JAVASCRIPT\">yesNo(<span class=\"string\">'Y'</span>); <span class=\"comment\">// true</span>\nyesNo(<span class=\"string\">'yes'</span>); <span class=\"comment\">// true</span>\nyesNo(<span class=\"string\">'No'</span>); <span class=\"comment\">// false</span>\nyesNo(<span class=\"string\">'Foo'</span>, <span class=\"literal\">true</span>); <span class=\"comment\">// true</span>\n</code></pre>\n<p></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjvozd9xu0001kcvc959tissy","category_id":"cjvozd9y10005kcvc5o1uwpf3","_id":"cjvozd9yf000jkcvc1cjvyak0"},{"post_id":"cjvozd9xz0003kcvc1cu1llcr","category_id":"cjvozd9yb000ckcvcecg2rvhp","_id":"cjvozd9yn000tkcvc5co30r3n"},{"post_id":"cjvozd9yf000ikcvcm146k727","category_id":"cjvozd9yb000ckcvcecg2rvhp","_id":"cjvozd9yp000xkcvcoqbfqs8s"},{"post_id":"cjvozd9yi000nkcvcevcdkz3u","category_id":"cjvozd9yb000ckcvcecg2rvhp","_id":"cjvozd9yr0010kcvci7zqgnjr"},{"post_id":"cjvozd9y30007kcvcskc0svy1","category_id":"cjvozd9yb000ckcvcecg2rvhp","_id":"cjvozd9ys0013kcvc6jsnxr0r"},{"post_id":"cjvozd9yo000vkcvc8kfwrdy9","category_id":"cjvozd9yb000ckcvcecg2rvhp","_id":"cjvozd9yt0015kcvc4f3ef799"},{"post_id":"cjvozd9y60009kcvc51t3cnf8","category_id":"cjvozd9ym000skcvcphbxu7u1","_id":"cjvozd9yu0018kcvc0d9l2wal"},{"post_id":"cjvozd9yq000zkcvci5eh8veq","category_id":"cjvozd9ym000skcvcphbxu7u1","_id":"cjvozd9yu001akcvcrm435qm5"},{"post_id":"cjvozd9y9000bkcvck3r5wr9c","category_id":"cjvozd9ym000skcvcphbxu7u1","_id":"cjvozd9yu001ckcvcy0zlxzvr"},{"post_id":"cjvozd9yd000gkcvcssmqwnog","category_id":"cjvozd9yt0016kcvcwk7hw56v","_id":"cjvozd9yv001ekcvc57sebvdg"},{"post_id":"cjvozd9yl000qkcvcpkai1ny4","category_id":"cjvozd9yu001bkcvcr9jch6bz","_id":"cjvozd9yw001hkcvcb0bh9uh2"},{"post_id":"cjvozda44001zkcvc9kyrd6s2","category_id":"cjvozd9y10005kcvc5o1uwpf3","_id":"cjvozda460021kcvcxmdgpwnz"}],"PostTag":[{"post_id":"cjvozd9xu0001kcvc959tissy","tag_id":"cjvozd9y30006kcvc8bvrghs7","_id":"cjvozd9yd000fkcvcg8wopevi"},{"post_id":"cjvozd9xz0003kcvc1cu1llcr","tag_id":"cjvozd9yb000dkcvcb66jm02g","_id":"cjvozd9yj000okcvcjpvpdh9p"},{"post_id":"cjvozd9y30007kcvcskc0svy1","tag_id":"cjvozd9yh000mkcvcfja5tber","_id":"cjvozd9yp000ykcvc0om4agmd"},{"post_id":"cjvozd9y60009kcvc51t3cnf8","tag_id":"cjvozd9yn000ukcvc1dk4zkj9","_id":"cjvozd9ys0014kcvc1uhqxdod"},{"post_id":"cjvozd9y9000bkcvck3r5wr9c","tag_id":"cjvozd9yr0012kcvc4tjrd3wm","_id":"cjvozd9yu0019kcvc99v049c9"},{"post_id":"cjvozd9yd000gkcvcssmqwnog","tag_id":"cjvozd9yt0017kcvc038th4mb","_id":"cjvozd9yv001gkcvcikmgpskr"},{"post_id":"cjvozd9yd000gkcvcssmqwnog","tag_id":"cjvozd9yv001dkcvcuuz98eqd","_id":"cjvozd9yw001ikcvcvzt3hgtr"},{"post_id":"cjvozd9yf000ikcvcm146k727","tag_id":"cjvozd9yv001dkcvcuuz98eqd","_id":"cjvozd9yx001kkcvcch3kdvtm"},{"post_id":"cjvozd9yf000ikcvcm146k727","tag_id":"cjvozd9y30006kcvc8bvrghs7","_id":"cjvozd9yx001lkcvc8ejfcosd"},{"post_id":"cjvozd9yi000nkcvcevcdkz3u","tag_id":"cjvozd9yv001dkcvcuuz98eqd","_id":"cjvozd9yx001nkcvc8eyi0ddl"},{"post_id":"cjvozd9yl000qkcvcpkai1ny4","tag_id":"cjvozd9yx001mkcvcevpwu8jm","_id":"cjvozd9yy001pkcvcitrsegla"},{"post_id":"cjvozd9yo000vkcvc8kfwrdy9","tag_id":"cjvozd9yx001okcvc18s7imvi","_id":"cjvozd9yy001rkcvcw02z7zah"},{"post_id":"cjvozd9yq000zkcvci5eh8veq","tag_id":"cjvozd9yy001qkcvc4vcchx3y","_id":"cjvozd9yy001skcvc5o4ivc8t"},{"post_id":"cjvozd9yq000zkcvci5eh8veq","tag_id":"cjvozd9yn000ukcvc1dk4zkj9","_id":"cjvozd9yz001tkcvc32pcyh85"},{"post_id":"cjvozda44001zkcvc9kyrd6s2","tag_id":"cjvozda450020kcvct26wsht7","_id":"cjvozda470023kcvceoi4o0zg"},{"post_id":"cjvozda44001zkcvc9kyrd6s2","tag_id":"cjvozda460022kcvcne3vl1zc","_id":"cjvozda470024kcvcjg4xnoxr"}],"Tag":[{"name":"git","_id":"cjvozd9y30006kcvc8bvrghs7"},{"name":"React","_id":"cjvozd9yb000dkcvcb66jm02g"},{"name":"VuePress","_id":"cjvozd9yh000mkcvcfja5tber"},{"name":"日常","_id":"cjvozd9yn000ukcvc1dk4zkj9"},{"name":"毕业","_id":"cjvozd9yr0012kcvc4tjrd3wm"},{"name":"前端","_id":"cjvozd9yt0017kcvc038th4mb"},{"name":"hexo","_id":"cjvozd9yv001dkcvcuuz98eqd"},{"name":"路飞","_id":"cjvozd9yx001mkcvcevpwu8jm"},{"name":"原型链","_id":"cjvozd9yx001okcvc18s7imvi"},{"name":"2018","_id":"cjvozd9yy001qkcvc4vcchx3y"},{"name":"js","_id":"cjvozda450020kcvct26wsht7"},{"name":"30secondsofcode","_id":"cjvozda460022kcvcne3vl1zc"}]}}